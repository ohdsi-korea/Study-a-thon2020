cohort_name,cohort_full_name,cohort_id,sql,json
121,[COVID ID121 V1] Prevalent Asthma or Chronic obstructive pulmonary disease (COPD),121,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (255573,258780)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (255573,258780)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (317009,4235703,4279553)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (317009,4235703,4279553)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (42483138,36812530,40727741,1356123,40142665,46234463,1356111,1356108,40142703,36421291,40745353,36787954,21158944,36894458,21090035,36883710,35130061,40142784,42479684,35133500,783228,40142910,36787269,1356143,35135829,1356140,44120754,41205832,40924271,40986621,40830666,41205663,40861866,43274335,43263324,43621601,1356154,1356147,40143105,43134418,40727834,36811735,40861768,40727839,35150375,44081619,36811485,1356213,40143214,1356217,1356215,1356101,42800913,40143326,36894464,44817882,40143337,42941603,35146684,35160199,44029688,42481922,36813480,36812414,1356244,21150787,44082127,41206083,42873412,44069324,41236953,1356138,1356136,40152662,40156382,41048760,40754973,21089505,40144020,36882733,42482744,40144024,792484,40755794,37592046,43532281,43291091,41267401,40144035,35147990,35149212,40144037,40223712,42629522,42480849,1356191,1356187,44107471,43145868,43259954,1356196,35145836,43292583,1356199,42479568,1356211,44055847,44081467,1356120,40182262,40746092,21026290,46275343,40746100,21174574,45775117,40861610,36810762,35147090,41205378,40152687,40167702,35158799,783089,1356189,42482075,42482607,1356250,45774773,36421515,37592341,44785908,43263899,41267166,45774869,43285708,41142750)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (42483138,36812530,40727741,1356123,40142665,46234463,1356111,1356108,40142703,36421291,40745353,36787954,21158944,36894458,21090035,36883710,35130061,40142784,42479684,35133500,783228,40142910,36787269,1356143,35135829,1356140,44120754,41205832,40924271,40986621,40830666,41205663,40861866,43274335,43263324,43621601,1356154,1356147,40143105,43134418,40727834,36811735,40861768,40727839,35150375,44081619,36811485,1356213,40143214,1356217,1356215,1356101,42800913,40143326,36894464,44817882,40143337,42941603,35146684,35160199,44029688,42481922,36813480,36812414,1356244,21150787,44082127,41206083,42873412,44069324,41236953,1356138,1356136,40152662,40156382,41048760,40754973,21089505,40144020,36882733,42482744,40144024,792484,40755794,37592046,43532281,43291091,41267401,40144035,35147990,35149212,40144037,40223712,42629522,42480849,1356191,1356187,44107471,43145868,43259954,1356196,35145836,43292583,1356199,42479568,1356211,44055847,44081467,1356120,40182262,40746092,21026290,46275343,40746100,21174574,45775117,40861610,36810762,35147090,41205378,40152687,40167702,35158799,783089,1356189,42482075,42482607,1356250,45774773,36421515,37592341,44785908,43263899,41267166,45774869,43285708,41142750)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.target_concept_id, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Drug Exposure Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= DATEADD(day,180,P.START_DATE) AND A.START_DATE <= DATEADD(day,365,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;





TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 3,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""DrugExposure"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""DrugExposure"" : {
										""CodesetId"" : 4,
										""DrugTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 180,
										""Coeff"" : 1
									},
									""End"" : {
										""Days"" : 365,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : true,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 4,
					""DrugTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : "" Chronic obstructive lung disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 255573,
							""CONCEPT_NAME"" : ""Chronic obstructive lung disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""13645005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 258780,
							""CONCEPT_NAME"" : ""Emphysematous bronchitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""185086009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Asthma"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 317009,
							""CONCEPT_NAME"" : ""Asthma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""195967001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4235703,
							""CONCEPT_NAME"" : ""Asthma management"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""406162001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4279553,
							""CONCEPT_NAME"" : ""Eosinophilic asthma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""367542003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""Respiratory therapy"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248314e+07,
							""CONCEPT_NAME"" : ""Albuterol / Beclomethasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418868"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681253e+07,
							""CONCEPT_NAME"" : ""Albuterol / Beclomethasone Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4826562"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.072774e+07,
							""CONCEPT_NAME"" : ""Albuterol / Ipratropium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4729368"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356123,
							""CONCEPT_NAME"" : ""Albuterol / Ipratropium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108259"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014267e+07,
							""CONCEPT_NAME"" : ""Albuterol / Ipratropium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""745734"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.623446e+07,
							""CONCEPT_NAME"" : ""Albuterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1649559"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356111,
							""CONCEPT_NAME"" : ""Albuterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108233"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356108,
							""CONCEPT_NAME"" : ""Albuterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108226"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.01427e+07,
							""CONCEPT_NAME"" : ""Albuterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""745678"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.642129e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol / glycopyrronium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4763575"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.074535e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol / glycopyrronium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4711820"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.678795e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol / glycopyrronium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4776216"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.115894e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP286058"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.689446e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1002030"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.109004e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP286036"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.688371e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1004751"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.513006e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4787320"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014278e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746190"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.247968e+07,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419122"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.51335e+07,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4790710"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 783228,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4831059"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014291e+07,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""745797"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.678727e+07,
							""CONCEPT_NAME"" : ""Budesonide / salmeterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4775534"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356143,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108302"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.513583e+07,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4793016"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356140,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Suspension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108295"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.412075e+07,
							""CONCEPT_NAME"" : ""Budesonide Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1115385"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.120583e+07,
							""CONCEPT_NAME"" : ""Butanilicaine / Epinephrine Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2403794"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.092427e+07,
							""CONCEPT_NAME"" : ""Butanilicaine / Norepinephrine Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2122233"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.098662e+07,
							""CONCEPT_NAME"" : ""Carbuterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2184583"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.083067e+07,
							""CONCEPT_NAME"" : ""Cromoglycate / Isoproterenol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2028628"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.120566e+07,
							""CONCEPT_NAME"" : ""Cromoglycate / reproterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2403625"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.086187e+07,
							""CONCEPT_NAME"" : ""Cromoglycate / reproterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2059828"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.327434e+07,
							""CONCEPT_NAME"" : ""Cromoglycate Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP551853"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.326332e+07,
							""CONCEPT_NAME"" : ""Cromoglycate Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP551855"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.36216e+07,
							""CONCEPT_NAME"" : ""Cromolyn / reproterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP956780"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356154,
							""CONCEPT_NAME"" : ""Cromolyn Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108327"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356147,
							""CONCEPT_NAME"" : ""Cromolyn Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108316"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014311e+07,
							""CONCEPT_NAME"" : ""Cromolyn Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746181"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.313442e+07,
							""CONCEPT_NAME"" : ""Fenoterol / Ipratropium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP443574"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.072783e+07,
							""CONCEPT_NAME"" : ""Fenoterol / Ipratropium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4729268"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681174e+07,
							""CONCEPT_NAME"" : ""Fenoterol / Ipratropium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4825769"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.086177e+07,
							""CONCEPT_NAME"" : ""Fenoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2059730"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.072784e+07,
							""CONCEPT_NAME"" : ""Fenoterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4729263"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.515038e+07,
							""CONCEPT_NAME"" : ""Fenoterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4807426"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.408162e+07,
							""CONCEPT_NAME"" : ""Fenoterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1076250"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681149e+07,
							""CONCEPT_NAME"" : ""Ipratropium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4825521"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356213,
							""CONCEPT_NAME"" : ""Ipratropium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108449"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014321e+07,
							""CONCEPT_NAME"" : ""Ipratropium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746447"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356217,
							""CONCEPT_NAME"" : ""Isoetharine Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108457"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356215,
							""CONCEPT_NAME"" : ""Isoetharine Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108453"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356101,
							""CONCEPT_NAME"" : ""Isoproterenol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108199"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.280091e+07,
							""CONCEPT_NAME"" : ""Isoproterenol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1299671"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014333e+07,
							""CONCEPT_NAME"" : ""Mometasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746792"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.689446e+07,
							""CONCEPT_NAME"" : ""Mometasone Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP994725"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.481788e+07,
							""CONCEPT_NAME"" : ""Mometasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1536141"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014334e+07,
							""CONCEPT_NAME"" : ""Nedocromil Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""748721"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.29416e+07,
							""CONCEPT_NAME"" : ""Procaterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4668248"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514668e+07,
							""CONCEPT_NAME"" : ""Procaterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4803760"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.51602e+07,
							""CONCEPT_NAME"" : ""Procaterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4817177"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.402969e+07,
							""CONCEPT_NAME"" : ""Procaterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1024319"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248192e+07,
							""CONCEPT_NAME"" : ""Terbutaline Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418565"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681348e+07,
							""CONCEPT_NAME"" : ""Terbutaline Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4827512"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681241e+07,
							""CONCEPT_NAME"" : ""Terbutaline Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4826446"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356244,
							""CONCEPT_NAME"" : ""Terbutaline Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108534"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.115079e+07,
							""CONCEPT_NAME"" : ""aclidinium / formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP365897"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.408213e+07,
							""CONCEPT_NAME"" : ""aclidinium / formoterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1076758"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.120608e+07,
							""CONCEPT_NAME"" : ""aclidinium / formoterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2404045"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.287341e+07,
							""CONCEPT_NAME"" : ""aclidinium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1303101"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.406932e+07,
							""CONCEPT_NAME"" : ""aclidinium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1063955"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.123695e+07,
							""CONCEPT_NAME"" : ""aclidinium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2434915"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356138,
							""CONCEPT_NAME"" : ""bitolterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108291"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356136,
							""CONCEPT_NAME"" : ""bitolterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108287"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.015266e+07,
							""CONCEPT_NAME"" : ""ciclesonide Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""799033"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.015638e+07,
							""CONCEPT_NAME"" : ""flunisolide Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""828926"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.104876e+07,
							""CONCEPT_NAME"" : ""fluticasone / formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2246722"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.075497e+07,
							""CONCEPT_NAME"" : ""fluticasone / formoterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4702057"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.108951e+07,
							""CONCEPT_NAME"" : ""fluticasone / formoterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP357047"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014402e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746717"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.688273e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP994600"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248274e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419713"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014402e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""744485"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 792484,
							""CONCEPT_NAME"" : ""fluticasone / umeclidinium / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1945037"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.075579e+07,
							""CONCEPT_NAME"" : ""fluticasone / umeclidinium / vilanterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4701920"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.759205e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4781501"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353228e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1424887"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.329109e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP557209"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.12674e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2465363"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014404e+07,
							""CONCEPT_NAME"" : ""fluticasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746765"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514799e+07,
							""CONCEPT_NAME"" : ""fluticasone Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4805056"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514921e+07,
							""CONCEPT_NAME"" : ""fluticasone Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4806270"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014404e+07,
							""CONCEPT_NAME"" : ""fluticasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746403"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.022371e+07,
							""CONCEPT_NAME"" : ""formoterol / Mometasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""998040"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.262952e+07,
							""CONCEPT_NAME"" : ""formoterol / glycopyrronium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1790637"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248085e+07,
							""CONCEPT_NAME"" : ""formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419273"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356191,
							""CONCEPT_NAME"" : ""formoterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108402"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356187,
							""CONCEPT_NAME"" : ""formoterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108395"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.410747e+07,
							""CONCEPT_NAME"" : ""formoterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1102102"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.314587e+07,
							""CONCEPT_NAME"" : ""glycopyrronium / indacaterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP448437"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.325995e+07,
							""CONCEPT_NAME"" : ""glycopyrronium / indacaterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP573715"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356196,
							""CONCEPT_NAME"" : ""glycopyrronium / indacaterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108413"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514584e+07,
							""CONCEPT_NAME"" : ""glycopyrronium / indacaterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4802923"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.329258e+07,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP573663"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356199,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108419"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.247957e+07,
							""CONCEPT_NAME"" : ""indacaterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418726"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356211,
							""CONCEPT_NAME"" : ""indacaterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108445"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.405585e+07,
							""CONCEPT_NAME"" : ""indacaterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1050478"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.408147e+07,
							""CONCEPT_NAME"" : ""metaproterenol Gas for Inhalation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1076098"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356120,
							""CONCEPT_NAME"" : ""metaproterenol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108252"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.018226e+07,
							""CONCEPT_NAME"" : ""metaproterenol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""979330"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.074609e+07,
							""CONCEPT_NAME"" : ""olodaterol / tiotropium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4711610"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.102629e+07,
							""CONCEPT_NAME"" : ""olodaterol / tiotropium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP256714"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.627534e+07,
							""CONCEPT_NAME"" : ""olodaterol / tiotropium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1658459"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.07461e+07,
							""CONCEPT_NAME"" : ""olodaterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4711602"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.117457e+07,
							""CONCEPT_NAME"" : ""olodaterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP275394"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577512e+07,
							""CONCEPT_NAME"" : ""olodaterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1546062"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.086161e+07,
							""CONCEPT_NAME"" : ""oxitropium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2059572"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681076e+07,
							""CONCEPT_NAME"" : ""oxitropium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4824799"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514709e+07,
							""CONCEPT_NAME"" : ""oxitropium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4804165"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.120538e+07,
							""CONCEPT_NAME"" : ""pirbuterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2403340"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.015269e+07,
							""CONCEPT_NAME"" : ""pirbuterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""801916"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.01677e+07,
							""CONCEPT_NAME"" : ""salmeterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""866043"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.51588e+07,
							""CONCEPT_NAME"" : ""salmeterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4815788"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 783089,
							""CONCEPT_NAME"" : ""salmeterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4830921"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356189,
							""CONCEPT_NAME"" : ""salmeterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108399"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248208e+07,
							""CONCEPT_NAME"" : ""tiotropium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419850"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248261e+07,
							""CONCEPT_NAME"" : ""tiotropium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419849"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356250,
							""CONCEPT_NAME"" : ""tiotropium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108544"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577477e+07,
							""CONCEPT_NAME"" : ""tiotropium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1552001"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.642152e+07,
							""CONCEPT_NAME"" : ""umeclidinium / umeclidinium / vilanterol / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4763797"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.759234e+07,
							""CONCEPT_NAME"" : ""umeclidinium / umeclidinium / vilanterol / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4781790"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.478591e+07,
							""CONCEPT_NAME"" : ""umeclidinium / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1487517"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.32639e+07,
							""CONCEPT_NAME"" : ""umeclidinium / vilanterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP557201"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.126717e+07,
							""CONCEPT_NAME"" : ""umeclidinium / vilanterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2465128"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577487e+07,
							""CONCEPT_NAME"" : ""umeclidinium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1539250"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.328571e+07,
							""CONCEPT_NAME"" : ""umeclidinium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP557191"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.114275e+07,
							""CONCEPT_NAME"" : ""umeclidinium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2340712"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
122,[COVID ID122 V1] Asthma/COPD Step 1,122,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (43009091,1154161,43009065,1111706)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (43009091,1154161,43009065,1111706)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45774869,42873412,1356250,44069324,41236953,42482075,42482607,45774773,43179057,43292583,1356199,1356202,35149223,43285708,41142750)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45774869,42873412,1356250,44069324,41236953,42482075,42482607,45774773,43179057,43292583,1356199,1356202,35149223,43285708,41142750)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (42483253,44081549,36811485,1356213,40143214,36250065,40861610,36810762,35147090)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (42483253,44081549,36811485,1356213,40143214,36250065,40861610,36810762,35147090)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (46234463,1356111,1356108,40142703,1356103,40143276,36813480,36812414,41205378,40152687)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (46234463,1356111,1356108,40142703,1356103,40143276,36813480,36812414,41205378,40152687)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (1356191,1356187,40167702,35158799,783089,1356189,42479568,1356211,44055847,40746100,21174574,45775117,43180317,43024344)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (1356191,1356187,40167702,35158799,783089,1356189,42479568,1356211,44055847,40746100,21174574,45775117,43180317,43024344)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (42480194,36883710,35130061,40142784,40142920,1356143,35135829,1356140,44120754,40143326,36894464,40892816,44817882,40144035,35147990,35149212,41080160,40144037)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (42480194,36883710,35130061,40142784,40142920,1356143,35135829,1356140,44120754,40143326,36894464,40892816,44817882,40144035,35147990,35149212,41080160,40144037)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (42483138,36812530,36421291,40745353,36787954,21158944,36894458,21090035,42479684,35133500,783228,40142910,36787269,36250078,41048760,40754973,21089505,40144020,36882733,42482744,40144024,792484,40755794,37592046,43532281,43291091,41267401,40223712)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (42483138,36812530,36421291,40745353,36787954,21158944,36894458,21090035,42479684,35133500,783228,40142910,36787269,36250078,41048760,40754973,21089505,40144020,36882733,42482744,40144024,792484,40755794,37592046,43532281,43291091,41267401,40223712)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (42483253,44081549,36811485,1356213,40143214,36250065,40861610,36810762,35147090,42483253,44081549,36811485,1356213,40143214,36250065,40861610,36810762,35147090,46234463,1356111,1356108,40142703,1356103,40143276,41205378,40152687,36813480,36812414)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (42483253,44081549,36811485,1356213,40143214,36250065,40861610,36810762,35147090,42483253,44081549,36811485,1356213,40143214,36250065,40861610,36810762,35147090,46234463,1356111,1356108,40142703,1356103,40143276,41205378,40152687,36813480,36812414)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Drug Exposure Criteria

UNION ALL
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Drug Exposure Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 5
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- custom era strategy

with ctePersons(person_id) as (
	select distinct person_id from #included_events
)

select person_id, drug_exposure_start_date, drug_exposure_end_date
INTO #drugTarget
FROM (
	select de.PERSON_ID, DRUG_EXPOSURE_START_DATE,  COALESCE(DRUG_EXPOSURE_END_DATE, DATEADD(day,DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,DRUG_EXPOSURE_START_DATE)) as DRUG_EXPOSURE_END_DATE 
	FROM @cdm_database_schema.DRUG_EXPOSURE de
	JOIN ctePersons p on de.person_id = p.person_id
	JOIN #Codesets cs on cs.codeset_id = 9 AND de.drug_concept_id = cs.concept_id

	UNION ALL

	select de.PERSON_ID, DRUG_EXPOSURE_START_DATE,  COALESCE(DRUG_EXPOSURE_END_DATE, DATEADD(day,DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,DRUG_EXPOSURE_START_DATE)) as DRUG_EXPOSURE_END_DATE 
	FROM @cdm_database_schema.DRUG_EXPOSURE de
	JOIN ctePersons p on de.person_id = p.person_id
	JOIN #Codesets cs on cs.codeset_id = 9 AND de.drug_source_concept_id = cs.concept_id
) E
;

select et.event_id, et.person_id, ERAS.era_end_date as end_date
INTO #strategy_ends
from #included_events et
JOIN 
(
  select ENDS.person_id, min(drug_exposure_start_date) as era_start_date, DATEADD(day,0, ENDS.era_end_date) as era_end_date
  from
  (
    select de.person_id, de.drug_exposure_start_date, MIN(e.END_DATE) as era_end_date
    FROM #drugTarget DE
    JOIN 
    (
      --cteEndDates
      select PERSON_ID, DATEADD(day,-1 * 30,EVENT_DATE) as END_DATE -- unpad the end date by 30
      FROM
      (
				select PERSON_ID, EVENT_DATE, EVENT_TYPE, 
				MAX(START_ORDINAL) OVER (PARTITION BY PERSON_ID ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal,
				ROW_NUMBER() OVER (PARTITION BY PERSON_ID ORDER BY EVENT_DATE, EVENT_TYPE) AS OVERALL_ORD -- this re-numbers the inner UNION so all rows are numbered ordered by the event date
				from
				(
					-- select the start dates, assigning a row number to each
					Select PERSON_ID, DRUG_EXPOSURE_START_DATE AS EVENT_DATE, 0 as EVENT_TYPE, ROW_NUMBER() OVER (PARTITION BY PERSON_ID ORDER BY DRUG_EXPOSURE_START_DATE) as START_ORDINAL
					from #drugTarget D

					UNION ALL

					-- add the end dates with NULL as the row number, padding the end dates by 30 to allow a grace period for overlapping ranges.
					select PERSON_ID, DATEADD(day,30,DRUG_EXPOSURE_END_DATE), 1 as EVENT_TYPE, NULL
					FROM #drugTarget D
				) RAWDATA
      ) E
      WHERE 2 * E.START_ORDINAL - E.OVERALL_ORD = 0
    ) E on DE.PERSON_ID = E.PERSON_ID and E.END_DATE >= DE.DRUG_EXPOSURE_START_DATE
    GROUP BY de.person_id, de.drug_exposure_start_date
  ) ENDS
  GROUP BY ENDS.person_id, ENDS.era_end_date
) ERAS on ERAS.person_id = et.person_id 
WHERE et.start_date between ERAS.era_start_date and ERAS.era_end_date;

TRUNCATE TABLE #drugTarget;
DROP TABLE #drugTarget;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
UNION ALL
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

UNION ALL
-- Censor Events
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Drug Exposure Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id

UNION ALL
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id

UNION ALL
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C


-- End Drug Exposure Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id

UNION ALL
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Drug Exposure Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id

UNION ALL
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Drug Exposure Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id


),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""DrugExposure"" : {
					""CodesetId"" : 5,
					""DrugTypeExclude"" : false
				}
			},
			{
				""DrugExposure"" : {
					""CodesetId"" : 4,
					""DrugTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 1,
			""name"" : ""Leukotriene receptor antagonists\n"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.300909e+07,
							""CONCEPT_NAME"" : ""ibudilast"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4700517"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1154161,
							""CONCEPT_NAME"" : ""montelukast"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""88249"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.300907e+07,
							""CONCEPT_NAME"" : ""pranlukast hydrate"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4700491"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1111706,
							""CONCEPT_NAME"" : ""zafirlukast"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""114970"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""LAMA"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577487e+07,
							""CONCEPT_NAME"" : ""umeclidinium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1539250"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.287341e+07,
							""CONCEPT_NAME"" : ""aclidinium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1303101"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356250,
							""CONCEPT_NAME"" : ""tiotropium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108544"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.406932e+07,
							""CONCEPT_NAME"" : ""aclidinium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1063955"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.123695e+07,
							""CONCEPT_NAME"" : ""aclidinium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2434915"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248208e+07,
							""CONCEPT_NAME"" : ""tiotropium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419850"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248261e+07,
							""CONCEPT_NAME"" : ""tiotropium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419849"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577477e+07,
							""CONCEPT_NAME"" : ""tiotropium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1552001"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.317906e+07,
							""CONCEPT_NAME"" : ""glycopyrronium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP448423"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.329258e+07,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP573663"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356199,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108419"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356202,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108425"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514922e+07,
							""CONCEPT_NAME"" : ""glycopyrronium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4806281"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.328571e+07,
							""CONCEPT_NAME"" : ""umeclidinium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP557191"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.114275e+07,
							""CONCEPT_NAME"" : ""umeclidinium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2340712"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""SAMA"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248325e+07,
							""CONCEPT_NAME"" : ""Ipratropium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419928"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.408155e+07,
							""CONCEPT_NAME"" : ""Ipratropium Gas for Inhalation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1076180"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681149e+07,
							""CONCEPT_NAME"" : ""Ipratropium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4825521"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356213,
							""CONCEPT_NAME"" : ""Ipratropium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108449"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014321e+07,
							""CONCEPT_NAME"" : ""Ipratropium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746447"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.625007e+07,
							""CONCEPT_NAME"" : ""Ipratropium Metered Dose Nasal Spray"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1797832"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.086161e+07,
							""CONCEPT_NAME"" : ""oxitropium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2059572"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681076e+07,
							""CONCEPT_NAME"" : ""oxitropium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4824799"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514709e+07,
							""CONCEPT_NAME"" : ""oxitropium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4804165"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""SABA"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.623446e+07,
							""CONCEPT_NAME"" : ""Albuterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1649559"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356111,
							""CONCEPT_NAME"" : ""Albuterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108233"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356108,
							""CONCEPT_NAME"" : ""Albuterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108226"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.01427e+07,
							""CONCEPT_NAME"" : ""Albuterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""745678"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356103,
							""CONCEPT_NAME"" : ""Levalbuterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108209"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014328e+07,
							""CONCEPT_NAME"" : ""Levalbuterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""745790"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681348e+07,
							""CONCEPT_NAME"" : ""Terbutaline Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4827512"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681241e+07,
							""CONCEPT_NAME"" : ""Terbutaline Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4826446"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.120538e+07,
							""CONCEPT_NAME"" : ""pirbuterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2403340"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.015269e+07,
							""CONCEPT_NAME"" : ""pirbuterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""801916"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""LABA"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356191,
							""CONCEPT_NAME"" : ""formoterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108402"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356187,
							""CONCEPT_NAME"" : ""formoterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108395"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.01677e+07,
							""CONCEPT_NAME"" : ""salmeterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""866043"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.51588e+07,
							""CONCEPT_NAME"" : ""salmeterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4815788"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 783089,
							""CONCEPT_NAME"" : ""salmeterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4830921"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356189,
							""CONCEPT_NAME"" : ""salmeterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108399"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.247957e+07,
							""CONCEPT_NAME"" : ""indacaterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418726"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356211,
							""CONCEPT_NAME"" : ""indacaterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108445"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.405585e+07,
							""CONCEPT_NAME"" : ""indacaterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1050478"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.07461e+07,
							""CONCEPT_NAME"" : ""olodaterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4711602"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.117457e+07,
							""CONCEPT_NAME"" : ""olodaterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP275394"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577512e+07,
							""CONCEPT_NAME"" : ""olodaterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1546062"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.318032e+07,
							""CONCEPT_NAME"" : ""vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP459635"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.302434e+07,
							""CONCEPT_NAME"" : ""vilanterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4849893"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""ICS"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248019e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418867"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.688371e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1004751"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.513006e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4787320"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014278e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746190"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014292e+07,
							""CONCEPT_NAME"" : ""Budesonide Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746824"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356143,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108302"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.513583e+07,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4793016"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356140,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Suspension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108295"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.412075e+07,
							""CONCEPT_NAME"" : ""Budesonide Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1115385"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014333e+07,
							""CONCEPT_NAME"" : ""Mometasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746792"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.689446e+07,
							""CONCEPT_NAME"" : ""Mometasone Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP994725"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.089282e+07,
							""CONCEPT_NAME"" : ""Mometasone Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2090778"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.481788e+07,
							""CONCEPT_NAME"" : ""Mometasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1536141"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014404e+07,
							""CONCEPT_NAME"" : ""fluticasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746765"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514799e+07,
							""CONCEPT_NAME"" : ""fluticasone Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4805056"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514921e+07,
							""CONCEPT_NAME"" : ""fluticasone Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4806270"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.108016e+07,
							""CONCEPT_NAME"" : ""fluticasone Injectable Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2278122"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014404e+07,
							""CONCEPT_NAME"" : ""fluticasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746403"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""combo"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248314e+07,
							""CONCEPT_NAME"" : ""Albuterol / Beclomethasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418868"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681253e+07,
							""CONCEPT_NAME"" : ""Albuterol / Beclomethasone Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4826562"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.642129e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol / glycopyrronium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4763575"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.074535e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol / glycopyrronium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4711820"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.678795e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol / glycopyrronium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4776216"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.115894e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP286058"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.689446e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1002030"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.109004e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP286036"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.247968e+07,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419122"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.51335e+07,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4790710"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 783228,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4831059"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014291e+07,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""745797"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.678727e+07,
							""CONCEPT_NAME"" : ""Budesonide / salmeterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4775534"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.625008e+07,
							""CONCEPT_NAME"" : ""azelastine / fluticasone Metered Dose Nasal Spray"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1797846"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.104876e+07,
							""CONCEPT_NAME"" : ""fluticasone / formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2246722"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.075497e+07,
							""CONCEPT_NAME"" : ""fluticasone / formoterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4702057"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.108951e+07,
							""CONCEPT_NAME"" : ""fluticasone / formoterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP357047"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014402e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746717"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.688273e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP994600"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248274e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419713"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014402e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""744485"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 792484,
							""CONCEPT_NAME"" : ""fluticasone / umeclidinium / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1945037"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.075579e+07,
							""CONCEPT_NAME"" : ""fluticasone / umeclidinium / vilanterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4701920"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.759205e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4781501"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353228e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1424887"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.329109e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP557209"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.12674e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2465363"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.022371e+07,
							""CONCEPT_NAME"" : ""formoterol / Mometasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""998040"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""SABA + SAMA"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248325e+07,
							""CONCEPT_NAME"" : ""Ipratropium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419928"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.408155e+07,
							""CONCEPT_NAME"" : ""Ipratropium Gas for Inhalation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1076180"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681149e+07,
							""CONCEPT_NAME"" : ""Ipratropium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4825521"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356213,
							""CONCEPT_NAME"" : ""Ipratropium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108449"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014321e+07,
							""CONCEPT_NAME"" : ""Ipratropium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746447"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.625007e+07,
							""CONCEPT_NAME"" : ""Ipratropium Metered Dose Nasal Spray"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1797832"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.086161e+07,
							""CONCEPT_NAME"" : ""oxitropium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2059572"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681076e+07,
							""CONCEPT_NAME"" : ""oxitropium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4824799"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514709e+07,
							""CONCEPT_NAME"" : ""oxitropium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4804165"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248325e+07,
							""CONCEPT_NAME"" : ""Ipratropium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419928"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.408155e+07,
							""CONCEPT_NAME"" : ""Ipratropium Gas for Inhalation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1076180"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681149e+07,
							""CONCEPT_NAME"" : ""Ipratropium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4825521"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356213,
							""CONCEPT_NAME"" : ""Ipratropium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108449"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014321e+07,
							""CONCEPT_NAME"" : ""Ipratropium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746447"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.625007e+07,
							""CONCEPT_NAME"" : ""Ipratropium Metered Dose Nasal Spray"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1797832"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.086161e+07,
							""CONCEPT_NAME"" : ""oxitropium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2059572"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681076e+07,
							""CONCEPT_NAME"" : ""oxitropium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4824799"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514709e+07,
							""CONCEPT_NAME"" : ""oxitropium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4804165"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.623446e+07,
							""CONCEPT_NAME"" : ""Albuterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1649559"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356111,
							""CONCEPT_NAME"" : ""Albuterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108233"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356108,
							""CONCEPT_NAME"" : ""Albuterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108226"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.01427e+07,
							""CONCEPT_NAME"" : ""Albuterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""745678"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356103,
							""CONCEPT_NAME"" : ""Levalbuterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108209"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014328e+07,
							""CONCEPT_NAME"" : ""Levalbuterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""745790"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.120538e+07,
							""CONCEPT_NAME"" : ""pirbuterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2403340"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.015269e+07,
							""CONCEPT_NAME"" : ""pirbuterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""801916"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681348e+07,
							""CONCEPT_NAME"" : ""Terbutaline Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4827512"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681241e+07,
							""CONCEPT_NAME"" : ""Terbutaline Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4826446"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""No ICS or LABA or LAMA"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""DrugExposure"" : {
								""CodesetId"" : 7,
								""DrugTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""DrugExposure"" : {
								""CodesetId"" : 6,
								""DrugTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""DrugExposure"" : {
								""CodesetId"" : 3,
								""DrugTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""DrugExposure"" : {
								""CodesetId"" : 8,
								""DrugTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""DrugExposure"" : {
								""CodesetId"" : 1,
								""DrugTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""CustomEra"" : {
			""DrugCodesetId"" : 9,
			""GapDays"" : 30,
			""Offset"" : 0
		}
	},
	""CensoringCriteria"" : [
		{
			""DrugExposure"" : {
				""CodesetId"" : 8,
				""DrugTypeExclude"" : false
			}
		},
		{
			""DrugExposure"" : {
				""CodesetId"" : 7,
				""DrugTypeExclude"" : false
			}
		},
		{
			""DrugExposure"" : {
				""CodesetId"" : 6,
				""DrugTypeExclude"" : false
			}
		},
		{
			""DrugExposure"" : {
				""CodesetId"" : 3,
				""DrugTypeExclude"" : false
			}
		},
		{
			""DrugExposure"" : {
				""CodesetId"" : 1,
				""DrugTypeExclude"" : false
			}
		}
	],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
123,[COVID ID123 V1] Asthma/COPD Step 2,123,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45774869,42873412,1356250,44069324,41236953,42482075,42482607,45774773,43179057,43292583,1356199,1356202,35149223,43285708,41142750)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45774869,42873412,1356250,44069324,41236953,42482075,42482607,45774773,43179057,43292583,1356199,1356202,35149223,43285708,41142750)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (1356191,1356187,40167702,35158799,783089,1356189,42479568,1356211,44055847,40746100,21174574,45775117,43180317,43024344)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (1356191,1356187,40167702,35158799,783089,1356189,42479568,1356211,44055847,40746100,21174574,45775117,43180317,43024344)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (42480194,36883710,35130061,40142784,40142920,1356143,35135829,1356140,44120754,40143326,36894464,40892816,44817882,40144035,35147990,35149212,41080160,40144037)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (42480194,36883710,35130061,40142784,40142920,1356143,35135829,1356140,44120754,40143326,36894464,40892816,44817882,40144035,35147990,35149212,41080160,40144037)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (42483138,36812530,36421291,40745353,36787954,21158944,36894458,21090035,42479684,35133500,783228,40142910,36787269,36250078,41048760,40754973,21089505,40144020,36882733,42482744,40144024,792484,40755794,37592046,43532281,43291091,41267401,40223712)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (42483138,36812530,36421291,40745353,36787954,21158944,36894458,21090035,42479684,35133500,783228,40142910,36787269,41048760,40754973,21089505,40144020,36882733,42482744,40144024,792484,40755794,37592046,43532281,43291091,41267401,40223712)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (42873412,44069324,41236953,43179057,43292583,1356199,1356202,35149223,42482075,42482607,1356250,45774773,45774869,43285708,41142750,1356191,1356187,42479568,1356211,44055847,40746100,21174574,45775117,40167702,35158799,783089,1356189,43180317,43024344,42480194,36883710,35130061,40142784,40142920,1356143,35135829,1356140,44120754,40143326,36894464,40892816,44817882,40144035,35147990,35149212,41080160,40144037)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (42873412,44069324,41236953,43179057,43292583,1356199,1356202,35149223,42482075,42482607,1356250,45774773,45774869,43285708,41142750,1356191,1356187,42479568,1356211,44055847,40746100,21174574,45775117,40167702,35158799,783089,1356189,43180317,43024344,42480194,36883710,35130061,40142784,40142920,1356143,35135829,1356140,44120754,40143326,36894464,40892816,44817882,40144035,35147990,35149212,41080160,40144037)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.target_concept_id, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C


-- End Drug Exposure Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.target_concept_id, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Drug Exposure Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.target_concept_id, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- custom era strategy

with ctePersons(person_id) as (
	select distinct person_id from #included_events
)

select person_id, drug_exposure_start_date, drug_exposure_end_date
INTO #drugTarget
FROM (
	select de.PERSON_ID, DRUG_EXPOSURE_START_DATE,  COALESCE(DRUG_EXPOSURE_END_DATE, DATEADD(day,DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,DRUG_EXPOSURE_START_DATE)) as DRUG_EXPOSURE_END_DATE 
	FROM @cdm_database_schema.DRUG_EXPOSURE de
	JOIN ctePersons p on de.person_id = p.person_id
	JOIN #Codesets cs on cs.codeset_id = 9 AND de.drug_concept_id = cs.concept_id

	UNION ALL

	select de.PERSON_ID, DRUG_EXPOSURE_START_DATE,  COALESCE(DRUG_EXPOSURE_END_DATE, DATEADD(day,DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,DRUG_EXPOSURE_START_DATE)) as DRUG_EXPOSURE_END_DATE 
	FROM @cdm_database_schema.DRUG_EXPOSURE de
	JOIN ctePersons p on de.person_id = p.person_id
	JOIN #Codesets cs on cs.codeset_id = 9 AND de.drug_source_concept_id = cs.concept_id
) E
;

select et.event_id, et.person_id, ERAS.era_end_date as end_date
INTO #strategy_ends
from #included_events et
JOIN 
(
  select ENDS.person_id, min(drug_exposure_start_date) as era_start_date, DATEADD(day,0, ENDS.era_end_date) as era_end_date
  from
  (
    select de.person_id, de.drug_exposure_start_date, MIN(e.END_DATE) as era_end_date
    FROM #drugTarget DE
    JOIN 
    (
      --cteEndDates
      select PERSON_ID, DATEADD(day,-1 * 30,EVENT_DATE) as END_DATE -- unpad the end date by 30
      FROM
      (
				select PERSON_ID, EVENT_DATE, EVENT_TYPE, 
				MAX(START_ORDINAL) OVER (PARTITION BY PERSON_ID ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal,
				ROW_NUMBER() OVER (PARTITION BY PERSON_ID ORDER BY EVENT_DATE, EVENT_TYPE) AS OVERALL_ORD -- this re-numbers the inner UNION so all rows are numbered ordered by the event date
				from
				(
					-- select the start dates, assigning a row number to each
					Select PERSON_ID, DRUG_EXPOSURE_START_DATE AS EVENT_DATE, 0 as EVENT_TYPE, ROW_NUMBER() OVER (PARTITION BY PERSON_ID ORDER BY DRUG_EXPOSURE_START_DATE) as START_ORDINAL
					from #drugTarget D

					UNION ALL

					-- add the end dates with NULL as the row number, padding the end dates by 30 to allow a grace period for overlapping ranges.
					select PERSON_ID, DATEADD(day,30,DRUG_EXPOSURE_END_DATE), 1 as EVENT_TYPE, NULL
					FROM #drugTarget D
				) RAWDATA
      ) E
      WHERE 2 * E.START_ORDINAL - E.OVERALL_ORD = 0
    ) E on DE.PERSON_ID = E.PERSON_ID and E.END_DATE >= DE.DRUG_EXPOSURE_START_DATE
    GROUP BY de.person_id, de.drug_exposure_start_date
  ) ENDS
  GROUP BY ENDS.person_id, ENDS.era_end_date
) ERAS on ERAS.person_id = et.person_id 
WHERE et.start_date between ERAS.era_start_date and ERAS.era_end_date;

TRUNCATE TABLE #drugTarget;
DROP TABLE #drugTarget;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
UNION ALL
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

UNION ALL
-- Censor Events
select i.event_id, i.person_id, MIN(c.start_date) as end_date
FROM #included_events i
JOIN
(
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Drug Exposure Criteria

) C on C.person_id = I.person_id and C.start_date >= I.start_date and C.START_DATE <= I.op_end_date
GROUP BY i.event_id, i.person_id


),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""DrugExposure"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""DrugExposure"" : {
										""CodesetId"" : 3,
										""DrugTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 30,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 0,
									""Count"" : 0,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""DrugExposure"" : {
										""CodesetId"" : 7,
										""DrugTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 30,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 0,
									""Count"" : 0,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 6,
					""DrugTypeExclude"" : false
				}
			},
			{
				""DrugExposure"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""DrugExposure"" : {
										""CodesetId"" : 6,
										""DrugTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 30,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 0,
									""Count"" : 0,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""DrugExposure"" : {
										""CodesetId"" : 7,
										""DrugTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 30,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 0,
									""Count"" : 0,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 3,
					""DrugTypeExclude"" : false
				}
			},
			{
				""DrugExposure"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""DrugExposure"" : {
										""CodesetId"" : 3,
										""DrugTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 30,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 0,
									""Count"" : 0,
									""IsDistinct"" : false
								}
							},
							{
								""Criteria"" : {
									""DrugExposure"" : {
										""CodesetId"" : 6,
										""DrugTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 30,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 30,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 0,
									""Count"" : 0,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 7,
					""DrugTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 3,
			""name"" : ""LAMA"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577487e+07,
							""CONCEPT_NAME"" : ""umeclidinium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1539250"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.287341e+07,
							""CONCEPT_NAME"" : ""aclidinium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1303101"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356250,
							""CONCEPT_NAME"" : ""tiotropium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108544"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.406932e+07,
							""CONCEPT_NAME"" : ""aclidinium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1063955"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.123695e+07,
							""CONCEPT_NAME"" : ""aclidinium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2434915"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248208e+07,
							""CONCEPT_NAME"" : ""tiotropium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419850"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248261e+07,
							""CONCEPT_NAME"" : ""tiotropium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419849"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577477e+07,
							""CONCEPT_NAME"" : ""tiotropium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1552001"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.317906e+07,
							""CONCEPT_NAME"" : ""glycopyrronium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP448423"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.329258e+07,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP573663"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356199,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108419"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356202,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108425"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514922e+07,
							""CONCEPT_NAME"" : ""glycopyrronium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4806281"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.328571e+07,
							""CONCEPT_NAME"" : ""umeclidinium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP557191"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.114275e+07,
							""CONCEPT_NAME"" : ""umeclidinium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2340712"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""LABA"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356191,
							""CONCEPT_NAME"" : ""formoterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108402"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356187,
							""CONCEPT_NAME"" : ""formoterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108395"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.01677e+07,
							""CONCEPT_NAME"" : ""salmeterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""866043"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.51588e+07,
							""CONCEPT_NAME"" : ""salmeterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4815788"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 783089,
							""CONCEPT_NAME"" : ""salmeterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4830921"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356189,
							""CONCEPT_NAME"" : ""salmeterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108399"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.247957e+07,
							""CONCEPT_NAME"" : ""indacaterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418726"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356211,
							""CONCEPT_NAME"" : ""indacaterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108445"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.405585e+07,
							""CONCEPT_NAME"" : ""indacaterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1050478"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.07461e+07,
							""CONCEPT_NAME"" : ""olodaterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4711602"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.117457e+07,
							""CONCEPT_NAME"" : ""olodaterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP275394"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577512e+07,
							""CONCEPT_NAME"" : ""olodaterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1546062"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.318032e+07,
							""CONCEPT_NAME"" : ""vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP459635"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.302434e+07,
							""CONCEPT_NAME"" : ""vilanterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4849893"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""ICS"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248019e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418867"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.688371e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1004751"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.513006e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4787320"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014278e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746190"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014292e+07,
							""CONCEPT_NAME"" : ""Budesonide Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746824"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356143,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108302"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.513583e+07,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4793016"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356140,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Suspension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108295"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.412075e+07,
							""CONCEPT_NAME"" : ""Budesonide Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1115385"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014333e+07,
							""CONCEPT_NAME"" : ""Mometasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746792"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.689446e+07,
							""CONCEPT_NAME"" : ""Mometasone Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP994725"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.089282e+07,
							""CONCEPT_NAME"" : ""Mometasone Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2090778"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.481788e+07,
							""CONCEPT_NAME"" : ""Mometasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1536141"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014404e+07,
							""CONCEPT_NAME"" : ""fluticasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746765"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514799e+07,
							""CONCEPT_NAME"" : ""fluticasone Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4805056"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514921e+07,
							""CONCEPT_NAME"" : ""fluticasone Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4806270"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.108016e+07,
							""CONCEPT_NAME"" : ""fluticasone Injectable Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2278122"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014404e+07,
							""CONCEPT_NAME"" : ""fluticasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746403"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""Combo"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248314e+07,
							""CONCEPT_NAME"" : ""Albuterol / Beclomethasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418868"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681253e+07,
							""CONCEPT_NAME"" : ""Albuterol / Beclomethasone Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4826562"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.642129e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol / glycopyrronium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4763575"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.074535e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol / glycopyrronium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4711820"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.678795e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol / glycopyrronium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4776216"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.115894e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP286058"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.689446e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1002030"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.109004e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP286036"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.247968e+07,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419122"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.51335e+07,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4790710"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 783228,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4831059"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014291e+07,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""745797"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.678727e+07,
							""CONCEPT_NAME"" : ""Budesonide / salmeterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4775534"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.625008e+07,
							""CONCEPT_NAME"" : ""azelastine / fluticasone Metered Dose Nasal Spray"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1797846"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.104876e+07,
							""CONCEPT_NAME"" : ""fluticasone / formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2246722"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.075497e+07,
							""CONCEPT_NAME"" : ""fluticasone / formoterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4702057"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.108951e+07,
							""CONCEPT_NAME"" : ""fluticasone / formoterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP357047"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014402e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746717"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.688273e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP994600"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248274e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419713"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014402e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""744485"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 792484,
							""CONCEPT_NAME"" : ""fluticasone / umeclidinium / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1945037"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.075579e+07,
							""CONCEPT_NAME"" : ""fluticasone / umeclidinium / vilanterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4701920"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.759205e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4781501"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353228e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1424887"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.329109e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP557209"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.12674e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2465363"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.022371e+07,
							""CONCEPT_NAME"" : ""formoterol / Mometasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""998040"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""LABA + LAMA + ICS"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.287341e+07,
							""CONCEPT_NAME"" : ""aclidinium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1303101"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.406932e+07,
							""CONCEPT_NAME"" : ""aclidinium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1063955"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.123695e+07,
							""CONCEPT_NAME"" : ""aclidinium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2434915"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.317906e+07,
							""CONCEPT_NAME"" : ""glycopyrronium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP448423"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.329258e+07,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP573663"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356199,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108419"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356202,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108425"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514922e+07,
							""CONCEPT_NAME"" : ""glycopyrronium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4806281"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248208e+07,
							""CONCEPT_NAME"" : ""tiotropium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419850"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248261e+07,
							""CONCEPT_NAME"" : ""tiotropium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419849"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356250,
							""CONCEPT_NAME"" : ""tiotropium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108544"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577477e+07,
							""CONCEPT_NAME"" : ""tiotropium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1552001"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577487e+07,
							""CONCEPT_NAME"" : ""umeclidinium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1539250"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.328571e+07,
							""CONCEPT_NAME"" : ""umeclidinium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP557191"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.114275e+07,
							""CONCEPT_NAME"" : ""umeclidinium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2340712"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356191,
							""CONCEPT_NAME"" : ""formoterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108402"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356187,
							""CONCEPT_NAME"" : ""formoterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108395"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.247957e+07,
							""CONCEPT_NAME"" : ""indacaterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418726"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356211,
							""CONCEPT_NAME"" : ""indacaterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108445"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.405585e+07,
							""CONCEPT_NAME"" : ""indacaterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1050478"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.07461e+07,
							""CONCEPT_NAME"" : ""olodaterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4711602"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.117457e+07,
							""CONCEPT_NAME"" : ""olodaterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP275394"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577512e+07,
							""CONCEPT_NAME"" : ""olodaterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1546062"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.01677e+07,
							""CONCEPT_NAME"" : ""salmeterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""866043"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.51588e+07,
							""CONCEPT_NAME"" : ""salmeterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4815788"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 783089,
							""CONCEPT_NAME"" : ""salmeterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4830921"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356189,
							""CONCEPT_NAME"" : ""salmeterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108399"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.318032e+07,
							""CONCEPT_NAME"" : ""vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP459635"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.302434e+07,
							""CONCEPT_NAME"" : ""vilanterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4849893"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248019e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418867"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.688371e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1004751"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.513006e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4787320"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014278e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746190"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014292e+07,
							""CONCEPT_NAME"" : ""Budesonide Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746824"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356143,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108302"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.513583e+07,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4793016"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356140,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Suspension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108295"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.412075e+07,
							""CONCEPT_NAME"" : ""Budesonide Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1115385"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014333e+07,
							""CONCEPT_NAME"" : ""Mometasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746792"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.689446e+07,
							""CONCEPT_NAME"" : ""Mometasone Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP994725"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.089282e+07,
							""CONCEPT_NAME"" : ""Mometasone Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2090778"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.481788e+07,
							""CONCEPT_NAME"" : ""Mometasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1536141"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014404e+07,
							""CONCEPT_NAME"" : ""fluticasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746765"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514799e+07,
							""CONCEPT_NAME"" : ""fluticasone Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4805056"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514921e+07,
							""CONCEPT_NAME"" : ""fluticasone Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4806270"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.108016e+07,
							""CONCEPT_NAME"" : ""fluticasone Injectable Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2278122"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014404e+07,
							""CONCEPT_NAME"" : ""fluticasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746403"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""No combo therapy"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""DrugExposure"" : {
								""CodesetId"" : 8,
								""DrugTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""CustomEra"" : {
			""DrugCodesetId"" : 9,
			""GapDays"" : 30,
			""Offset"" : 0
		}
	},
	""CensoringCriteria"" : [
		{
			""DrugExposure"" : {
				""CodesetId"" : 8,
				""DrugTypeExclude"" : false
			}
		}
	],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
124,[COVID ID124 V1] Asthma/COPD Step 3,124,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (317009,4235703,4279553,2101899,2101898)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (317009,4235703,4279553,2101899,2101898)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45774869,42873412,1356250,44069324,41236953,42482075,42482607,45774773,43179057,43292583,1356199,1356202,35149223,43285708,41142750)

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (1356191,1356187,40167702,35158799,783089,1356189,42479568,1356211,44055847,40746100,21174574,45775117,43180317,43024344)

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (42480194,36883710,35130061,40142784,40142920,1356143,35135829,1356140,44120754,40143326,36894464,40892816,44817882,40144035,35147990,35149212,41080160,40144037)

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (42483138,36812530,36421291,40745353,36787954,21158944,36894458,21090035,42479684,35133500,783228,40142910,36787269,36250078,41048760,40754973,21089505,40144020,36882733,42482744,40144024,792484,40755794,37592046,43532281,43291091,41267401,40223712)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (42483138,36812530,36421291,40745353,36787954,21158944,36894458,21090035,42479684,35133500,783228,40142910,36787269,41048760,40754973,21089505,40144020,36882733,42482744,40144024,792484,40755794,37592046,43532281,43291091,41267401,40223712)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Drug Exposure Criteria

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.target_concept_id, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

UNION ALL
select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.target_concept_id, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- custom era strategy

with ctePersons(person_id) as (
	select distinct person_id from #included_events
)

select person_id, drug_exposure_start_date, drug_exposure_end_date
INTO #drugTarget
FROM (
	select de.PERSON_ID, DRUG_EXPOSURE_START_DATE,  COALESCE(DRUG_EXPOSURE_END_DATE, DATEADD(day,DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,DRUG_EXPOSURE_START_DATE)) as DRUG_EXPOSURE_END_DATE 
	FROM @cdm_database_schema.DRUG_EXPOSURE de
	JOIN ctePersons p on de.person_id = p.person_id
	JOIN #Codesets cs on cs.codeset_id = 8 AND de.drug_concept_id = cs.concept_id

	UNION ALL

	select de.PERSON_ID, DRUG_EXPOSURE_START_DATE,  COALESCE(DRUG_EXPOSURE_END_DATE, DATEADD(day,DAYS_SUPPLY,DRUG_EXPOSURE_START_DATE), DATEADD(day,1,DRUG_EXPOSURE_START_DATE)) as DRUG_EXPOSURE_END_DATE 
	FROM @cdm_database_schema.DRUG_EXPOSURE de
	JOIN ctePersons p on de.person_id = p.person_id
	JOIN #Codesets cs on cs.codeset_id = 8 AND de.drug_source_concept_id = cs.concept_id
) E
;

select et.event_id, et.person_id, ERAS.era_end_date as end_date
INTO #strategy_ends
from #included_events et
JOIN 
(
  select ENDS.person_id, min(drug_exposure_start_date) as era_start_date, DATEADD(day,0, ENDS.era_end_date) as era_end_date
  from
  (
    select de.person_id, de.drug_exposure_start_date, MIN(e.END_DATE) as era_end_date
    FROM #drugTarget DE
    JOIN 
    (
      --cteEndDates
      select PERSON_ID, DATEADD(day,-1 * 0,EVENT_DATE) as END_DATE -- unpad the end date by 0
      FROM
      (
				select PERSON_ID, EVENT_DATE, EVENT_TYPE, 
				MAX(START_ORDINAL) OVER (PARTITION BY PERSON_ID ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal,
				ROW_NUMBER() OVER (PARTITION BY PERSON_ID ORDER BY EVENT_DATE, EVENT_TYPE) AS OVERALL_ORD -- this re-numbers the inner UNION so all rows are numbered ordered by the event date
				from
				(
					-- select the start dates, assigning a row number to each
					Select PERSON_ID, DRUG_EXPOSURE_START_DATE AS EVENT_DATE, 0 as EVENT_TYPE, ROW_NUMBER() OVER (PARTITION BY PERSON_ID ORDER BY DRUG_EXPOSURE_START_DATE) as START_ORDINAL
					from #drugTarget D

					UNION ALL

					-- add the end dates with NULL as the row number, padding the end dates by 0 to allow a grace period for overlapping ranges.
					select PERSON_ID, DATEADD(day,0,DRUG_EXPOSURE_END_DATE), 1 as EVENT_TYPE, NULL
					FROM #drugTarget D
				) RAWDATA
      ) E
      WHERE 2 * E.START_ORDINAL - E.OVERALL_ORD = 0
    ) E on DE.PERSON_ID = E.PERSON_ID and E.END_DATE >= DE.DRUG_EXPOSURE_START_DATE
    GROUP BY de.person_id, de.drug_exposure_start_date
  ) ENDS
  GROUP BY ENDS.person_id, ENDS.era_end_date
) ERAS on ERAS.person_id = et.person_id 
WHERE et.start_date between ERAS.era_start_date and ERAS.era_end_date;

TRUNCATE TABLE #drugTarget;
DROP TABLE #drugTarget;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
UNION ALL
-- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""DrugExposure"" : {
					""CodesetId"" : 8,
					""DrugTypeExclude"" : false
				}
			},
			{
				""DrugExposure"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""DrugExposure"" : {
										""CodesetId"" : 6,
										""DrugTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 7,
					""DrugTypeExclude"" : false
				}
			},
			{
				""DrugExposure"" : {
					""CorrelatedCriteria"" : {
						""Type"" : ""ALL"",
						""CriteriaList"" : [
							{
								""Criteria"" : {
									""DrugExposure"" : {
										""CodesetId"" : 3,
										""DrugTypeExclude"" : false
									}
								},
								""StartWindow"" : {
									""Start"" : {
										""Days"" : 0,
										""Coeff"" : -1
									},
									""End"" : {
										""Days"" : 0,
										""Coeff"" : 1
									},
									""UseIndexEnd"" : false,
									""UseEventEnd"" : false
								},
								""RestrictVisit"" : false,
								""IgnoreObservationPeriod"" : false,
								""Occurrence"" : {
									""Type"" : 2,
									""Count"" : 1,
									""IsDistinct"" : false
								}
							}
						],
						""DemographicCriteriaList"" : [],
						""Groups"" : []
					},
					""CodesetId"" : 7,
					""DrugTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Asthma"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 317009,
							""CONCEPT_NAME"" : ""Asthma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""195967001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4235703,
							""CONCEPT_NAME"" : ""Asthma management"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""406162001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4279553,
							""CONCEPT_NAME"" : ""Eosinophilic asthma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""367542003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2101899,
							""CONCEPT_NAME"" : ""Intermittent asthma (Asthma)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1039F"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2101898,
							""CONCEPT_NAME"" : ""Persistent asthma (mild, moderate or severe) (Asthma)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1038F"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""LAMA"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577487e+07,
							""CONCEPT_NAME"" : ""umeclidinium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1539250"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.287341e+07,
							""CONCEPT_NAME"" : ""aclidinium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1303101"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356250,
							""CONCEPT_NAME"" : ""tiotropium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108544"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.406932e+07,
							""CONCEPT_NAME"" : ""aclidinium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1063955"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.123695e+07,
							""CONCEPT_NAME"" : ""aclidinium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2434915"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248208e+07,
							""CONCEPT_NAME"" : ""tiotropium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419850"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248261e+07,
							""CONCEPT_NAME"" : ""tiotropium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419849"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577477e+07,
							""CONCEPT_NAME"" : ""tiotropium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1552001"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.317906e+07,
							""CONCEPT_NAME"" : ""glycopyrronium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP448423"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.329258e+07,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP573663"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356199,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108419"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356202,
							""CONCEPT_NAME"" : ""glycopyrronium Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108425"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514922e+07,
							""CONCEPT_NAME"" : ""glycopyrronium Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4806281"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.328571e+07,
							""CONCEPT_NAME"" : ""umeclidinium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP557191"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.114275e+07,
							""CONCEPT_NAME"" : ""umeclidinium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2340712"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""LABA"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356191,
							""CONCEPT_NAME"" : ""formoterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108402"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356187,
							""CONCEPT_NAME"" : ""formoterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108395"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.01677e+07,
							""CONCEPT_NAME"" : ""salmeterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""866043"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.51588e+07,
							""CONCEPT_NAME"" : ""salmeterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4815788"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 783089,
							""CONCEPT_NAME"" : ""salmeterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4830921"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356189,
							""CONCEPT_NAME"" : ""salmeterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108399"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.247957e+07,
							""CONCEPT_NAME"" : ""indacaterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418726"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356211,
							""CONCEPT_NAME"" : ""indacaterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108445"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.405585e+07,
							""CONCEPT_NAME"" : ""indacaterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1050478"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.07461e+07,
							""CONCEPT_NAME"" : ""olodaterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4711602"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.117457e+07,
							""CONCEPT_NAME"" : ""olodaterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP275394"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577512e+07,
							""CONCEPT_NAME"" : ""olodaterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1546062"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.318032e+07,
							""CONCEPT_NAME"" : ""vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP459635"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.302434e+07,
							""CONCEPT_NAME"" : ""vilanterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4849893"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""ICS"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248019e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418867"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.688371e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1004751"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.513006e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4787320"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014278e+07,
							""CONCEPT_NAME"" : ""Beclomethasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746190"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014292e+07,
							""CONCEPT_NAME"" : ""Budesonide Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746824"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356143,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108302"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.513583e+07,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4793016"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1356140,
							""CONCEPT_NAME"" : ""Budesonide Inhalation Suspension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2108295"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.412075e+07,
							""CONCEPT_NAME"" : ""Budesonide Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1115385"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014333e+07,
							""CONCEPT_NAME"" : ""Mometasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746792"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.689446e+07,
							""CONCEPT_NAME"" : ""Mometasone Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP994725"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.089282e+07,
							""CONCEPT_NAME"" : ""Mometasone Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2090778"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.481788e+07,
							""CONCEPT_NAME"" : ""Mometasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1536141"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014404e+07,
							""CONCEPT_NAME"" : ""fluticasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746765"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514799e+07,
							""CONCEPT_NAME"" : ""fluticasone Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4805056"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.514921e+07,
							""CONCEPT_NAME"" : ""fluticasone Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4806270"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.108016e+07,
							""CONCEPT_NAME"" : ""fluticasone Injectable Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2278122"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014404e+07,
							""CONCEPT_NAME"" : ""fluticasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746403"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""Combo"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248314e+07,
							""CONCEPT_NAME"" : ""Albuterol / Beclomethasone Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP418868"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.681253e+07,
							""CONCEPT_NAME"" : ""Albuterol / Beclomethasone Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4826562"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.642129e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol / glycopyrronium Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4763575"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.074535e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol / glycopyrronium Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4711820"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.678795e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol / glycopyrronium Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4776216"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.115894e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP286058"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.689446e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP1002030"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.109004e+07,
							""CONCEPT_NAME"" : ""Beclomethasone / formoterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP286036"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.247968e+07,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419122"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.51335e+07,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Inhalation Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4790710"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 783228,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Inhalation Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4831059"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014291e+07,
							""CONCEPT_NAME"" : ""Budesonide / formoterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""745797"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.678727e+07,
							""CONCEPT_NAME"" : ""Budesonide / salmeterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4775534"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.625008e+07,
							""CONCEPT_NAME"" : ""azelastine / fluticasone Metered Dose Nasal Spray"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1797846"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.104876e+07,
							""CONCEPT_NAME"" : ""fluticasone / formoterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2246722"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.075497e+07,
							""CONCEPT_NAME"" : ""fluticasone / formoterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4702057"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.108951e+07,
							""CONCEPT_NAME"" : ""fluticasone / formoterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP357047"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014402e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""746717"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.688273e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP994600"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.248274e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP419713"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.014402e+07,
							""CONCEPT_NAME"" : ""fluticasone / salmeterol Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""744485"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 792484,
							""CONCEPT_NAME"" : ""fluticasone / umeclidinium / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1945037"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.075579e+07,
							""CONCEPT_NAME"" : ""fluticasone / umeclidinium / vilanterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4701920"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.759205e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4781501"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353228e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol Dry Powder Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1424887"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.329109e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol Inhalant Powder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP557209"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.12674e+07,
							""CONCEPT_NAME"" : ""fluticasone / vilanterol Inhalant Solution"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP2465363"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.022371e+07,
							""CONCEPT_NAME"" : ""formoterol / Mometasone Metered Dose Inhaler"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""998040"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Clinical Drug Form""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""CustomEra"" : {
			""DrugCodesetId"" : 8,
			""GapDays"" : 0,
			""Offset"" : 0
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
110,[COVID ID110 v1] Gestational diabetes episodes,110,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4024659,43020791,438480)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4024659,43020791,438480)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,30,start_date) > start_date then DATEADD(day,30,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 180, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,180,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Gestational diabetes"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4024659,
							""CONCEPT_NAME"" : ""Gestational diabetes mellitus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""11687002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.302079e+07,
							""CONCEPT_NAME"" : ""Gestational diabetes mellitus uncontrolled"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""472699005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 438480,
							""CONCEPT_NAME"" : ""Abnormal glucose tolerance in mother complicating pregnancy, childbirth AND/OR puerperium"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""39763004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 30
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 180
	},
	""CensorWindow"" : {}
}"
142,[COVID ID142 v1] Eclampsia and pre-eclampsia episodes,142,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (443700,439393,141084)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443700,439393,141084)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,3,start_date) > start_date then DATEADD(day,3,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 90, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,90,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 4,
					""ConditionTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 4,
			""name"" : ""Eclampsia and Pre-eclampsia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 443700,
							""CONCEPT_NAME"" : ""Eclampsia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""15938005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439393,
							""CONCEPT_NAME"" : ""Pre-eclampsia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""398254007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 141084,
							""CONCEPT_NAME"" : ""Pre-eclampsia or eclampsia with pre-existing hypertension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""198997005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 3
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}"
143,[COVID ID143 v1] Fever episodes,143,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (444413,437663,4141062,4152360)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (444413,437663,4141062,4152360)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4346179,4170869,4226022,37205085,4318555,37016869,443908,4093997,4347651,440285,4087628,4143214,4039793,37397178,40493465,4199309,44784428,44784427,44784429,44782483,43530646,4086668,3197956,4094003,43530637,37017455,4087629,4150518,4184347,4326408,4200980,4229442,4239624,4300533,4308214,4099900,4094000,4087017,438963,4243806)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4346179,4170869,4226022,37205085,4318555,37016869,443908,4093997,4347651,440285,4087628,4143214,4039793,37397178,40493465,4199309,44784428,44784427,44784429,44782483,43530646,4086668,3197956,4094003,43530637,37017455,4087629,4150518,4184347,4326408,4200980,4229442,4239624,4300533,4308214,4099900,4094000,4087017,438963,4243806)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (3025085,21490870,21490688,3020891,3025926,3025704,3017614,3011783,3004750,3008557,3007846,3016117,3006749,3016715,3018145,3015039,3009553,4329518,4174894,21490907,21490588,4212763,44809208,21490906,21490590,4039793,4077057,4039791,4151775,3006322,3022060,4265708,3025163)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (3025085,21490870,21490688,3020891,3025926,3025704,3017614,3011783,3004750,3008557,3007846,3016117,3006749,3016715,3018145,3015039,3009553,4329518,4174894,21490907,21490588,4212763,44809208,21490906,21490590,4039793,4077057,4039791,4151775,3006322,3022060,4265708,3025163)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4189949,4040476,4039792,4040104,4164378,4039796,4039795,4040106,4039794,4038778,45769775,4267945)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4189949,4040476,4039792,4040104,4164378,4039796,4039795,4040106,4039794,4038778,45769775,4267945)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE,
       C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.measurement_date as sort_date
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE,
       C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.measurement_date as sort_date
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Measurement Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE,
       C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.measurement_date as sort_date
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Measurement Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Observation Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Observation Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,3,end_date) > start_date then DATEADD(day,3,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 1,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""Measurement"" : {
					""CodesetId"" : 1,
					""MeasurementTypeExclude"" : false
				}
			},
			{
				""Measurement"" : {
					""CodesetId"" : 2,
					""MeasurementTypeExclude"" : false,
					""ValueAsNumber"" : {
						""Value"" : 38,
						""Op"" : ""bt"",
						""Extent"" : 42
					},
					""Unit"" : [
						{
							""CONCEPT_ID"" : 586323,
							""CONCEPT_NAME"" : ""degree Celsius"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""Cel"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Measurement"" : {
					""CodesetId"" : 2,
					""MeasurementTypeExclude"" : false,
					""ValueAsNumber"" : {
						""Value"" : 100.4,
						""Op"" : ""bt"",
						""Extent"" : 120
					},
					""Unit"" : [
						{
							""CONCEPT_ID"" : 9289,
							""CONCEPT_NAME"" : ""degree Fahrenheit"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""[degF]"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 2,
					""ObservationTypeExclude"" : false,
					""ValueAsNumber"" : {
						""Value"" : 38,
						""Op"" : ""bt"",
						""Extent"" : 42
					},
					""Unit"" : [
						{
							""CONCEPT_ID"" : 586323,
							""CONCEPT_NAME"" : ""degree Celsius"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""Cel"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 2,
					""ObservationTypeExclude"" : false,
					""ValueAsNumber"" : {
						""Value"" : 100.4,
						""Op"" : ""bt"",
						""Extent"" : 120
					},
					""Unit"" : [
						{
							""CONCEPT_ID"" : 9289,
							""CONCEPT_NAME"" : ""degree Fahrenheit"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""[degF]"",
							""DOMAIN_ID"" : ""Unit"",
							""VOCABULARY_ID"" : ""UCUM"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 1,
			""name"" : ""Fever (38.0?C or higher) pre-coordinated measurement and conditions"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4346179,
							""CONCEPT_NAME"" : ""Bancroftian filarial fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""240822009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4170869,
							""CONCEPT_NAME"" : ""Dehydration fever in newborn"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49513005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4226022,
							""CONCEPT_NAME"" : ""Drug-induced hyperpyrexia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""405543000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.720509e+07,
							""CONCEPT_NAME"" : ""Familial mesial temporal lobe epilepsy with febrile seizures"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""784372002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 444413,
							""CONCEPT_NAME"" : ""Febrile convulsion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41497008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 437663,
							""CONCEPT_NAME"" : ""Fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""386661006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4141062,
							""CONCEPT_NAME"" : ""Fever greater than 100.4 Fahrenheit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""426000000"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4318555,
							""CONCEPT_NAME"" : ""Fever of the newborn"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""95627000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.701687e+07,
							""CONCEPT_NAME"" : ""Infection caused by Borrelia miyamotoi"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713014002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 443908,
							""CONCEPT_NAME"" : ""Louse-borne relapsing fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""14683004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4093997,
							""CONCEPT_NAME"" : ""Malarial fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248437004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4347651,
							""CONCEPT_NAME"" : ""Malayan filarial fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""240827003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440285,
							""CONCEPT_NAME"" : ""Malignant hyperthermia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""405501007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4087628,
							""CONCEPT_NAME"" : ""Malignant tertian fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248441000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4143214,
							""CONCEPT_NAME"" : ""Maternal pyrexia in labor"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""267340006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4152360,
							""CONCEPT_NAME"" : ""O/E - fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""271897009"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039793,
							""CONCEPT_NAME"" : ""O/E - level of fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164299002"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.739718e+07,
							""CONCEPT_NAME"" : ""PFAPA syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""717231003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.049347e+07,
							""CONCEPT_NAME"" : ""Paraneoplastic fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""449129007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4199309,
							""CONCEPT_NAME"" : ""Pel Ebstein fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""52715007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.478443e+07,
							""CONCEPT_NAME"" : ""Post diphtheria vaccination fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""698579002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.478443e+07,
							""CONCEPT_NAME"" : ""Post diphtheria, tetanus and pertussis vaccination fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""698578005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.478443e+07,
							""CONCEPT_NAME"" : ""Post pertussis vaccination fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""698581000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.478248e+07,
							""CONCEPT_NAME"" : ""Post tetanus vaccination fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""698580004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353065e+07,
							""CONCEPT_NAME"" : ""Post vaccination fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""123471000119103"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4086668,
							""CONCEPT_NAME"" : ""Postoperative fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248450003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3197956,
							""CONCEPT_NAME"" : ""Postoperative fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17670001000004108"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""Nebraska Lexicon"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4094003,
							""CONCEPT_NAME"" : ""Postpartum fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248451004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353064e+07,
							""CONCEPT_NAME"" : ""Postprocedural fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""130091000119103"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.701746e+07,
							""CONCEPT_NAME"" : ""Pyrexia of unknown origin co-occurrent with human immunodeficiency virus infection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""713731001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4087629,
							""CONCEPT_NAME"" : ""Quartan fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248442007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4150518,
							""CONCEPT_NAME"" : ""Relapsing fever of Asia AND/OR Africa"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31120005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4184347,
							""CONCEPT_NAME"" : ""Relapsing fever of Central AND/OR South Africa"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""43626008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4326408,
							""CONCEPT_NAME"" : ""Relapsing fever of Central AND/OR South America"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""74873003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4200980,
							""CONCEPT_NAME"" : ""Relapsing fever of Iberian Peninsula AND/OR Northwest Africa"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""52635002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4229442,
							""CONCEPT_NAME"" : ""Relapsing fever of Iran AND/OR Central Asia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""88808006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4239624,
							""CONCEPT_NAME"" : ""Relapsing fever of Southern U.S., Mexico, Central AND/OR South America"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""58827009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4300533,
							""CONCEPT_NAME"" : ""Relapsing fever of Western North America"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""78168002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4308214,
							""CONCEPT_NAME"" : ""Relapsing fever of Western United States"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""39002001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4099900,
							""CONCEPT_NAME"" : ""Relapsing fever of the Caucasus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""27578005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4094000,
							""CONCEPT_NAME"" : ""Reversed diurnal fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248446005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4087017,
							""CONCEPT_NAME"" : ""Tertian fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248440004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 438963,
							""CONCEPT_NAME"" : ""Tick-borne relapsing fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10301003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4243806,
							""CONCEPT_NAME"" : ""Transitory fever of newborn"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""60025004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""Fever (38.0?C or higher) measurement and observation"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3025085,
							""CONCEPT_NAME"" : ""Axillary temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8328-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.149087e+07,
							""CONCEPT_NAME"" : ""Bladder temperature via Foley"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""76278-1"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.149069e+07,
							""CONCEPT_NAME"" : ""Body surface temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61008-9"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3020891,
							""CONCEPT_NAME"" : ""Body temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8310-5"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3025926,
							""CONCEPT_NAME"" : ""Body temperature - Core"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8329-5"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3025704,
							""CONCEPT_NAME"" : ""Body temperature - Urinary bladder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8334-5"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3017614,
							""CONCEPT_NAME"" : ""Body temperature 1 hour"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8321-2"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3011783,
							""CONCEPT_NAME"" : ""Body temperature 1 hour maximum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8311-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3004750,
							""CONCEPT_NAME"" : ""Body temperature 10 hour"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8323-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3008557,
							""CONCEPT_NAME"" : ""Body temperature 10 hour maximum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8313-9"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3007846,
							""CONCEPT_NAME"" : ""Body temperature 12 hour"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8324-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3016117,
							""CONCEPT_NAME"" : ""Body temperature 12 hour maximum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8314-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3006749,
							""CONCEPT_NAME"" : ""Body temperature 24 hour"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8325-3"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3016715,
							""CONCEPT_NAME"" : ""Body temperature 24 hour maximum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8315-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3018145,
							""CONCEPT_NAME"" : ""Body temperature 8 hour"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8322-0"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3015039,
							""CONCEPT_NAME"" : ""Body temperature 8 hour maximum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8312-1"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3009553,
							""CONCEPT_NAME"" : ""Body temperature at First encounter"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""11289-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4329518,
							""CONCEPT_NAME"" : ""Body temperature taken with digital thermometer"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""431807005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4174894,
							""CONCEPT_NAME"" : ""Core body temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""276885007"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.149091e+07,
							""CONCEPT_NAME"" : ""Ear temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""76011-6"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.149059e+07,
							""CONCEPT_NAME"" : ""Esophageal temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""60836-4"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4212763,
							""CONCEPT_NAME"" : ""Forehead temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""415922000"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4189949,
							""CONCEPT_NAME"" : ""Groin temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""415929009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.480921e+07,
							""CONCEPT_NAME"" : ""Maximum body temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""852591000000107"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.149091e+07,
							""CONCEPT_NAME"" : ""Nasal temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""76010-8"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.149059e+07,
							""CONCEPT_NAME"" : ""Nasopharyngeal temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""60838-0"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4040476,
							""CONCEPT_NAME"" : ""O/E - axillary temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164292006"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039792,
							""CONCEPT_NAME"" : ""O/E - core temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164295008"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4040104,
							""CONCEPT_NAME"" : ""O/E - groin temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164293001"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4164378,
							""CONCEPT_NAME"" : ""O/E - hyperpyrexia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""274308003"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039796,
							""CONCEPT_NAME"" : ""O/E - hyperpyrexia - greater than 40.5 degrees Celsius"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164304001"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039793,
							""CONCEPT_NAME"" : ""O/E - level of fever"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164299002"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4077057,
							""CONCEPT_NAME"" : ""O/E - oral temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""275874003"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039791,
							""CONCEPT_NAME"" : ""O/E - rectal temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164294007"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039795,
							""CONCEPT_NAME"" : ""O/E - temperature elevated"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164303007"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4040106,
							""CONCEPT_NAME"" : ""O/E - temperature low"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164301009"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4039794,
							""CONCEPT_NAME"" : ""O/E - temperature normal"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""164300005"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4151775,
							""CONCEPT_NAME"" : ""O/E - tympanic temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""315632006"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4038778,
							""CONCEPT_NAME"" : ""O/E -skin temperature abnormal"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""163633002"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3006322,
							""CONCEPT_NAME"" : ""Oral temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8331-1"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3022060,
							""CONCEPT_NAME"" : ""Rectal temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8332-9"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.576978e+07,
							""CONCEPT_NAME"" : ""Temperature of neonate at birth"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""708499008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4265708,
							""CONCEPT_NAME"" : ""Temperature of skin"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""364537001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4267945,
							""CONCEPT_NAME"" : ""Temperature of vagina"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""364246006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3025163,
							""CONCEPT_NAME"" : ""Tympanic membrane temperature"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8333-7"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""LOINC"",
							""CONCEPT_CLASS_ID"" : ""Clinical Observation""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 3
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
144,[COVID ID144 v1] Cough episodes,144,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (254761,4089228)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (254761,4089228)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,3,end_date) > start_date then DATEADD(day,3,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 1,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 1,
			""name"" : ""Cough"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 254761,
							""CONCEPT_NAME"" : ""Cough"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49727002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4089228,
							""CONCEPT_NAME"" : ""Sputum finding"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""248595008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 3
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
145,[COVID ID145 v1] Myalgia episodes,145,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (442752)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (442752)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (258828,4298555,195464,442315,4347181,442774,36713056,37118025,4316217,37312366,46284893)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (258828,4298555,195464,442315,4347181,442774,36713056,37118025,4316217,37312366,46284893)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,3,end_date) > start_date then DATEADD(day,3,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 2,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Myalgia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 258828,
							""CONCEPT_NAME"" : ""Eosinophilia myalgia syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""95416007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4298555,
							""CONCEPT_NAME"" : ""Epidemic cervical myalgia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""76821002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 195464,
							""CONCEPT_NAME"" : ""Epidemic pleurodynia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""83264000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 442315,
							""CONCEPT_NAME"" : ""Fibrositis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""56557000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4347181,
							""CONCEPT_NAME"" : ""Fibrositis and nodular fasciitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""240044003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 442774,
							""CONCEPT_NAME"" : ""Intermittent claudication"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""63491006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 442752,
							""CONCEPT_NAME"" : ""Muscle pain"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""68962001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.671306e+07,
							""CONCEPT_NAME"" : ""Myalgia caused by statin"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""16462851000119106"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.711803e+07,
							""CONCEPT_NAME"" : ""Myofascial pain syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""726531007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4316217,
							""CONCEPT_NAME"" : ""Primary fibromyalgia syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""95417003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.731237e+07,
							""CONCEPT_NAME"" : ""RSIS - Repetitive strain injury syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""788465007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.628489e+07,
							""CONCEPT_NAME"" : ""Secondary fibromyalgia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""957311000000101"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 3
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
146,[COVID ID146 v1] Malaise or fatigue episodes,146,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4223659,4272240,1572255,439926,44829293,44823445,1572256)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4223659,4272240,1572255,439926,44829293,44823445,1572256)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4158491,37396808,4219363,4221911,37205051,37205052,45772721,4225027,40484614,4092860,4090207,44782753)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4158491,37396808,4219363,4221911,37205051,37205052,45772721,4225027,40484614,4092860,4090207,44782753)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Demographic Criteria
SELECT 0 as index_id, e.person_id, e.event_id
FROM primary_events E
JOIN @cdm_database_schema.PERSON P ON P.PERSON_ID = E.PERSON_ID
WHERE (E.start_date >= DATEFROMPARTS(2016, 09, 01) and E.start_date <= DATEFROMPARTS(2020, 12, 31))
GROUP BY e.person_id, e.event_id
-- End Demographic Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE
WHERE QE.ordinal = 1
;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,3,end_date) > start_date then DATEADD(day,3,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 3,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""ConditionTypeExclude"" : false,
					""ConditionSourceConcept"" : 3
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [],
		""DemographicCriteriaList"" : [
			{
				""OccurrenceStartDate"" : {
					""Value"" : ""2016-09-01"",
					""Op"" : ""bt"",
					""Extent"" : ""2020-12-31""
				}
			}
		],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 3,
			""name"" : ""Malaise or Fatigue or (Malaise and Fatigue)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4158491,
							""CONCEPT_NAME"" : ""C/O - debility - malaise"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""272036004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.739681e+07,
							""CONCEPT_NAME"" : ""Cancer-related fatigue"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""716749005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4219363,
							""CONCEPT_NAME"" : ""Congenital debility of fetus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""82022002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4223659,
							""CONCEPT_NAME"" : ""Fatigue"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""84229001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4221911,
							""CONCEPT_NAME"" : ""Fatigue associated with AIDS"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""420900006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.720505e+07,
							""CONCEPT_NAME"" : ""Fatigue due to chemotherapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""784317004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.720505e+07,
							""CONCEPT_NAME"" : ""Fatigue due to radiation therapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""784318009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577272e+07,
							""CONCEPT_NAME"" : ""Fatigue due to treatment"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""704369007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4272240,
							""CONCEPT_NAME"" : ""Malaise"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""367391008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1572255,
							""CONCEPT_NAME"" : ""Malaise and fatigue"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""R53"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""ICD10CM"",
							""CONCEPT_CLASS_ID"" : ""3-char nonbill code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439926,
							""CONCEPT_NAME"" : ""Malaise and fatigue"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""271795006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.482929e+07,
							""CONCEPT_NAME"" : ""Malaise and fatigue"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""780.7"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""ICD9CM"",
							""CONCEPT_CLASS_ID"" : ""4-dig nonbill code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4225027,
							""CONCEPT_NAME"" : ""Malaise associated with AIDS"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""420801006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.482345e+07,
							""CONCEPT_NAME"" : ""Other malaise and fatigue"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""780.79"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""ICD9CM"",
							""CONCEPT_CLASS_ID"" : ""5-dig billing code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1572256,
							""CONCEPT_NAME"" : ""Other malaise and fatigue"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""R53.8"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""ICD10CM"",
							""CONCEPT_CLASS_ID"" : ""4-char nonbill code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.048461e+07,
							""CONCEPT_NAME"" : ""Postexertional fatigue"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444042007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4092860,
							""CONCEPT_NAME"" : ""Rapid fatigue of gait"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""250002000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4090207,
							""CONCEPT_NAME"" : ""Senile asthenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""18726006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.478275e+07,
							""CONCEPT_NAME"" : ""Weakness as a late effect of stroke"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""148871000119109"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 3
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
147,[COVID ID147 v1] Dyspnea episodes,147,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4191650,312437)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4191650,312437)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4222908)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4222908)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,3,end_date) > start_date then DATEADD(day,3,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 3,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 3,
			""name"" : ""Shortness of breath (dyspnea)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4191650,
							""CONCEPT_NAME"" : ""Acute respiratory distress"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""373895009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4222908,
							""CONCEPT_NAME"" : ""Borg Breathlessness Score: 0 none at all"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""401275008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 312437,
							""CONCEPT_NAME"" : ""Dyspnea"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""267036007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 3
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
148,[COVID ID148 v1] Anosmia OR Hyposmia OR Dysgeusia episodes,148,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (43530714,4185711,436235)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (43530714,4185711,436235)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,3,start_date) > start_date then DATEADD(day,3,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Altered Smell or Taste"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353071e+07,
							""CONCEPT_NAME"" : ""Sensory disorder of smell and/or taste"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2611000119103"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4185711,
							""CONCEPT_NAME"" : ""Loss of sense of smell"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""44169009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 436235,
							""CONCEPT_NAME"" : ""Taste sense altered"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""271801002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 3
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
149,[COVID ID149 V1] Persons with additional testing for SARS-Cov-2 (prior test >=1d before test),149,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (756055)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (756055)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE,
       C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.measurement_date as sort_date
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.measurement_date > DATEFROMPARTS(2019, 12, 01)
-- End Measurement Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.observation_date > DATEFROMPARTS(2019, 12, 01)
-- End Observation Criteria

UNION ALL
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.procedure_date > DATEFROMPARTS(2019, 12, 01)
-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE,
       C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.measurement_date as sort_date
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-1,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM #qualified_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-1,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM #qualified_events P
INNER JOIN
(
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-1,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 90, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,90,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;





TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""Measurement"" : {
					""CodesetId"" : 2,
					""OccurrenceStartDate"" : {
						""Value"" : ""2019-12-01"",
						""Op"" : ""gt""
					},
					""MeasurementTypeExclude"" : false
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 2,
					""OccurrenceStartDate"" : {
						""Value"" : ""2019-12-01"",
						""Op"" : ""gt""
					},
					""ObservationTypeExclude"" : false
				}
			},
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 2,
					""OccurrenceStartDate"" : {
						""Value"" : ""2019-12-01"",
						""Op"" : ""gt""
					},
					""ProcedureTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""SARS-Cov-2 testing"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 756055,
							""CONCEPT_NAME"" : ""Measurement of severe acute respiratory syndrome coronavirus 2"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4873969"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""OMOP Extension"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [
		{
			""name"" : ""prior test >=1d before test"",
			""expression"" : {
				""Type"" : ""ANY"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 2,
								""MeasurementTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Observation"" : {
								""CodesetId"" : 2,
								""ObservationTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ProcedureOccurrence"" : {
								""CodesetId"" : 2,
								""ProcedureTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 1,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}"
150,[COVID ID150 V1] Persons with additional testing for SARS-Cov-2 (prior test >=5d before test),150,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (756055)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (756055)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE,
       C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.measurement_date as sort_date
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.measurement_date > DATEFROMPARTS(2019, 12, 01)
-- End Measurement Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.observation_date > DATEFROMPARTS(2019, 12, 01)
-- End Observation Criteria

UNION ALL
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.procedure_date > DATEFROMPARTS(2019, 12, 01)
-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE,
       C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.measurement_date as sort_date
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-5,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM #qualified_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Observation Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-5,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM #qualified_events P
INNER JOIN
(
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-5,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 90, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,90,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;





TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""Measurement"" : {
					""CodesetId"" : 2,
					""OccurrenceStartDate"" : {
						""Value"" : ""2019-12-01"",
						""Op"" : ""gt""
					},
					""MeasurementTypeExclude"" : false
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 2,
					""OccurrenceStartDate"" : {
						""Value"" : ""2019-12-01"",
						""Op"" : ""gt""
					},
					""ObservationTypeExclude"" : false
				}
			},
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 2,
					""OccurrenceStartDate"" : {
						""Value"" : ""2019-12-01"",
						""Op"" : ""gt""
					},
					""ProcedureTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""SARS-Cov-2 testing"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 756055,
							""CONCEPT_NAME"" : ""Measurement of severe acute respiratory syndrome coronavirus 2"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP4873969"",
							""DOMAIN_ID"" : ""Measurement"",
							""VOCABULARY_ID"" : ""OMOP Extension"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [
		{
			""name"" : ""prior test >=5d before test"",
			""expression"" : {
				""Type"" : ""ANY"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""Measurement"" : {
								""CodesetId"" : 2,
								""MeasurementTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 5,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""Observation"" : {
								""CodesetId"" : 2,
								""ObservationTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 5,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ProcedureOccurrence"" : {
								""CodesetId"" : 2,
								""ProcedureTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 5,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}"
151,[COVID ID151 V1] Hospitalization episodes,151,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Visit Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,0,end_date) > start_date then DATEADD(day,0,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""VisitOccurrence"" : {
					""CodesetId"" : 1,
					""VisitTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 1,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 0
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
152,[COVID ID152 V1] Pneumonia during hospitalization,152,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4050869,255848)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4050869,255848)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45770911,4001167,4049965,36712839,252552)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45770911,4001167,4049965,36712839,252552)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Demographic Criteria
SELECT 1 as index_id, e.person_id, e.event_id
FROM primary_events E
JOIN @cdm_database_schema.PERSON P ON P.PERSON_ID = E.PERSON_ID
WHERE (E.start_date >= DATEFROMPARTS(2016, 09, 01) and E.start_date <= DATEFROMPARTS(2020, 12, 31))
GROUP BY e.person_id, e.event_id
-- End Demographic Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 2,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 1,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [
			{
				""OccurrenceStartDate"" : {
					""Value"" : ""2016-09-01"",
					""Op"" : ""bt"",
					""Extent"" : ""2020-12-31""
				}
			}
		],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 1,
			""name"" : ""Inpatient or Inpatient/ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""Pneumonia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577091e+07,
							""CONCEPT_NAME"" : ""Acute pneumonia due to coccidioidomycosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""184431000119108"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4001167,
							""CONCEPT_NAME"" : ""Acute ulcerative gastroenteritis complicating pneumonia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""109814008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4050869,
							""CONCEPT_NAME"" : ""Atypical pneumonia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233606009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4049965,
							""CONCEPT_NAME"" : ""Fungal pneumonia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233613009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.671284e+07,
							""CONCEPT_NAME"" : ""Idiopathic pneumonia syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""12381000132107"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 252552,
							""CONCEPT_NAME"" : ""Ornithosis with pneumonia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""81164001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 255848,
							""CONCEPT_NAME"" : ""Pneumonia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233604007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
153,[COVID ID153 V1] Acute Respiratory Distress syndrome (ARDS) during hospitalization,153,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4195694,319049)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4195694,319049)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4191650,258866)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4191650,258866)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Demographic Criteria
SELECT 1 as index_id, e.person_id, e.event_id
FROM primary_events E
JOIN @cdm_database_schema.PERSON P ON P.PERSON_ID = E.PERSON_ID
WHERE (E.start_date >= DATEFROMPARTS(2016, 09, 01) and E.start_date <= DATEFROMPARTS(2020, 12, 31))
GROUP BY e.person_id, e.event_id
-- End Demographic Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 3,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 4,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [
			{
				""OccurrenceStartDate"" : {
					""Value"" : ""2016-09-01"",
					""Op"" : ""bt"",
					""Extent"" : ""2020-12-31""
				}
			}
		],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 3,
			""name"" : ""Acute respiratory distress syndrome (ARDS) or Acute Respiratory Failure"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4191650,
							""CONCEPT_NAME"" : ""Acute respiratory distress"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""373895009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4195694,
							""CONCEPT_NAME"" : ""Acute respiratory distress syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""67782005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 319049,
							""CONCEPT_NAME"" : ""Acute respiratory failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""65710008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 258866,
							""CONCEPT_NAME"" : ""Respiratory distress syndrome in the newborn"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""46775006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
154,[COVID ID154 V1] Acute kidney injury (AKI) diagnosis during hospitalization,154,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4242411)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4242411)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (435308,4280571,4128371,4127550,4032296,4127551,432961,4032298,4032295,4126131)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (435308,4280571,4128371,4127550,4032296,4127551,432961,4032298,4032295,4126131)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37395652,443611,193782)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37395652,443611,193782)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4324887,4180454,2833286,2877118,4163566,4146256,42539502,4082531)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4324887,4180454,2833286,2877118,4163566,4146256,42539502,4082531)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 9))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),2)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 1,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 9,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 1,
			""name"" : ""Acute kidney injury"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 435308,
							""CONCEPT_NAME"" : ""Acute glomerulonephritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""19351000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4242411,
							""CONCEPT_NAME"" : ""Acute nephropathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""58574008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4280571,
							""CONCEPT_NAME"" : ""Acute pyelonephritis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""36689008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4128371,
							""CONCEPT_NAME"" : ""Acute rejection of renal transplant"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""236574008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4127550,
							""CONCEPT_NAME"" : ""Acute rejection of renal transplant - grade I"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""236575009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4032296,
							""CONCEPT_NAME"" : ""Acute rejection of renal transplant - grade II"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""236576005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4127551,
							""CONCEPT_NAME"" : ""Acute rejection of renal transplant - grade III"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""236577001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 432961,
							""CONCEPT_NAME"" : ""Acute renal papillary necrosis with renal failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""298015003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4032298,
							""CONCEPT_NAME"" : ""Acute-on-chronic rejection of renal transplant"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""236582008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4032295,
							""CONCEPT_NAME"" : ""Hyperacute rejection of renal transplant"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""236571000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4126131,
							""CONCEPT_NAME"" : ""Very mild acute rejection of renal transplant"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""236573002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""ESRD"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.739565e+07,
							""CONCEPT_NAME"" : ""Anemia in chronic kidney disease stage 5"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""691411000119101"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 443611,
							""CONCEPT_NAME"" : ""Chronic kidney disease stage 5"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""433146000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 193782,
							""CONCEPT_NAME"" : ""End-stage renal disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""46177005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""transplant"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4324887,
							""CONCEPT_NAME"" : ""Disorder related to renal transplantation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""429451003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4180454,
							""CONCEPT_NAME"" : ""Examination of live donor after kidney transplant"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""429496005"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2833286,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Urinary System @ Transplantation @ Kidney, Left"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0TY1"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2877118,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Urinary System @ Transplantation @ Kidney, Right"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0TY0"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4163566,
							""CONCEPT_NAME"" : ""Renal replacement"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""398887003"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4146256,
							""CONCEPT_NAME"" : ""Transplant nephrectomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""265550007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.25395e+07,
							""CONCEPT_NAME"" : ""Transplanted kidney present"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""737295003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4082531,
							""CONCEPT_NAME"" : ""US scan of transplant kidney"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""241484009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""no prior ESRD"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 2,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""no prior transplant"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ProcedureOccurrence"" : {
								""CodesetId"" : 3,
								""ProcedureTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 3,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
155,[COVID ID155 V1] Sepsis during hospitalization,155,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37395517,36716312,40487101,4205449,4085627,4204036,4066124,132797,4029281,4046106,4119941,4031168,196236,434821,36716754)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37395517,36716312,40487101,4205449,4085627,4204036,4066124,132797,4029281,4046106,4119941,4031168,196236,434821,36716754)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 5,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 4,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 4,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Sepsis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.739552e+07,
							""CONCEPT_NAME"" : ""Acute kidney injury due to acute tubular necrosis due to sepsis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1048491000000106"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.671631e+07,
							""CONCEPT_NAME"" : ""Acute kidney injury due to sepsis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""722278006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.04871e+07,
							""CONCEPT_NAME"" : ""Clinical sepsis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""447931005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4205449,
							""CONCEPT_NAME"" : ""Menosepsis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""55528005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4085627,
							""CONCEPT_NAME"" : ""Miscarriage with septic shock"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""18613002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4204036,
							""CONCEPT_NAME"" : ""Postprocedural intra-abdominal sepsis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""308887002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4066124,
							""CONCEPT_NAME"" : ""Puerperal septicemia - delivered with postnatal complication"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""200195002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 132797,
							""CONCEPT_NAME"" : ""Sepsis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""91302008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029281,
							""CONCEPT_NAME"" : ""Sepsis syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""238150007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4046106,
							""CONCEPT_NAME"" : ""Sepsis-associated encephalopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""230361008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4119941,
							""CONCEPT_NAME"" : ""Sepsis-associated lung injury"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233812001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4031168,
							""CONCEPT_NAME"" : ""Sepsis-associated organ dysfunction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""238151006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196236,
							""CONCEPT_NAME"" : ""Septic shock"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""76571007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 434821,
							""CONCEPT_NAME"" : ""Systemic inflammatory response syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""238149007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.671675e+07,
							""CONCEPT_NAME"" : ""Transient neonatal neutropenia due to neonatal bacterial sepsis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""722926003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
156,[COVID ID156 V1] Venous thromboembolic (pulmonary embolism and deep vein thrombosis) events,156,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 11 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (40481089,440417,254662,318775,444247,36713113,35615055)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (40481089,440417,254662,318775,444247,36713113,35615055)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (435616,435887,196715,4062269,442055,433832,435026,440477,318137,199837,438820,4235812,195294,4187790)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (435616,435887,196715,4062269,442055,433832,435026,440477,318137,199837,438820,4235812,195294,4187790)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 11))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 11,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 11,
			""name"" : ""Venous thromboembolism (pulmonary embolism and deep vein thrombosis)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 435616,
							""CONCEPT_NAME"" : ""Amniotic fluid embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17263003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435887,
							""CONCEPT_NAME"" : ""Antepartum deep vein thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49956009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196715,
							""CONCEPT_NAME"" : ""Budd-Chiari syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""82385007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4062269,
							""CONCEPT_NAME"" : ""Cerebral venous thrombosis in pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""200259003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.048109e+07,
							""CONCEPT_NAME"" : ""Embolism from thrombosis of vein of lower extremity"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444816006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 442055,
							""CONCEPT_NAME"" : ""Obstetric air pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""200286003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 433832,
							""CONCEPT_NAME"" : ""Obstetric blood-clot pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""200299000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435026,
							""CONCEPT_NAME"" : ""Obstetric pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""200284000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440477,
							""CONCEPT_NAME"" : ""Obstetric pyemic and septic pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""267284008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 318137,
							""CONCEPT_NAME"" : ""Phlebitis and thrombophlebitis of intracranial sinuses"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""192753009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 199837,
							""CONCEPT_NAME"" : ""Portal vein thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17920008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 438820,
							""CONCEPT_NAME"" : ""Postpartum deep phlebothrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""56272000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440417,
							""CONCEPT_NAME"" : ""Pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59282003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 254662,
							""CONCEPT_NAME"" : ""Pulmonary infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""64662007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4235812,
							""CONCEPT_NAME"" : ""Septic thrombophlebitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""439731006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 195294,
							""CONCEPT_NAME"" : ""Thrombosed hemorrhoids"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75955007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4187790,
							""CONCEPT_NAME"" : ""Thrombosis of retinal vein"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""46085004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 318775,
							""CONCEPT_NAME"" : ""Venous embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""234049002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 444247,
							""CONCEPT_NAME"" : ""Venous thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111293003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.671311e+07,
							""CONCEPT_NAME"" : ""Saddle embolus of pulmonary artery"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""328511000119109"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.561506e+07,
							""CONCEPT_NAME"" : ""Saddle embolus of pulmonary artery with acute cor pulmonale"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""15964701000119109"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
157,[COVID ID157 V1] Pulmonary Embolism events,157,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 13 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (440417,254662,36713113,35615055)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (440417,254662,36713113,35615055)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (435616,435887,196715,4062269,442055,433832,435026,440477,318137,199837,438820,4235812,195294,4187790,444247)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (435616,435887,196715,4062269,442055,433832,435026,440477,318137,199837,438820,4235812,195294,4187790,444247)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 13))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 13,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 13,
			""name"" : ""Pulmonary Embolism"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 435616,
							""CONCEPT_NAME"" : ""Amniotic fluid embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17263003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435887,
							""CONCEPT_NAME"" : ""Antepartum deep vein thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49956009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196715,
							""CONCEPT_NAME"" : ""Budd-Chiari syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""82385007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4062269,
							""CONCEPT_NAME"" : ""Cerebral venous thrombosis in pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""200259003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 442055,
							""CONCEPT_NAME"" : ""Obstetric air pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""200286003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 433832,
							""CONCEPT_NAME"" : ""Obstetric blood-clot pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""200299000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435026,
							""CONCEPT_NAME"" : ""Obstetric pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""200284000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440477,
							""CONCEPT_NAME"" : ""Obstetric pyemic and septic pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""267284008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 318137,
							""CONCEPT_NAME"" : ""Phlebitis and thrombophlebitis of intracranial sinuses"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""192753009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 199837,
							""CONCEPT_NAME"" : ""Portal vein thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17920008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 438820,
							""CONCEPT_NAME"" : ""Postpartum deep phlebothrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""56272000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440417,
							""CONCEPT_NAME"" : ""Pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59282003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 254662,
							""CONCEPT_NAME"" : ""Pulmonary infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""64662007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.671311e+07,
							""CONCEPT_NAME"" : ""Saddle embolus of pulmonary artery"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""328511000119109"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.561506e+07,
							""CONCEPT_NAME"" : ""Saddle embolus of pulmonary artery with acute cor pulmonale"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""15964701000119109"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4235812,
							""CONCEPT_NAME"" : ""Septic thrombophlebitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""439731006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 195294,
							""CONCEPT_NAME"" : ""Thrombosed hemorrhoids"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75955007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4187790,
							""CONCEPT_NAME"" : ""Thrombosis of retinal vein"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""46085004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 444247,
							""CONCEPT_NAME"" : ""Venous thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111293003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
158,[COVID ID158 V1] Deep vein thrombosis events,158,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 13 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (444247,40481089)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (444247,40481089)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45768888,435616,435887,196715,4102202,4062269,45768887,45771016,442055,433832,435026,440477,313219,318137,199837,438820,440417,43530605,254662,4121618,36713113,35615055,4235812,320741,195294,4319329,4187790)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45768888,435616,435887,196715,4102202,4062269,45768887,45771016,442055,433832,435026,440477,313219,318137,199837,438820,440417,43530605,254662,4121618,36713113,35615055,4235812,320741,195294,4319329,4187790)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 13))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 13,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 13,
			""name"" : ""Non Cerebral Deep Vein Thrombosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.576889e+07,
							""CONCEPT_NAME"" : ""Acute pulmonary thromboembolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""707414004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435616,
							""CONCEPT_NAME"" : ""Amniotic fluid embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17263003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435887,
							""CONCEPT_NAME"" : ""Antepartum deep vein thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49956009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 196715,
							""CONCEPT_NAME"" : ""Budd-Chiari syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""82385007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4102202,
							""CONCEPT_NAME"" : ""Cerebral venous sinus thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""192759008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4062269,
							""CONCEPT_NAME"" : ""Cerebral venous thrombosis in pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""200259003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.576889e+07,
							""CONCEPT_NAME"" : ""Chronic pulmonary thromboembolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""707412000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577102e+07,
							""CONCEPT_NAME"" : ""Chronic pulmonary thromboembolism without pulmonary hypertension"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""707413005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 442055,
							""CONCEPT_NAME"" : ""Obstetric air pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""200286003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 433832,
							""CONCEPT_NAME"" : ""Obstetric blood-clot pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""200299000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435026,
							""CONCEPT_NAME"" : ""Obstetric pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""200284000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440477,
							""CONCEPT_NAME"" : ""Obstetric pyemic and septic pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""267284008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 313219,
							""CONCEPT_NAME"" : ""Phlebitis and thrombophlebitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""195394007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 318137,
							""CONCEPT_NAME"" : ""Phlebitis and thrombophlebitis of intracranial sinuses"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""192753009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 199837,
							""CONCEPT_NAME"" : ""Portal vein thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17920008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 438820,
							""CONCEPT_NAME"" : ""Postpartum deep phlebothrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""56272000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440417,
							""CONCEPT_NAME"" : ""Pulmonary embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59282003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353061e+07,
							""CONCEPT_NAME"" : ""Pulmonary embolism with pulmonary infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1001000119102"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 254662,
							""CONCEPT_NAME"" : ""Pulmonary infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""64662007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4121618,
							""CONCEPT_NAME"" : ""Pulmonary thromboembolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233935004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.671311e+07,
							""CONCEPT_NAME"" : ""Saddle embolus of pulmonary artery"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""328511000119109"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.561506e+07,
							""CONCEPT_NAME"" : ""Saddle embolus of pulmonary artery with acute cor pulmonale"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""15964701000119109"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4235812,
							""CONCEPT_NAME"" : ""Septic thrombophlebitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""439731006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 320741,
							""CONCEPT_NAME"" : ""Thrombophlebitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""64156001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 195294,
							""CONCEPT_NAME"" : ""Thrombosed hemorrhoids"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75955007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4319329,
							""CONCEPT_NAME"" : ""Thrombosis of cerebral veins"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""95455008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4187790,
							""CONCEPT_NAME"" : ""Thrombosis of retinal vein"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""46085004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 444247,
							""CONCEPT_NAME"" : ""Venous thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""111293003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.048109e+07,
							""CONCEPT_NAME"" : ""Embolism from thrombosis of vein of lower extremity"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444816006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
159,[COVID ID159 V1] Heart failure during hospitalization,159,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9203,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9203,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (316139)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (316139)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (315295)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (315295)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 1,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 0,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Inpatient or ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 1,
			""name"" : ""Heart Failure "",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 315295,
							""CONCEPT_NAME"" : ""Congestive rheumatic heart failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""82523003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 316139,
							""CONCEPT_NAME"" : ""Heart failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""84114007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
160,[COVID ID160 V1] Cardiac arrhythmia during hospitalization,160,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (44784217,38001137,38001138,4169095,4103295)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (44784217,38001137,38001138,4103295)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (21600248)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (21600248)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45890325,45890400,2107068,4051932,4051938,2313791,2756785,4019139,2615874,2615956,2615795,2615958,2615957,2615796,2100778,2313929)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45890325,45890400,2107068,4051932,4051938,2313791,2756785,4019139,2615874,2615956,2615795,2615958,2615957,2615796)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Procedure Occurrence Criteria

UNION ALL
-- Begin Device Exposure Criteria
select C.person_id, C.device_exposure_id as event_id, C.device_exposure_start_date as start_date, C.device_exposure_end_date as end_date,
       C.device_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.device_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DEVICE_EXPOSURE de
JOIN #Codesets codesets on ((de.device_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Device Exposure Criteria

UNION ALL
-- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Drug Exposure Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,0,end_date) > start_date then DATEADD(day,0,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 2,
					""ProcedureTypeExclude"" : false
				}
			},
			{
				""DeviceExposure"" : {
					""CodesetId"" : 2,
					""DeviceTypeExclude"" : false
				}
			},
			{
				""DrugExposure"" : {
					""CodesetId"" : 1,
					""DrugTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 3,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Cardiac arrhythmia composite"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.478422e+07,
							""CONCEPT_NAME"" : ""Cardiac arrhythmia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""698247007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.800114e+07,
							""CONCEPT_NAME"" : ""Cardiac arrhythmia & conduction disorders w CC"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""309"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""DRG"",
							""CONCEPT_CLASS_ID"" : ""MS-DRG""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.800114e+07,
							""CONCEPT_NAME"" : ""Cardiac arrhythmia & conduction disorders w/o CC/MCC"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""DRG"",
							""CONCEPT_CLASS_ID"" : ""MS-DRG""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4169095,
							""CONCEPT_NAME"" : ""Bradycardia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""48867003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4103295,
							""CONCEPT_NAME"" : ""Ventricular tachycardia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""25569003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 1,
			""name"" : ""Antiarrhythmics"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.160025e+07,
							""CONCEPT_NAME"" : ""ANTIARRHYTHMICS, CLASS I AND III"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C01B"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""ATC"",
							""CONCEPT_CLASS_ID"" : ""ATC 3rd""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""Procedures/Devices to treat cardiac arrhythmia or pacemakers"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.589033e+07,
							""CONCEPT_NAME"" : ""Cardioversion, elective, electrical conversion of arrhythmia"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1012978"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.58904e+07,
							""CONCEPT_NAME"" : ""Operative tissue ablation and reconstruction of atria, extensive (eg, maze procedure)"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1014679"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2107068,
							""CONCEPT_NAME"" : ""Operative tissue ablation and reconstruction of atria, performed at the time of other cardiac procedure(s), extensive (eg, maze procedure), with cardiopulmonary bypass (List separately in addition to code for primary procedure)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""33259"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4051932,
							""CONCEPT_NAME"" : ""Procedure for arrhythmia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233154000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4051938,
							""CONCEPT_NAME"" : ""Cardiac pacemaker procedure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233174007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2313791,
							""CONCEPT_NAME"" : ""Cardioversion, elective, electrical conversion of arrhythmia; external"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""92960"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2756785,
							""CONCEPT_NAME"" : ""Insertion of Pacemaker, Single Chamber Rate Responsive into Abdomen Subcutaneous Tissue and Fascia, Percutaneous Approach"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0JH835Z"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4019139,
							""CONCEPT_NAME"" : ""Introduction of cardiac pacemaker system via vein"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""175135009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2615874,
							""CONCEPT_NAME"" : ""Lead, pacemaker, other than transvenous vdd single pass"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C1898"",
							""DOMAIN_ID"" : ""Device"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2615956,
							""CONCEPT_NAME"" : ""Pacemaker, dual chamber, non rate-responsive (implantable)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C2619"",
							""DOMAIN_ID"" : ""Device"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2615795,
							""CONCEPT_NAME"" : ""Pacemaker, dual chamber, rate-responsive (implantable)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C1785"",
							""DOMAIN_ID"" : ""Device"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2615958,
							""CONCEPT_NAME"" : ""Pacemaker, other than single or dual chamber (implantable)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C2621"",
							""DOMAIN_ID"" : ""Device"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2615957,
							""CONCEPT_NAME"" : ""Pacemaker, single chamber, non rate-responsive (implantable)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C2620"",
							""DOMAIN_ID"" : ""Device"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2615796,
							""CONCEPT_NAME"" : ""Pacemaker, single chamber, rate-responsive (implantable)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C1786"",
							""DOMAIN_ID"" : ""Device"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2100778,
							""CONCEPT_NAME"" : ""Anesthesia for procedures on the integumentary system on the extremities, anterior trunk and perineum; electrical conversion of arrhythmias"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""00410"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2313929,
							""CONCEPT_NAME"" : ""Comprehensive electrophysiologic evaluation including insertion and repositioning of multiple electrode catheters with induction or attempted induction of arrhythmia; with right atrial pacing and recording, right ventricular pacing and recording, His bund"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""93620"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 0
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
161,[COVID ID161 V1] Bradycardia or heart block during hospitalization,161,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4051938,2313791,2756785,4019139,2615874,2615956,2615795,2615958,2615957,2615796)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4051938,2313791,2756785,4019139,2615874,2615956,2615795,2615958,2615957,2615796)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (320425,317302,4305210,4169095)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (320425,317302,4305210)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Device Exposure Criteria
select C.person_id, C.device_exposure_id as event_id, C.device_exposure_start_date as start_date, C.device_exposure_end_date as end_date,
       C.device_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.device_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DEVICE_EXPOSURE de
JOIN #Codesets codesets on ((de.device_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Device Exposure Criteria

UNION ALL
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 1,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""DeviceExposure"" : {
					""CodesetId"" : 0,
					""DeviceTypeExclude"" : false
				}
			},
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 0,
					""ProcedureTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 2,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Pacemaker"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4051938,
							""CONCEPT_NAME"" : ""Cardiac pacemaker procedure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233174007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2313791,
							""CONCEPT_NAME"" : ""Cardioversion, elective, electrical conversion of arrhythmia; external"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""92960"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2756785,
							""CONCEPT_NAME"" : ""Insertion of Pacemaker, Single Chamber Rate Responsive into Abdomen Subcutaneous Tissue and Fascia, Percutaneous Approach"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0JH835Z"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4019139,
							""CONCEPT_NAME"" : ""Introduction of cardiac pacemaker system via vein"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""175135009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2615874,
							""CONCEPT_NAME"" : ""Lead, pacemaker, other than transvenous vdd single pass"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C1898"",
							""DOMAIN_ID"" : ""Device"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2615956,
							""CONCEPT_NAME"" : ""Pacemaker, dual chamber, non rate-responsive (implantable)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C2619"",
							""DOMAIN_ID"" : ""Device"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2615795,
							""CONCEPT_NAME"" : ""Pacemaker, dual chamber, rate-responsive (implantable)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C1785"",
							""DOMAIN_ID"" : ""Device"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2615958,
							""CONCEPT_NAME"" : ""Pacemaker, other than single or dual chamber (implantable)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C2621"",
							""DOMAIN_ID"" : ""Device"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2615957,
							""CONCEPT_NAME"" : ""Pacemaker, single chamber, non rate-responsive (implantable)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C2620"",
							""DOMAIN_ID"" : ""Device"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2615796,
							""CONCEPT_NAME"" : ""Pacemaker, single chamber, rate-responsive (implantable)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""C1786"",
							""DOMAIN_ID"" : ""Device"",
							""VOCABULARY_ID"" : ""HCPCS"",
							""CONCEPT_CLASS_ID"" : ""HCPCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 1,
			""name"" : ""Bradycardia or heart block"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 320425,
							""CONCEPT_NAME"" : ""Heart block"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233916004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 317302,
							""CONCEPT_NAME"" : ""Sinus node dysfunction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""60423000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4305210,
							""CONCEPT_NAME"" : ""Atrioventricular conduction disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""418341009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4169095,
							""CONCEPT_NAME"" : ""Bradycardia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""48867003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
162,[COVID ID162 V1] Supraventricular arrythymia during hospitalization,162,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (313217,314665,4248028)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (313217,314665,4248028)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 1,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Supraventricular arrythymia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 313217,
							""CONCEPT_NAME"" : ""Atrial fibrillation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49436004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 314665,
							""CONCEPT_NAME"" : ""Atrial flutter"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5370000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4248028,
							""CONCEPT_NAME"" : ""Supraventricular arrhythmia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""72654001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 1,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
163,[COVID ID163 V1] ventricular arrhythmia or cardiac arrest during hospitalization,163,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4185572,321042,4103295)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4185572,321042,4103295)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 3,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""ventricular arrhythmia or cardiac arrest"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4185572,
							""CONCEPT_NAME"" : ""Ventricular arrhythmia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""44103008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 321042,
							""CONCEPT_NAME"" : ""Cardiac arrest"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""410429000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4103295,
							""CONCEPT_NAME"" : ""Ventricular tachycardia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""25569003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
164,[COVID ID164 V1] Death,164,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;




with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Death Criteria
select C.person_id, C.person_id as event_id, C.death_date as start_date, DATEADD(d,1,C.death_date) as end_date,
       coalesce(C.cause_concept_id,0) as TARGET_CONCEPT_ID, CAST(NULL as bigint) as visit_occurrence_id,
       C.death_date as sort_date
from 
(
  select d.*
  FROM @cdm_database_schema.DEATH d

) C


-- End Death Criteria


  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;





TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""Death"" : {
					""DeathTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""ConceptSets"" : [],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
165,[COVID ID165 V1] Stillbirth,165,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (443213)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443213)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Condition Occurrence Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Observation Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,start_date) > start_date then DATEADD(day,1,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 60, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,60,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 0,
					""ObservationTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Stillbirth "",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 443213,
							""CONCEPT_NAME"" : ""Stillbirth"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""237364002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 60
	},
	""CensorWindow"" : {}
}"
166,[COVID ID166 V1] Livebirth Delivery,166,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4092289,4163851,40483101,40482735)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4092289,4163851,40483101,40482735)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4015162)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4015162)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Condition Occurrence Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Observation Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 90, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,90,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 0,
					""ObservationTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Livebirth"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4092289,
							""CONCEPT_NAME"" : ""Livebirth"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""281050002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4163851,
							""CONCEPT_NAME"" : ""Multiple birth"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""45384004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4015162,
							""CONCEPT_NAME"" : ""Twins - both stillborn"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""169830007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.04831e+07,
							""CONCEPT_NAME"" : ""Twin liveborn born in hospital by cesarean section"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442342003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.048274e+07,
							""CONCEPT_NAME"" : ""Liveborn born in hospital"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442311008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}"
167,[COVID ID167 V1] Livebirth Preterm Delivery,167,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4092289,4163851,40483101,40482735)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4092289,4163851,40483101,40482735)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4015162)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4015162)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4014461,4151169,4149449,4149457,4014299,4149451,4150406,4150405,4150404,4195545,4148097,4118056,72726,4171115,440847,4086393,4147874,4175637,4064709,4058403,45757175,45757176,36712702,136530,2514572,42740403,2514571,2514570)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4014461,4151169,4149449,4149457,4014299,4149451,4150406,4150405,4150404,4195545,4148097,4118056,72726,4171115,440847,4086393,4147874,4175637,4064709,4058403,45757175,45757176,36712702,136530,2514572,42740403,2514571,2514570)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Condition Occurrence Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Observation Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM #qualified_events P
INNER JOIN
(
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 90, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,90,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 0,
					""ObservationTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Livebirth"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4092289,
							""CONCEPT_NAME"" : ""Livebirth"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""281050002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4163851,
							""CONCEPT_NAME"" : ""Multiple birth"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""45384004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4015162,
							""CONCEPT_NAME"" : ""Twins - both stillborn"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""169830007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.04831e+07,
							""CONCEPT_NAME"" : ""Twin liveborn born in hospital by cesarean section"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442342003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.048274e+07,
							""CONCEPT_NAME"" : ""Liveborn born in hospital"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442311008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 1,
			""name"" : ""Preterm delivery"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4014461,
							""CONCEPT_NAME"" : ""Baby birth weight equal to 50%-74%"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""169864006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4151169,
							""CONCEPT_NAME"" : ""Baby birth weight less than 751gm"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310491007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4149449,
							""CONCEPT_NAME"" : ""Baby premature 24-26 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310523002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4149457,
							""CONCEPT_NAME"" : ""Baby premature 26-28 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310548004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4014299,
							""CONCEPT_NAME"" : ""Baby premature 36-38 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""169849006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4149451,
							""CONCEPT_NAME"" : ""Baby premature 36 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310530008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4150406,
							""CONCEPT_NAME"" : ""Baby premature 37 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310529003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4150405,
							""CONCEPT_NAME"" : ""Baby premature 38 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310528006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4150404,
							""CONCEPT_NAME"" : ""Baby premature 39 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310527001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4195545,
							""CONCEPT_NAME"" : ""Disorder relating to short gestation AND/OR low birthweight"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""67645006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4148097,
							""CONCEPT_NAME"" : ""Fetal or neonatal effect of abruptio placentae"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""268803008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4118056,
							""CONCEPT_NAME"" : ""Fetal or neonatal effect of maternal premature rupture of membrane"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""206037001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 72726,
							""CONCEPT_NAME"" : ""Light-for-dates with signs of fetal malnutrition"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""64177003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4171115,
							""CONCEPT_NAME"" : ""Low birth weight infant"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""276610007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440847,
							""CONCEPT_NAME"" : ""Neonatal jaundice associated with preterm delivery"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""73749009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4086393,
							""CONCEPT_NAME"" : ""Premature delivery"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""282020008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4147874,
							""CONCEPT_NAME"" : ""Premature infant 28-37 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310661005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4175637,
							""CONCEPT_NAME"" : ""Premature pregnancy delivered"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49550006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4064709,
							""CONCEPT_NAME"" : ""Premature rupture of membranes, labor delayed by therapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""199661007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058403,
							""CONCEPT_NAME"" : ""Premature separation of placenta with coagulation defect"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""198912003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.575718e+07,
							""CONCEPT_NAME"" : ""Preterm labor in second trimester with preterm delivery in second trimester"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10761141000119107"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.575718e+07,
							""CONCEPT_NAME"" : ""Preterm labor in third trimester with preterm delivery in third trimester"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10761191000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.67127e+07,
							""CONCEPT_NAME"" : ""Preterm labor with preterm delivery"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10761241000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 136530,
							""CONCEPT_NAME"" : ""Sclerema neonatorum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""206539008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2514572,
							""CONCEPT_NAME"" : ""Subsequent intensive care, per day, for the evaluation and management of the recovering infant (present body weight of 2501-5000 grams)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""99480"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.27404e+07,
							""CONCEPT_NAME"" : ""Subsequent intensive care, per day, for the evaluation and management of the recovering low birth weight infant (present body weight of 1500-2500 grams) Infants with present body weight of 1500-2500 grams who are no longer critically ill continue to requ"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""99299"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2514571,
							""CONCEPT_NAME"" : ""Subsequent intensive care, per day, for the evaluation and management of the recovering low birth weight infant (present body weight of 1500-2500 grams)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""99479"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2514570,
							""CONCEPT_NAME"" : ""Subsequent intensive care, per day, for the evaluation and management of the recovering very low birth weight infant (present body weight less than 1500 grams)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""99478"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Preterm delivery"",
			""expression"" : {
				""Type"" : ""ANY"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 1,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ProcedureOccurrence"" : {
								""CodesetId"" : 1,
								""ProcedureTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}"
168,[COVID ID168 V1] Livebirth Post term Delivery,168,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4092289,4163851,40483101,40482735)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4092289,4163851,40483101,40482735)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4015162)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4015162)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (437369,440833,441128,432695,439894)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (437369,440833,441128,432695,439894)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Condition Occurrence Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Observation Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 90, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,90,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 0,
					""ObservationTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Livebirth"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4092289,
							""CONCEPT_NAME"" : ""Livebirth"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""281050002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4163851,
							""CONCEPT_NAME"" : ""Multiple birth"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""45384004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4015162,
							""CONCEPT_NAME"" : ""Twins - both stillborn"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""169830007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.04831e+07,
							""CONCEPT_NAME"" : ""Twin liveborn born in hospital by cesarean section"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442342003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.048274e+07,
							""CONCEPT_NAME"" : ""Liveborn born in hospital"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442311008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 1,
			""name"" : ""Post term delivery"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 437369,
							""CONCEPT_NAME"" : ""Postmature infancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""16207008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440833,
							""CONCEPT_NAME"" : ""Postmaturity of fetus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""433145001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 441128,
							""CONCEPT_NAME"" : ""Post-term infant, not heavy-for-dates"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""79995002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 432695,
							""CONCEPT_NAME"" : ""Post-term pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""90968009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439894,
							""CONCEPT_NAME"" : ""Post-term pregnancy - delivered"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""199063009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Post term delivery"",
			""expression"" : {
				""Type"" : ""ANY"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 1,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}"
169,[COVID ID169 V1] Livebirth excluding preterm and post term delivery,169,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4092289,4163851,40483101,40482735)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4092289,4163851,40483101,40482735)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4015162)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4015162)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (437369,440833,441128,432695,439894)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (437369,440833,441128,432695,439894)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4014461,4151169,4149449,4149457,4014299,4149451,4150406,4150405,4150404,4195545,4148097,4118056,72726,4171115,440847,4086393,4147874,4175637,4064709,4058403,45757175,45757176,36712702,136530,2514572,42740403,2514571,2514570)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4014461,4151169,4149449,4149457,4014299,4149451,4150406,4150405,4150404,4195545,4148097,4118056,72726,4171115,440847,4086393,4147874,4175637,4064709,4058403,45757175,45757176,36712702,136530,2514572,42740403,2514571,2514570)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Condition Occurrence Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Observation Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Procedure Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 3
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 90, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,90,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 0,
					""ObservationTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Livebirth"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4092289,
							""CONCEPT_NAME"" : ""Livebirth"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""281050002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4163851,
							""CONCEPT_NAME"" : ""Multiple birth"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""45384004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4015162,
							""CONCEPT_NAME"" : ""Twins - both stillborn"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""169830007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.04831e+07,
							""CONCEPT_NAME"" : ""Twin liveborn born in hospital by cesarean section"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442342003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.048274e+07,
							""CONCEPT_NAME"" : ""Liveborn born in hospital"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442311008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 1,
			""name"" : ""Post term delivery"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 437369,
							""CONCEPT_NAME"" : ""Postmature infancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""16207008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440833,
							""CONCEPT_NAME"" : ""Postmaturity of fetus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""433145001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 441128,
							""CONCEPT_NAME"" : ""Post-term infant, not heavy-for-dates"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""79995002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 432695,
							""CONCEPT_NAME"" : ""Post-term pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""90968009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439894,
							""CONCEPT_NAME"" : ""Post-term pregnancy - delivered"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""199063009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""Preterm delivery"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4014461,
							""CONCEPT_NAME"" : ""Baby birth weight equal to 50%-74%"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""169864006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4151169,
							""CONCEPT_NAME"" : ""Baby birth weight less than 751gm"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310491007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4149449,
							""CONCEPT_NAME"" : ""Baby premature 24-26 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310523002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4149457,
							""CONCEPT_NAME"" : ""Baby premature 26-28 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310548004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4014299,
							""CONCEPT_NAME"" : ""Baby premature 36-38 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""169849006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4149451,
							""CONCEPT_NAME"" : ""Baby premature 36 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310530008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4150406,
							""CONCEPT_NAME"" : ""Baby premature 37 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310529003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4150405,
							""CONCEPT_NAME"" : ""Baby premature 38 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310528006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4150404,
							""CONCEPT_NAME"" : ""Baby premature 39 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310527001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4195545,
							""CONCEPT_NAME"" : ""Disorder relating to short gestation AND/OR low birthweight"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""67645006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4148097,
							""CONCEPT_NAME"" : ""Fetal or neonatal effect of abruptio placentae"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""268803008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4118056,
							""CONCEPT_NAME"" : ""Fetal or neonatal effect of maternal premature rupture of membrane"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""206037001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 72726,
							""CONCEPT_NAME"" : ""Light-for-dates with signs of fetal malnutrition"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""64177003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4171115,
							""CONCEPT_NAME"" : ""Low birth weight infant"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""276610007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440847,
							""CONCEPT_NAME"" : ""Neonatal jaundice associated with preterm delivery"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""73749009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4086393,
							""CONCEPT_NAME"" : ""Premature delivery"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""282020008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4147874,
							""CONCEPT_NAME"" : ""Premature infant 28-37 weeks"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310661005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4175637,
							""CONCEPT_NAME"" : ""Premature pregnancy delivered"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""49550006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4064709,
							""CONCEPT_NAME"" : ""Premature rupture of membranes, labor delayed by therapy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""199661007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4058403,
							""CONCEPT_NAME"" : ""Premature separation of placenta with coagulation defect"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""198912003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.575718e+07,
							""CONCEPT_NAME"" : ""Preterm labor in second trimester with preterm delivery in second trimester"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10761141000119107"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.575718e+07,
							""CONCEPT_NAME"" : ""Preterm labor in third trimester with preterm delivery in third trimester"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10761191000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.67127e+07,
							""CONCEPT_NAME"" : ""Preterm labor with preterm delivery"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10761241000119104"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 136530,
							""CONCEPT_NAME"" : ""Sclerema neonatorum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""206539008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2514572,
							""CONCEPT_NAME"" : ""Subsequent intensive care, per day, for the evaluation and management of the recovering infant (present body weight of 2501-5000 grams)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""99480"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.27404e+07,
							""CONCEPT_NAME"" : ""Subsequent intensive care, per day, for the evaluation and management of the recovering low birth weight infant (present body weight of 1500-2500 grams) Infants with present body weight of 1500-2500 grams who are no longer critically ill continue to requ"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""99299"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2514571,
							""CONCEPT_NAME"" : ""Subsequent intensive care, per day, for the evaluation and management of the recovering low birth weight infant (present body weight of 1500-2500 grams)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""99479"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2514570,
							""CONCEPT_NAME"" : ""Subsequent intensive care, per day, for the evaluation and management of the recovering very low birth weight infant (present body weight less than 1500 grams)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""99478"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Not preterm or post term delivery"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 1,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 2,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ProcedureOccurrence"" : {
								""CodesetId"" : 2,
								""ProcedureTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}"
170,[COVID ID170 V1] Abortion,170,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (42739743,2101811,2004526,4028644,2004489,4138740,4074867,4170151,194694,75605,436228,4063309,4067106,4194423,4113503,4114280,4150401,4153287,4086797,4170121,4297250,4240605,2110325,2110326,2110327,2110328,4212941,4115153)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (42739743,2101811,2004526,4028644,2004489,4138740,4074867,4170151,194694,75605,436228,4063309,4067106,4194423,4113503,4114280,4150401,4153287,4086797,4170121,4297250,4240605,2110325,2110326,2110327,2110328,4212941,4115153)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4190767,439083,4117876,4129710,4215504,4261479,4034088,2110292,4276794,4300078,435020)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4190767,439083,4117876,4129710,4215504,4261479,4034088,2110292,4276794,4300078,435020)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Condition Occurrence Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Observation Criteria

UNION ALL
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 90, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,90,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 0,
					""ObservationTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			},
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 0,
					""ProcedureTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Abortion"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.273974e+07,
							""CONCEPT_NAME"" : ""Anesthesia for abortion procedures"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""01964"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2101811,
							""CONCEPT_NAME"" : ""Anesthesia for incomplete or missed abortion procedures"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""01965"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2004526,
							""CONCEPT_NAME"" : ""Aspiration curettage following delivery or abortion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""69.52"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD9Proc"",
							""CONCEPT_CLASS_ID"" : ""4-dig billing code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4028644,
							""CONCEPT_NAME"" : ""Biochemical pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""237243004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2004489,
							""CONCEPT_NAME"" : ""Dilation and curettage for termination of pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""69.01"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD9Proc"",
							""CONCEPT_CLASS_ID"" : ""4-dig billing code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4138740,
							""CONCEPT_NAME"" : ""Dilation of cervix uteri and curettage of products of conception from uterus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""265062002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4074867,
							""CONCEPT_NAME"" : ""Dilation of cervix uteri and curettage of uterus for removal of missed miscarriage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""176833006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4170151,
							""CONCEPT_NAME"" : ""Evacuation of uterus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""275166002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 194694,
							""CONCEPT_NAME"" : ""Failed attempted termination of pregnancy with complication"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59919008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 75605,
							""CONCEPT_NAME"" : ""Fetal death, affecting management of mother"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""14022007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 436228,
							""CONCEPT_NAME"" : ""Fetal death due to termination of pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""67313008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4063309,
							""CONCEPT_NAME"" : ""Intrauterine death with antenatal problem"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""199608004"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4067106,
							""CONCEPT_NAME"" : ""Miscarriage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17369002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4194423,
							""CONCEPT_NAME"" : ""Post miscarriage counseling"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""395184006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4113503,
							""CONCEPT_NAME"" : ""Readmission for retained products of conception, legal termination of pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""198862007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4114280,
							""CONCEPT_NAME"" : ""Readmission for retained products of conception, spontaneous abortion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""198861000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4150401,
							""CONCEPT_NAME"" : ""Reason for termination of pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""310506006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4190767,
							""CONCEPT_NAME"" : ""Referral for termination of pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""415262008"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4153287,
							""CONCEPT_NAME"" : ""Removal of products of conception from fallopian tube"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""271415006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4086797,
							""CONCEPT_NAME"" : ""Requests pregnancy termination"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""184005004"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Context-dependent""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4170121,
							""CONCEPT_NAME"" : ""Retained products after miscarriage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""275425008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4297250,
							""CONCEPT_NAME"" : ""Termination of pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""386639001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4240605,
							""CONCEPT_NAME"" : ""Termination of pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""57797005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2110325,
							""CONCEPT_NAME"" : ""Treatment of incomplete abortion, any trimester, completed surgically"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59812"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2110326,
							""CONCEPT_NAME"" : ""Treatment of missed abortion, completed surgically; first trimester"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59820"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2110327,
							""CONCEPT_NAME"" : ""Treatment of missed abortion, completed surgically; second trimester"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59821"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2110328,
							""CONCEPT_NAME"" : ""Treatment of septic abortion, completed surgically"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59830"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439083,
							""CONCEPT_NAME"" : ""Hydatidiform mole, benign"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""417044008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4117876,
							""CONCEPT_NAME"" : ""Blighted ovum and/or carneous mole"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""286996009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4129710,
							""CONCEPT_NAME"" : ""Complete hydatidiform mole"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""237249000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4215504,
							""CONCEPT_NAME"" : ""Invasive hydatidiform mole"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""416669000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4261479,
							""CONCEPT_NAME"" : ""Carneous mole"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""44979007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4034088,
							""CONCEPT_NAME"" : ""Partial hydatidiform mole"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""237250000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2110292,
							""CONCEPT_NAME"" : ""Hysterotomy, abdominal (eg, for hydatidiform mole, abortion)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59100"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4276794,
							""CONCEPT_NAME"" : ""Stone mole"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""64890008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4300078,
							""CONCEPT_NAME"" : ""Velamentous insertion of umbilical cord"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""77278008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435020,
							""CONCEPT_NAME"" : ""Short cord - delivered"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""199889008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4212941,
							""CONCEPT_NAME"" : ""Aspiration curettage of uterus for termination of pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""391897002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4115153,
							""CONCEPT_NAME"" : ""Medical termination of pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""285409006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}"
171,[COVID ID171 V1] Premature Rupture of Membranes,171,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4118056,194702)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4118056,194702)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 90, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,90,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 3,
					""ConditionTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 3,
			""name"" : ""Premature rupture of membranes"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4118056,
							""CONCEPT_NAME"" : ""Fetal or neonatal effect of maternal premature rupture of membrane"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""206037001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 194702,
							""CONCEPT_NAME"" : ""Premature rupture of membranes"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""44223004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}"
172,[COVID ID172 V1] Fetal growth restriction,172,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (80204,45765446,72693)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (80204,45765446,72693)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C
JOIN @cdm_database_schema.PERSON P on C.person_id = P.person_id
WHERE P.gender_concept_id in (8532)
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 180, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,180,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 4,
					""ConditionTypeExclude"" : false,
					""Gender"" : [
						{
							""CONCEPT_ID"" : 8532,
							""CONCEPT_NAME"" : ""FEMALE"",
							""STANDARD_CONCEPT"" : null,
							""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
							""INVALID_REASON"" : null,
							""INVALID_REASON_CAPTION"" : ""Unknown"",
							""CONCEPT_CODE"" : ""F"",
							""DOMAIN_ID"" : ""Gender"",
							""VOCABULARY_ID"" : ""Gender"",
							""CONCEPT_CLASS_ID"" : null
						}
					]
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 4,
			""name"" : ""Fetal growth restriction"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 80204,
							""CONCEPT_NAME"" : ""Fetal growth restriction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""22033007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.576545e+07,
							""CONCEPT_NAME"" : ""Intrauterine growth restriction, metaphyseal dysplasia, adrenal hypoplasia congenita, and genital anomaly syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""702384004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 72693,
							""CONCEPT_NAME"" : ""Poor fetal growth affecting management"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""397949005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 180
	},
	""CensorWindow"" : {}
}"
173,[COVID ID173 V1] Cesarean section,173,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4015701)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4015701)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4032769,4082412)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4032769,4082412)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 90, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,90,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 0,
					""ProcedureTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Cesarean Section"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4015701,
							""CONCEPT_NAME"" : ""Cesarean section"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""11466000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4032769,
							""CONCEPT_NAME"" : ""Postmortem cesarean section"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""236990004"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4082412,
							""CONCEPT_NAME"" : ""Hysterotomy and termination of pregnancy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""18302006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 90
	},
	""CensorWindow"" : {}
}"
174,[COVID ID174 V1] Hospitalization for Asthma,174,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (317009,4235703,4279553,2101899,2101898)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (317009,4235703,4279553,2101899,2101898)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Visit Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C

WHERE C.condition_type_concept_id  in (38000184,38000200,38000215,38000230,45756835,45756843,38000183,38000199,44786627)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,0,end_date) > start_date then DATEADD(day,0,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""VisitOccurrence"" : {
					""CodesetId"" : 5,
					""VisitTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 3,
			""name"" : ""Asthma"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 317009,
							""CONCEPT_NAME"" : ""Asthma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""195967001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4235703,
							""CONCEPT_NAME"" : ""Asthma management"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""406162001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4279553,
							""CONCEPT_NAME"" : ""Eosinophilic asthma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""367542003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2101899,
							""CONCEPT_NAME"" : ""Intermittent asthma (Asthma)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1039F"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2101898,
							""CONCEPT_NAME"" : ""Persistent asthma (mild, moderate or severe) (Asthma)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1038F"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""Asthma"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 3,
								""ConditionType"" : [
									{
										""CONCEPT_ID"" : 3.800018e+07,
										""CONCEPT_NAME"" : ""Inpatient detail - 1st position"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822060"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 3.80002e+07,
										""CONCEPT_NAME"" : ""Inpatient header - 1st position"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822076"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 3.800022e+07,
										""CONCEPT_NAME"" : ""Outpatient detail - 1st position"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822091"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 3.800023e+07,
										""CONCEPT_NAME"" : ""Outpatient header - 1st position"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822106"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 4.575684e+07,
										""CONCEPT_NAME"" : ""Carrier claim header - 1st position"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822136"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 4.575684e+07,
										""CONCEPT_NAME"" : ""Carrier claim detail - 1st position"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822144"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 3.800018e+07,
										""CONCEPT_NAME"" : ""Inpatient detail - primary"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822059"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 3.80002e+07,
										""CONCEPT_NAME"" : ""Inpatient header - primary"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822075"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 4.478663e+07,
										""CONCEPT_NAME"" : ""Primary Condition"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822127"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									}
								],
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""EndWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : true,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 0
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
175,[COVID ID175 V1] Hospitalization for COPD,175,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (255573,258780)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (255573,258780)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Visit Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.condition_type_concept_id  in (38000183,38000199,44786627,38000184,38000200,38000215,38000230,45756835,45756843)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,0,P.START_DATE) AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),1)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,0,end_date) > start_date then DATEADD(day,0,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""VisitOccurrence"" : {
					""CodesetId"" : 1,
					""VisitTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 1,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : "" Chronic obstructive lung disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 255573,
							""CONCEPT_NAME"" : ""Chronic obstructive lung disease"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""13645005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 258780,
							""CONCEPT_NAME"" : ""Emphysematous bronchitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""185086009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [
		{
			""name"" : ""COPD"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 2,
								""ConditionType"" : [
									{
										""CONCEPT_ID"" : 3.800018e+07,
										""CONCEPT_NAME"" : ""Inpatient detail - primary"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822059"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 3.80002e+07,
										""CONCEPT_NAME"" : ""Inpatient header - primary"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822075"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 4.478663e+07,
										""CONCEPT_NAME"" : ""Primary Condition"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822127"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 3.800018e+07,
										""CONCEPT_NAME"" : ""Inpatient detail - 1st position"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822060"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 3.80002e+07,
										""CONCEPT_NAME"" : ""Inpatient header - 1st position"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822076"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 3.800022e+07,
										""CONCEPT_NAME"" : ""Outpatient detail - 1st position"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822091"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 3.800023e+07,
										""CONCEPT_NAME"" : ""Outpatient header - 1st position"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822106"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 4.575684e+07,
										""CONCEPT_NAME"" : ""Carrier claim header - 1st position"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822136"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									},
									{
										""CONCEPT_ID"" : 4.575684e+07,
										""CONCEPT_NAME"" : ""Carrier claim detail - 1st position"",
										""STANDARD_CONCEPT"" : null,
										""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
										""INVALID_REASON"" : null,
										""INVALID_REASON_CAPTION"" : ""Unknown"",
										""CONCEPT_CODE"" : ""OMOP4822144"",
										""DOMAIN_ID"" : ""Type Concept"",
										""VOCABULARY_ID"" : ""Condition Type"",
										""CONCEPT_CLASS_ID"" : null
									}
								],
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Days"" : 0,
								""Coeff"" : -1
							},
							""End"" : {
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""EndWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : true,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 2,
							""Count"" : 1,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 0
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
176,[COVID ID176 V1] Pneumonia episodes,176,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4050869,255848)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4050869,255848)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45770911,4001167,4049965,36712839,252552)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45770911,4001167,4049965,36712839,252552)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,7,end_date) > start_date then DATEADD(day,7,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 2,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 365,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Pneumonia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.577091e+07,
							""CONCEPT_NAME"" : ""Acute pneumonia due to coccidioidomycosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""184431000119108"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4001167,
							""CONCEPT_NAME"" : ""Acute ulcerative gastroenteritis complicating pneumonia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""109814008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4050869,
							""CONCEPT_NAME"" : ""Atypical pneumonia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233606009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4049965,
							""CONCEPT_NAME"" : ""Fungal pneumonia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233613009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.671284e+07,
							""CONCEPT_NAME"" : ""Idiopathic pneumonia syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""12381000132107"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 252552,
							""CONCEPT_NAME"" : ""Ornithosis with pneumonia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""81164001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 255848,
							""CONCEPT_NAME"" : ""Pneumonia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233604007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 7
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
177,[COVID ID177 V1] intensive services during hospitalization,177,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4338595,2787821,46257586,1531632,1531631,1531630,2787820,44515635,4052536,2002247,44811012)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (46257586,44515635,4052536,2002247)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4230167,40481547,4080957,4168966,4232550,4235361,37116689,40487536,4332501,37206832,765576,44509482,2108681,4219858,2788037,2788038,2788036,45887795,42738852,42738853,4237618,4251737,44791135,4072633)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4230167,40481547,4080957,4168966,4232550,4235361,37116689,40487536,4332501,37206832,765576,44509482,2108681,4219858,2788037,2788038,2788036,45887795,42738852,42738853,4237618,4251737,44791135,4072633)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4031379,4074663,4348300,4021786,2108642,2108641,4107247,4232891,44808555,4006318,4254108,4259233,4254905,4353715)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4031379,4074663,4348300,4021786,2108642,2108641,4107247,4232891,44808555,4006318,4254108,4259233,4254905,4353715)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4166281,2106568,4115488,4337047,4168864,4199580,2831237,2836115,2794811,2862930,2870619,2829384,2829386,4065590,2743216,4311023,4195473,2106569,4208093,2106565,2106567,2106562,2106563,45887989)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4166281,2106568,4115488,4337047,4168864,4199580,2831237,2836115,2794811,2862930,2870619,2829384,2829386,4065590,2743216,4311023,4195473,2106569,4208093,2106565,2106567,2106562,2106563,45887989)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (2110486)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (2110486)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Procedure Occurrence Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE,
       C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.measurement_date as sort_date
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Measurement Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Observation Criteria

UNION ALL
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 9))
) C


-- End Procedure Occurrence Criteria

UNION ALL
-- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,start_date) > start_date then DATEADD(day,1,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 8,
					""ProcedureTypeExclude"" : false
				}
			},
			{
				""Measurement"" : {
					""CodesetId"" : 8,
					""MeasurementTypeExclude"" : false
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 8,
					""ObservationTypeExclude"" : false
				}
			},
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 9,
					""ProcedureTypeExclude"" : false
				}
			},
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 7,
					""ProcedureTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 4,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 4,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""Extracorporeal membrane oxygenation (ECMO) procedure"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4338595,
							""CONCEPT_NAME"" : ""Cardiac support using extracorporeal membrane oxygenation circuitry"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""232969009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2787821,
							""CONCEPT_NAME"" : ""Extracorporeal Hyperbaric Oxygenation, Continuous"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A05221"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.625759e+07,
							""CONCEPT_NAME"" : ""Extracorporeal Membrane Oxygenation or Extracorporeal Life Support Services and Procedures"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1021846"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1531632,
							""CONCEPT_NAME"" : ""Extracorporeal Oxygenation, Membrane, Central"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A1522F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1531631,
							""CONCEPT_NAME"" : ""Extracorporeal Oxygenation, Membrane, Peripheral Veno-arterial"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A1522G"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1531630,
							""CONCEPT_NAME"" : ""Extracorporeal Oxygenation, Membrane, Peripheral Veno-venous"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A1522H"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2787820,
							""CONCEPT_NAME"" : ""Extracorporeal Supersaturated Oxygenation, Intermittent"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A0512C"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.451564e+07,
							""CONCEPT_NAME"" : ""Extracorporeal membrane oxygenation"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""X58.1"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""OPCS4"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4052536,
							""CONCEPT_NAME"" : ""Extracorporeal membrane oxygenation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233573008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2002247,
							""CONCEPT_NAME"" : ""Extracorporeal membrane oxygenation [ECMO]"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""39.65"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD9Proc"",
							""CONCEPT_CLASS_ID"" : ""4-dig billing code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.481101e+07,
							""CONCEPT_NAME"" : ""Fluoroscopy guided percutaneous insertion of cannula for extracorporeal membrane oxygenation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""862791000000106"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 8,
			""name"" : ""Mechanical ventilation"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4230167,
							""CONCEPT_NAME"" : ""Artificial respiration"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40617009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4031379,
							""CONCEPT_NAME"" : ""Artificial ventilation finding"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""129896002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.048155e+07,
							""CONCEPT_NAME"" : ""Dependence on ventilator"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444932008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4074663,
							""CONCEPT_NAME"" : ""Diaphragmatic augmentation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""243145001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4080957,
							""CONCEPT_NAME"" : ""Endotracheal respiratory assistance"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""182686001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4168966,
							""CONCEPT_NAME"" : ""Endotracheal tube present"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""419991009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4348300,
							""CONCEPT_NAME"" : ""Expired air ventilation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""243180002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4021786,
							""CONCEPT_NAME"" : ""Fear of disconnection from ventilator"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""225627007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2108642,
							""CONCEPT_NAME"" : ""Glossectomy; complete or total, with or without tracheostomy, with unilateral radical neck dissection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41145"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2108641,
							""CONCEPT_NAME"" : ""Glossectomy; complete or total, with or without tracheostomy, without radical neck dissection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41140"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4232550,
							""CONCEPT_NAME"" : ""Home visit for mechanical ventilation care"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""439887005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4235361,
							""CONCEPT_NAME"" : ""Hyperventilation therapy for traumatic brain injury"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""438603002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4107247,
							""CONCEPT_NAME"" : ""Inhalation anesthesia, machine system, semi-closed, no rebreathing of primary agent"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""30050007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.711669e+07,
							""CONCEPT_NAME"" : ""Insertion of endotracheal ventilation catheter"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""733496000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.048754e+07,
							""CONCEPT_NAME"" : ""Intubation of respiratory tract"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""447996002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4332501,
							""CONCEPT_NAME"" : ""Management of noninvasive mechanical ventilation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""430191008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.720683e+07,
							""CONCEPT_NAME"" : ""Mechanical insufflation exsufflation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""787180006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4232891,
							""CONCEPT_NAME"" : ""Mechanical ventilation response"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""404997003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 765576,
							""CONCEPT_NAME"" : ""Orotracheal intubation using bougie device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""450601000124103"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.450948e+07,
							""CONCEPT_NAME"" : ""Other specified ventilation support"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""E85.8"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""OPCS4"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2108681,
							""CONCEPT_NAME"" : ""Patient receiving care in the intensive care unit (ICU) and receiving mechanical ventilation, 24 hours or less (CRIT)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4168F"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4219858,
							""CONCEPT_NAME"" : ""Problem with patient ventilator"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""397846002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.480856e+07,
							""CONCEPT_NAME"" : ""Provision of mechanical ventilator"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""859311000000101"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2788037,
							""CONCEPT_NAME"" : ""Respiratory Ventilation, 24-96 Consecutive Hours"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A1945Z"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2788038,
							""CONCEPT_NAME"" : ""Respiratory Ventilation, Greater than 96 Consecutive Hours"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A1955Z"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2788036,
							""CONCEPT_NAME"" : ""Respiratory Ventilation, Less than 24 Consecutive Hours"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A1935Z"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4006318,
							""CONCEPT_NAME"" : ""Respiratory assist, manual"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""11140008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4254108,
							""CONCEPT_NAME"" : ""Resuscitation with artificial respiration"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""74596007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.58878e+07,
							""CONCEPT_NAME"" : ""Ventilation assist and management, initiation of pressure or volume preset ventilators for assisted or controlled breathing"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1014859"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.273885e+07,
							""CONCEPT_NAME"" : ""Ventilation assist and management, initiation of pressure or volume preset ventilators for assisted or controlled breathing; first day"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""94656"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.273885e+07,
							""CONCEPT_NAME"" : ""Ventilation assist and management, initiation of pressure or volume preset ventilators for assisted or controlled breathing; subsequent days"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""94657"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4237618,
							""CONCEPT_NAME"" : ""Ventilator care"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""409025002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4259233,
							""CONCEPT_NAME"" : ""Ventilator care assessment"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""410208007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4254905,
							""CONCEPT_NAME"" : ""Ventilator care education"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""410209004"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4251737,
							""CONCEPT_NAME"" : ""Ventilator care management"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""410210009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4353715,
							""CONCEPT_NAME"" : ""Ventilator finding"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""250870006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.479114e+07,
							""CONCEPT_NAME"" : ""Ventilatory support"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""231821000000109"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4072633,
							""CONCEPT_NAME"" : ""Weaning from mechanically assisted ventilation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""243174005"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""tracheostomy"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4166281,
							""CONCEPT_NAME"" : ""Anterior tracheostomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""274969000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2106568,
							""CONCEPT_NAME"" : ""Construction of tracheoesophageal fistula and subsequent insertion of an alaryngeal speech prosthesis (eg, voice button, Blom-Singer prosthesis)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31611"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4115488,
							""CONCEPT_NAME"" : ""Emergency tracheostomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""287439000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4337047,
							""CONCEPT_NAME"" : ""Insertion of tracheostomy tube"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""232685002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4168864,
							""CONCEPT_NAME"" : ""Lateral tracheostomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""274970004"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4199580,
							""CONCEPT_NAME"" : ""Mediastinal tracheostomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""52536006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2831237,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Bypass @ Trachea @ Open @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0B110F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2836115,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Bypass @ Trachea @ Percutaneous @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0B113F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2794811,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Change @ Trachea @ External @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0B21XF"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2862930,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Revision @ Trachea @ Open @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0BW10F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2870619,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Revision @ Trachea @ Percutaneous @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0BW13F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2829384,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Revision @ Trachea @ Percutaneous Endoscopic @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0BW14F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2829386,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Revision @ Trachea @ Via Natural or Artificial Opening @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0BW17F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4065590,
							""CONCEPT_NAME"" : ""Permanent tracheostomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""21619009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2743216,
							""CONCEPT_NAME"" : ""Removal of Tracheostomy Device from Trachea, Via Natural or Artificial Opening"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0BP17FZ"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4311023,
							""CONCEPT_NAME"" : ""Revision of stoma of trachea"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""392168001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4195473,
							""CONCEPT_NAME"" : ""Temporary tracheostomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""43988005"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2106569,
							""CONCEPT_NAME"" : ""Tracheal puncture, percutaneous with transtracheal aspiration and/or injection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31612"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4208093,
							""CONCEPT_NAME"" : ""Tracheostomy, emergency procedure by transtracheal approach"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""55622001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2106565,
							""CONCEPT_NAME"" : ""Tracheostomy, emergency procedure; cricothyroid membrane"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31605"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2106567,
							""CONCEPT_NAME"" : ""Tracheostomy, fenestration procedure with skin flaps"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31610"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2106562,
							""CONCEPT_NAME"" : ""Tracheostomy, planned (separate procedure)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31600"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2106563,
							""CONCEPT_NAME"" : ""Tracheostomy, planned (separate procedure); younger than 2 years"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31601"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.588799e+07,
							""CONCEPT_NAME"" : ""Transoral approach to skull base, brain stem or upper spinal cord for biopsy, decompression or excision of lesion"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1014232"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2110486,
							""CONCEPT_NAME"" : ""Transoral approach to skull base, brain stem or upper spinal cord for biopsy, decompression or excision of lesion; requiring splitting of tongue and/or mandible (including tracheostomy)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61576"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
178,[COVID ID178 V1] mechanical ventilation during hospitalization,178,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4230167,40481547,4080957,4168966,4232550,4235361,37116689,40487536,4332501,37206832,765576,44509482,2108681,4219858,2788037,2788038,2788036,45887795,42738852,42738853,4237618,4251737,44791135,4072633)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4230167,40481547,4080957,4168966,4232550,4235361,37116689,40487536,4332501,37206832,765576,44509482,2108681,4219858,2788037,2788038,2788036,45887795,42738852,42738853,4237618,4251737,44791135,4072633)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4031379,4074663,4348300,4021786,2108642,2108641,4107247,4232891,44808555,4006318,4254108,4259233,4254905,4353715)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4031379,4074663,4348300,4021786,2108642,2108641,4107247,4232891,44808555,4006318,4254108,4259233,4254905,4353715)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Procedure Occurrence Criteria

UNION ALL
-- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE,
       C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.measurement_date as sort_date
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Measurement Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o

) C


-- End Observation Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,start_date) > start_date then DATEADD(day,1,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 5,
					""ProcedureTypeExclude"" : false
				}
			},
			{
				""Measurement"" : {
					""CodesetId"" : 5,
					""MeasurementTypeExclude"" : false
				}
			},
			{
				""Observation"" : {
					""ObservationTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 4,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 4,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Mechanical ventilation"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4230167,
							""CONCEPT_NAME"" : ""Artificial respiration"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40617009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4031379,
							""CONCEPT_NAME"" : ""Artificial ventilation finding"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""129896002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.048155e+07,
							""CONCEPT_NAME"" : ""Dependence on ventilator"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""444932008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4074663,
							""CONCEPT_NAME"" : ""Diaphragmatic augmentation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""243145001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4080957,
							""CONCEPT_NAME"" : ""Endotracheal respiratory assistance"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""182686001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4168966,
							""CONCEPT_NAME"" : ""Endotracheal tube present"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""419991009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4348300,
							""CONCEPT_NAME"" : ""Expired air ventilation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""243180002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4021786,
							""CONCEPT_NAME"" : ""Fear of disconnection from ventilator"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""225627007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2108642,
							""CONCEPT_NAME"" : ""Glossectomy; complete or total, with or without tracheostomy, with unilateral radical neck dissection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41145"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2108641,
							""CONCEPT_NAME"" : ""Glossectomy; complete or total, with or without tracheostomy, without radical neck dissection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41140"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4232550,
							""CONCEPT_NAME"" : ""Home visit for mechanical ventilation care"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""439887005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4235361,
							""CONCEPT_NAME"" : ""Hyperventilation therapy for traumatic brain injury"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""438603002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4107247,
							""CONCEPT_NAME"" : ""Inhalation anesthesia, machine system, semi-closed, no rebreathing of primary agent"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""30050007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.711669e+07,
							""CONCEPT_NAME"" : ""Insertion of endotracheal ventilation catheter"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""733496000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.048754e+07,
							""CONCEPT_NAME"" : ""Intubation of respiratory tract"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""447996002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4332501,
							""CONCEPT_NAME"" : ""Management of noninvasive mechanical ventilation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""430191008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.720683e+07,
							""CONCEPT_NAME"" : ""Mechanical insufflation exsufflation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""787180006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4232891,
							""CONCEPT_NAME"" : ""Mechanical ventilation response"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""404997003"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Observable Entity""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 765576,
							""CONCEPT_NAME"" : ""Orotracheal intubation using bougie device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""450601000124103"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.450948e+07,
							""CONCEPT_NAME"" : ""Other specified ventilation support"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""E85.8"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""OPCS4"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2108681,
							""CONCEPT_NAME"" : ""Patient receiving care in the intensive care unit (ICU) and receiving mechanical ventilation, 24 hours or less (CRIT)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4168F"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4219858,
							""CONCEPT_NAME"" : ""Problem with patient ventilator"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""397846002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.480856e+07,
							""CONCEPT_NAME"" : ""Provision of mechanical ventilator"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""859311000000101"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2788037,
							""CONCEPT_NAME"" : ""Respiratory Ventilation, 24-96 Consecutive Hours"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A1945Z"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2788038,
							""CONCEPT_NAME"" : ""Respiratory Ventilation, Greater than 96 Consecutive Hours"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A1955Z"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2788036,
							""CONCEPT_NAME"" : ""Respiratory Ventilation, Less than 24 Consecutive Hours"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A1935Z"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4006318,
							""CONCEPT_NAME"" : ""Respiratory assist, manual"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""11140008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4254108,
							""CONCEPT_NAME"" : ""Resuscitation with artificial respiration"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""74596007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.58878e+07,
							""CONCEPT_NAME"" : ""Ventilation assist and management, initiation of pressure or volume preset ventilators for assisted or controlled breathing"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1014859"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.273885e+07,
							""CONCEPT_NAME"" : ""Ventilation assist and management, initiation of pressure or volume preset ventilators for assisted or controlled breathing; first day"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""94656"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.273885e+07,
							""CONCEPT_NAME"" : ""Ventilation assist and management, initiation of pressure or volume preset ventilators for assisted or controlled breathing; subsequent days"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""94657"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4237618,
							""CONCEPT_NAME"" : ""Ventilator care"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""409025002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4259233,
							""CONCEPT_NAME"" : ""Ventilator care assessment"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""410208007"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4254905,
							""CONCEPT_NAME"" : ""Ventilator care education"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""410209004"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4251737,
							""CONCEPT_NAME"" : ""Ventilator care management"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""410210009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4353715,
							""CONCEPT_NAME"" : ""Ventilator finding"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""250870006"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.479114e+07,
							""CONCEPT_NAME"" : ""Ventilatory support"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""231821000000109"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4072633,
							""CONCEPT_NAME"" : ""Weaning from mechanically assisted ventilation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""243174005"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
179,[COVID ID179 V1] tracheostomy during hospitalization,179,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4166281,2106568,4115488,4337047,4168864,4199580,2831237,2836115,2794811,2862930,2870619,2829384,2829386,4065590,2743216,4311023,4195473,2106569,4208093,2106565,2106567,2106562,2106563,45887989)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4166281,2106568,4115488,4337047,4168864,4199580,2831237,2836115,2794811,2862930,2870619,2829384,2829386,4065590,2743216,4311023,4195473,2106569,4208093,2106565,2106567,2106562,2106563,45887989)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (2110486)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (2110486)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,start_date) > start_date then DATEADD(day,1,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 5,
					""ProcedureTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 4,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 4,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""tracheostomy"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4166281,
							""CONCEPT_NAME"" : ""Anterior tracheostomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""274969000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2106568,
							""CONCEPT_NAME"" : ""Construction of tracheoesophageal fistula and subsequent insertion of an alaryngeal speech prosthesis (eg, voice button, Blom-Singer prosthesis)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31611"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4115488,
							""CONCEPT_NAME"" : ""Emergency tracheostomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""287439000"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4337047,
							""CONCEPT_NAME"" : ""Insertion of tracheostomy tube"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""232685002"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4168864,
							""CONCEPT_NAME"" : ""Lateral tracheostomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""274970004"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4199580,
							""CONCEPT_NAME"" : ""Mediastinal tracheostomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""52536006"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2831237,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Bypass @ Trachea @ Open @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0B110F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2836115,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Bypass @ Trachea @ Percutaneous @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0B113F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2794811,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Change @ Trachea @ External @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0B21XF"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2862930,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Revision @ Trachea @ Open @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0BW10F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2870619,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Revision @ Trachea @ Percutaneous @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0BW13F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2829384,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Revision @ Trachea @ Percutaneous Endoscopic @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0BW14F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2829386,
							""CONCEPT_NAME"" : ""Medical and Surgical @ Respiratory System @ Revision @ Trachea @ Via Natural or Artificial Opening @ Tracheostomy Device"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0BW17F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4065590,
							""CONCEPT_NAME"" : ""Permanent tracheostomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""21619009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2743216,
							""CONCEPT_NAME"" : ""Removal of Tracheostomy Device from Trachea, Via Natural or Artificial Opening"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0BP17FZ"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4311023,
							""CONCEPT_NAME"" : ""Revision of stoma of trachea"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""392168001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4195473,
							""CONCEPT_NAME"" : ""Temporary tracheostomy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""43988005"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2106569,
							""CONCEPT_NAME"" : ""Tracheal puncture, percutaneous with transtracheal aspiration and/or injection"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31612"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4208093,
							""CONCEPT_NAME"" : ""Tracheostomy, emergency procedure by transtracheal approach"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""55622001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2106565,
							""CONCEPT_NAME"" : ""Tracheostomy, emergency procedure; cricothyroid membrane"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31605"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2106567,
							""CONCEPT_NAME"" : ""Tracheostomy, fenestration procedure with skin flaps"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31610"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2106562,
							""CONCEPT_NAME"" : ""Tracheostomy, planned (separate procedure)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31600"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2106563,
							""CONCEPT_NAME"" : ""Tracheostomy, planned (separate procedure); younger than 2 years"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31601"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.588799e+07,
							""CONCEPT_NAME"" : ""Transoral approach to skull base, brain stem or upper spinal cord for biopsy, decompression or excision of lesion"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1014232"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2110486,
							""CONCEPT_NAME"" : ""Transoral approach to skull base, brain stem or upper spinal cord for biopsy, decompression or excision of lesion; requiring splitting of tongue and/or mandible (including tracheostomy)"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""61576"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
180,[COVID ID180 V1] ECMO during hospitalization,180,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4338595,2787821,46257586,1531632,1531631,1531630,2787820,44515635,4052536,2002247,44811012)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (46257586,44515635,4052536,2002247)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Procedure Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,start_date) > start_date then DATEADD(day,1,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 7,
					""ProcedureTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 4,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 4,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""Extracorporeal membrane oxygenation (ECMO) procedure"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4338595,
							""CONCEPT_NAME"" : ""Cardiac support using extracorporeal membrane oxygenation circuitry"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""232969009"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2787821,
							""CONCEPT_NAME"" : ""Extracorporeal Hyperbaric Oxygenation, Continuous"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A05221"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.625759e+07,
							""CONCEPT_NAME"" : ""Extracorporeal Membrane Oxygenation or Extracorporeal Life Support Services and Procedures"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1021846"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1531632,
							""CONCEPT_NAME"" : ""Extracorporeal Oxygenation, Membrane, Central"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A1522F"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1531631,
							""CONCEPT_NAME"" : ""Extracorporeal Oxygenation, Membrane, Peripheral Veno-arterial"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A1522G"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1531630,
							""CONCEPT_NAME"" : ""Extracorporeal Oxygenation, Membrane, Peripheral Veno-venous"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A1522H"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2787820,
							""CONCEPT_NAME"" : ""Extracorporeal Supersaturated Oxygenation, Intermittent"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5A0512C"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD10PCS"",
							""CONCEPT_CLASS_ID"" : ""ICD10PCS""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.451564e+07,
							""CONCEPT_NAME"" : ""Extracorporeal membrane oxygenation"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""X58.1"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""OPCS4"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4052536,
							""CONCEPT_NAME"" : ""Extracorporeal membrane oxygenation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""233573008"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2002247,
							""CONCEPT_NAME"" : ""Extracorporeal membrane oxygenation [ECMO]"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""39.65"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD9Proc"",
							""CONCEPT_CLASS_ID"" : ""4-dig billing code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.481101e+07,
							""CONCEPT_NAME"" : ""Fluoroscopy guided percutaneous insertion of cannula for extracorporeal membrane oxygenation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""862791000000106"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
181,[COVID ID181 V1] dialysis during hospitalization,181,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4027133,45889365,4090651,4032243,38003431)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4027133,45889365,4090651,4032243,38003431)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Procedure Occurrence Criteria
select C.person_id, C.procedure_occurrence_id as event_id, C.procedure_date as start_date, DATEADD(d,1,C.procedure_date) as END_DATE,
       C.procedure_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.procedure_date as sort_date
from 
(
  select po.* 
  FROM @cdm_database_schema.PROCEDURE_OCCURRENCE po
JOIN #Codesets codesets on ((po.procedure_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Procedure Occurrence Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Observation Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,start_date) > start_date then DATEADD(day,1,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ProcedureOccurrence"" : {
					""CodesetId"" : 5,
					""ProcedureTypeExclude"" : false
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 5,
					""ObservationTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 5,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 4,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 4,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Dialysis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4027133,
							""CONCEPT_NAME"" : ""Complication of dialysis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""19765000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.588937e+07,
							""CONCEPT_NAME"" : ""Dialysis Services and Procedures"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1012740"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4 Hierarchy""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4090651,
							""CONCEPT_NAME"" : ""Dialysis finding"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""251859005"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4032243,
							""CONCEPT_NAME"" : ""Dialysis procedure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""108241001"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Procedure""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.800343e+07,
							""CONCEPT_NAME"" : ""Hemodialysis - Outpatient or Home - Hemodialysis/Composite or other rate"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""0821"",
							""DOMAIN_ID"" : ""Revenue Code"",
							""VOCABULARY_ID"" : ""Revenue Code"",
							""CONCEPT_CLASS_ID"" : ""Revenue Code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
182,[COVID ID182 V1] Persons with chest pain or angina,182,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (321318,77670)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (321318)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C

WHERE C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;





TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 3,
					""First"" : true,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 3,
			""name"" : ""Chest pain or angina"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 321318,
							""CONCEPT_NAME"" : ""Angina pectoris"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""194828000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 77670,
							""CONCEPT_NAME"" : ""Chest pain"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""29857009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
183,[COVID ID183 V1] Angina during hospitalization,183,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (321318)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (321318)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,end_date) > start_date then DATEADD(day,1,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 3,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 4,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 3,
			""name"" : ""Angina"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 321318,
							""CONCEPT_NAME"" : ""Angina pectoris"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""194828000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
184,[COVID ID184 V1] Persons with hepatic failure,184,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (377604,4029488,4245975,4337543)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4245975,4337543)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;





TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""hepatic failure, necrosis or coma"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 377604,
							""CONCEPT_NAME"" : ""Hepatic coma"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""72836002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4029488,
							""CONCEPT_NAME"" : ""Hepatic encephalopathy"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""13920009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4245975,
							""CONCEPT_NAME"" : ""Hepatic failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""59927004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4337543,
							""CONCEPT_NAME"" : ""Hepatic necrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""87248009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
185,[COVID ID185 V1] Acute pancreatitis events,185,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9203,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9203,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (199074,4340497)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (199074,4340497)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 9))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,7,start_date) > start_date then DATEADD(day,7,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 9,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ANY"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 2,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Inpatient or ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""Acute pancreatitis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 199074,
							""CONCEPT_NAME"" : ""Acute pancreatitis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""197456007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4340497,
							""CONCEPT_NAME"" : ""Infected pancreatic necrosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""235960001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 7
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
186,[COVID ID186 V1] Total cardiovascular disease events,186,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9203,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9203,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4329847)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4329847)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (314666)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (314666)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4048809,321042,442289,4317150,4132309)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4048809,321042,442289,4317150,4132309)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (437894)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (437894)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (372924,375557,443454,441874)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443454)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (316139)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (316139)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (315295)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (315295)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (376713,439847,43530674,43530727,42535425,4148906,432923)

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 10))
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 9))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,7,start_date) > start_date then DATEADD(day,7,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 180, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,180,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 3,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 4,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 5,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 10,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 9,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 2,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Inpatient or ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Acute myocardial Infarction"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4329847,
							""CONCEPT_NAME"" : ""Myocardial infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""22298006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 314666,
							""CONCEPT_NAME"" : ""Old myocardial infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1755008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""Sudden cardiac death"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4048809,
							""CONCEPT_NAME"" : ""Brainstem death"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""230802007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 321042,
							""CONCEPT_NAME"" : ""Cardiac arrest"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""410429000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 442289,
							""CONCEPT_NAME"" : ""Death in less than 24 hours from onset of symptoms"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""53559009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4317150,
							""CONCEPT_NAME"" : ""Sudden cardiac death"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""95281009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4132309,
							""CONCEPT_NAME"" : ""Sudden death"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""26636000"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 437894,
							""CONCEPT_NAME"" : ""Ventricular fibrillation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71908006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Ischemic stroke"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 372924,
							""CONCEPT_NAME"" : ""Cerebral artery occlusion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20059004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 375557,
							""CONCEPT_NAME"" : ""Cerebral embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75543006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 443454,
							""CONCEPT_NAME"" : ""Cerebral infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""432504007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 441874,
							""CONCEPT_NAME"" : ""Cerebral thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71444005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 9,
			""name"" : ""Heart Failure "",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 315295,
							""CONCEPT_NAME"" : ""Congestive rheumatic heart failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""82523003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 316139,
							""CONCEPT_NAME"" : ""Heart failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""84114007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 10,
			""name"" : ""intracranial bleed Hemorrhagic stroke"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 376713,
							""CONCEPT_NAME"" : ""Cerebral hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""274100004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439847,
							""CONCEPT_NAME"" : ""Intracranial hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1386000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353067e+07,
							""CONCEPT_NAME"" : ""Spontaneous cerebellar hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""142851000119103"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353073e+07,
							""CONCEPT_NAME"" : ""Spontaneous cerebral hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""291571000119106"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.253543e+07,
							""CONCEPT_NAME"" : ""Spontaneous hemorrhage of cerebral hemisphere"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""291531000119108"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4148906,
							""CONCEPT_NAME"" : ""Spontaneous subarachnoid hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""270907008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 432923,
							""CONCEPT_NAME"" : ""Subarachnoid hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""21454007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 7
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 180
	},
	""CensorWindow"" : {}
}"
187,[COVID ID187 V1] Gastrointestinal bleeding events,187,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9203,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9203,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4147683,40482685,28779,2002608,198798,4198381,4112183,2108900,2108878,4265600,192671,4027663)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (40482685,28779,2002608,198798,4198381,4112183,2108900,2108878,4265600,192671,4027663)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4138962,4195231,4163865,195584,4222896,4296611,200769,4177387,434400,438795,4204555,24973,23808,4209746,4248429,4101104,443530,197925,4291028)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4138962,4195231,4163865,195584,4222896,4296611,200769,4177387,434400,438795,4204555,24973,23808,4209746,4248429,4101104,443530,197925,4291028)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,7,start_date) > start_date then DATEADD(day,7,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 5,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ANY"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 2,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Inpatient or ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Gastrointestinal hemorrhage GI bleeding"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4138962,
							""CONCEPT_NAME"" : ""Acute duodenal ulcer without hemorrhage AND without perforation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""32490005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4195231,
							""CONCEPT_NAME"" : ""Acute gastric ulcer without hemorrhage AND without perforation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""67964002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4147683,
							""CONCEPT_NAME"" : ""Acute gastrojejunal ulcer without hemorrhage AND without perforation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""30514008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4163865,
							""CONCEPT_NAME"" : ""Acute peptic ulcer without hemorrhage AND without perforation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""45485004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 195584,
							""CONCEPT_NAME"" : ""Acute peptic ulcer without hemorrhage AND without perforation but with obstruction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""58085004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.048269e+07,
							""CONCEPT_NAME"" : ""Angiodysplasia of duodenum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442267002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 28779,
							""CONCEPT_NAME"" : ""Bleeding esophageal varices"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17709002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4222896,
							""CONCEPT_NAME"" : ""Chronic duodenal ulcer without hemorrhage AND without perforation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40214005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4296611,
							""CONCEPT_NAME"" : ""Chronic gastric ulcer without hemorrhage AND without perforation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""76796008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 200769,
							""CONCEPT_NAME"" : ""Chronic gastric ulcer without hemorrhage, without perforation AND without obstruction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1567007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4177387,
							""CONCEPT_NAME"" : ""Chronic gastrojejunal ulcer without hemorrhage AND without perforation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4269005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 434400,
							""CONCEPT_NAME"" : ""Chronic gastrojejunal ulcer without hemorrhage AND without perforation but with obstruction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""56579005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 438795,
							""CONCEPT_NAME"" : ""Chronic gastrojejunal ulcer without hemorrhage, without perforation AND without obstruction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""41626001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4204555,
							""CONCEPT_NAME"" : ""Chronic peptic ulcer without hemorrhage AND without perforation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5492000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 24973,
							""CONCEPT_NAME"" : ""Chronic peptic ulcer without hemorrhage AND without perforation but with obstruction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""12384004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 23808,
							""CONCEPT_NAME"" : ""Chronic peptic ulcer without hemorrhage, without perforation AND without obstruction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""60400003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2002608,
							""CONCEPT_NAME"" : ""Control of hemorrhage and suture of ulcer of stomach or duodenum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""44.4"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""ICD9Proc"",
							""CONCEPT_CLASS_ID"" : ""3-dig nonbill code""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 198798,
							""CONCEPT_NAME"" : ""Dieulafoy's vascular malformation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""109558001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4198381,
							""CONCEPT_NAME"" : ""Ulcer of duodenum"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""51868009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4209746,
							""CONCEPT_NAME"" : ""Duodenal ulcer without hemorrhage AND without perforation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""56776001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4112183,
							""CONCEPT_NAME"" : ""Esophageal varices with bleeding, associated with another disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""195475003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2108900,
							""CONCEPT_NAME"" : ""Esophagogastroduodenoscopy, flexible, transoral; with control of bleeding, any method"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""43255"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 2108878,
							""CONCEPT_NAME"" : ""Esophagoscopy, flexible, transoral; with control of bleeding, any method"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""43227"",
							""DOMAIN_ID"" : ""Procedure"",
							""VOCABULARY_ID"" : ""CPT4"",
							""CONCEPT_CLASS_ID"" : ""CPT4""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4265600,
							""CONCEPT_NAME"" : ""Gastric ulcer"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""397825006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4248429,
							""CONCEPT_NAME"" : ""Gastric ulcer without hemorrhage AND without perforation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""73481001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 192671,
							""CONCEPT_NAME"" : ""Gastrointestinal hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""74474003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4101104,
							""CONCEPT_NAME"" : ""Gastrojejunal ulcer without hemorrhage AND without perforation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2783007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 443530,
							""CONCEPT_NAME"" : ""Hematochezia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""405729008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 197925,
							""CONCEPT_NAME"" : ""Hemorrhage of rectum and anus"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""266464001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4027663,
							""CONCEPT_NAME"" : ""Peptic ulcer"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""13200003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4291028,
							""CONCEPT_NAME"" : ""Peptic ulcer without hemorrhage AND without perforation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""37442009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 7
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
188,[COVID ID188 V1] Cardiovascular-related mortality,188,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4329847)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4329847)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (314666)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (314666)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4048809,321042,442289,4317150,4132309)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4048809,321042,442289,4317150,4132309)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (437894)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (437894)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (316139)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (316139)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (315295)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (315295)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9203,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9203,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (372924,375557,443454,441874)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443454)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (376713,439847,43530674,43530727,42535425,4148906,432923)

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Death Criteria
select C.person_id, C.person_id as event_id, C.death_date as start_date, DATEADD(d,1,C.death_date) as end_date,
       coalesce(C.cause_concept_id,0) as TARGET_CONCEPT_ID, CAST(NULL as bigint) as visit_occurrence_id,
       C.death_date as sort_date
from 
(
  select d.*
  FROM @cdm_database_schema.DEATH d

) C


-- End Death Criteria


  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.target_concept_id, PE.visit_occurrence_id, PE.sort_date FROM (
-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Condition Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Condition Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-30,P.START_DATE) AND A.START_DATE <= DATEADD(day,7,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE
WHERE QE.ordinal = 1
;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;





TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""Death"" : {
					""DeathTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ANY"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""ConditionOccurrence"" : {
						""CodesetId"" : 0,
						""ConditionTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Days"" : 30,
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 7,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			},
			{
				""Criteria"" : {
					""ConditionOccurrence"" : {
						""CodesetId"" : 6,
						""ConditionTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Days"" : 30,
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 7,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			},
			{
				""Criteria"" : {
					""ConditionOccurrence"" : {
						""CodesetId"" : 7,
						""ConditionTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Days"" : 30,
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 7,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			},
			{
				""Criteria"" : {
					""ConditionOccurrence"" : {
						""CodesetId"" : 3,
						""ConditionTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Days"" : 30,
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 7,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			},
			{
				""Criteria"" : {
					""ConditionOccurrence"" : {
						""CorrelatedCriteria"" : {
							""Type"" : ""ALL"",
							""CriteriaList"" : [
								{
									""Criteria"" : {
										""VisitOccurrence"" : {
											""CodesetId"" : 5,
											""VisitTypeExclude"" : false
										}
									},
									""StartWindow"" : {
										""Start"" : {
											""Coeff"" : -1
										},
										""End"" : {
											""Days"" : 0,
											""Coeff"" : 1
										},
										""UseIndexEnd"" : false,
										""UseEventEnd"" : false
									},
									""EndWindow"" : {
										""Start"" : {
											""Days"" : 0,
											""Coeff"" : -1
										},
										""End"" : {
											""Coeff"" : 1
										},
										""UseIndexEnd"" : false,
										""UseEventEnd"" : true
									},
									""RestrictVisit"" : false,
									""IgnoreObservationPeriod"" : false,
									""Occurrence"" : {
										""Type"" : 2,
										""Count"" : 1,
										""IsDistinct"" : false
									}
								}
							],
							""DemographicCriteriaList"" : [],
							""Groups"" : []
						},
						""CodesetId"" : 4,
						""ConditionTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Days"" : 30,
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 7,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Acute myocardial Infarction"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4329847,
							""CONCEPT_NAME"" : ""Myocardial infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""22298006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 314666,
							""CONCEPT_NAME"" : ""Old myocardial infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1755008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Sudden cardiac death"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4048809,
							""CONCEPT_NAME"" : ""Brainstem death"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""230802007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 321042,
							""CONCEPT_NAME"" : ""Cardiac arrest"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""410429000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 442289,
							""CONCEPT_NAME"" : ""Death in less than 24 hours from onset of symptoms"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""53559009"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4317150,
							""CONCEPT_NAME"" : ""Sudden cardiac death"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""95281009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4132309,
							""CONCEPT_NAME"" : ""Sudden death"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""26636000"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 437894,
							""CONCEPT_NAME"" : ""Ventricular fibrillation"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71908006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""Heart Failure "",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 315295,
							""CONCEPT_NAME"" : ""Congestive rheumatic heart failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""82523003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 316139,
							""CONCEPT_NAME"" : ""Heart failure"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""84114007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""Inpatient or ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""Ischemic stroke"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 372924,
							""CONCEPT_NAME"" : ""Cerebral artery occlusion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20059004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 375557,
							""CONCEPT_NAME"" : ""Cerebral embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75543006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 443454,
							""CONCEPT_NAME"" : ""Cerebral infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""432504007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 441874,
							""CONCEPT_NAME"" : ""Cerebral thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71444005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""intracranial bleed Hemorrhagic stroke"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 376713,
							""CONCEPT_NAME"" : ""Cerebral hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""274100004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439847,
							""CONCEPT_NAME"" : ""Intracranial hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1386000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353067e+07,
							""CONCEPT_NAME"" : ""Spontaneous cerebellar hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""142851000119103"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353073e+07,
							""CONCEPT_NAME"" : ""Spontaneous cerebral hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""291571000119106"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.253543e+07,
							""CONCEPT_NAME"" : ""Spontaneous hemorrhage of cerebral hemisphere"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""291531000119108"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4148906,
							""CONCEPT_NAME"" : ""Spontaneous subarachnoid hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""270907008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 432923,
							""CONCEPT_NAME"" : ""Subarachnoid hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""21454007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
189,[COVID ID189 V1] Transient ischemic attack events,189,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9203,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9203,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (373503)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (373503)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,7,start_date) > start_date then DATEADD(day,7,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 4,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ANY"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 2,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Inpatient or ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""Transient ischemic attack (TIA) Transient cerebral Ischemia (TCA)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 373503,
							""CONCEPT_NAME"" : ""Transient cerebral ischemia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""266257000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 7
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
190,[COVID ID190 V1] Stroke (ischemic or hemorrhagic) events,190,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9203,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9203,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (372924,375557,376713,443454,441874,439847,432923,4148906,43530727,42538062)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (376713,443454,439847)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (379778)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (379778)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,1,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,7,start_date) > start_date then DATEADD(day,7,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 180, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,180,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 3,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ANY"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 2,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 1,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Inpatient or ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Stroke (ischemic or hemorrhagic)"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 372924,
							""CONCEPT_NAME"" : ""Cerebral artery occlusion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20059004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 375557,
							""CONCEPT_NAME"" : ""Cerebral embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75543006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 376713,
							""CONCEPT_NAME"" : ""Cerebral hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""274100004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 443454,
							""CONCEPT_NAME"" : ""Cerebral infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""432504007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 441874,
							""CONCEPT_NAME"" : ""Cerebral thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71444005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439847,
							""CONCEPT_NAME"" : ""Intracranial hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1386000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 432923,
							""CONCEPT_NAME"" : ""Subarachnoid hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""21454007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4148906,
							""CONCEPT_NAME"" : ""Spontaneous subarachnoid hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""270907008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353073e+07,
							""CONCEPT_NAME"" : ""Spontaneous cerebral hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""291571000119106"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 379778,
							""CONCEPT_NAME"" : ""Multi-infarct dementia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""56267009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.253806e+07,
							""CONCEPT_NAME"" : ""Spontaneous intracranial hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""738779002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 7
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 180
	},
	""CensorWindow"" : {}
}"
191,[COVID ID191 V1] Ischemic stroke events,191,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (372924,375557,443454,441874)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (443454)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9203,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9203,9201)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,1,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,7,start_date) > start_date then DATEADD(day,7,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 180, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,180,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ANY"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 2,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 1,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Ischemic stroke"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 372924,
							""CONCEPT_NAME"" : ""Cerebral artery occlusion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""20059004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 375557,
							""CONCEPT_NAME"" : ""Cerebral embolism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75543006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 443454,
							""CONCEPT_NAME"" : ""Cerebral infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""432504007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 441874,
							""CONCEPT_NAME"" : ""Cerebral thrombosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""71444005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 2,
			""name"" : ""Inpatient or ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 7
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 180
	},
	""CensorWindow"" : {}
}"
192,[COVID ID192 V1] Hemorrhagic stroke (intracerebral bleeding) events,192,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9203,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9203,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (376713,439847,432923,43530727,4148906,43530674,42535425)

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,7,start_date) > start_date then DATEADD(day,7,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 180, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,180,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 4,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ANY"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 2,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Inpatient or ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""intracranial bleed Hemorrhagic stroke"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 376713,
							""CONCEPT_NAME"" : ""Cerebral hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""274100004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439847,
							""CONCEPT_NAME"" : ""Intracranial hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1386000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 432923,
							""CONCEPT_NAME"" : ""Subarachnoid hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""21454007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353073e+07,
							""CONCEPT_NAME"" : ""Spontaneous cerebral hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""291571000119106"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4148906,
							""CONCEPT_NAME"" : ""Spontaneous subarachnoid hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""270907008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.353067e+07,
							""CONCEPT_NAME"" : ""Spontaneous cerebellar hemorrhage"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""142851000119103"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.253543e+07,
							""CONCEPT_NAME"" : ""Spontaneous hemorrhage of cerebral hemisphere"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""291531000119108"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 7
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 180
	},
	""CensorWindow"" : {}
}"
193,[COVID ID193 V1] Acute myocardial infarction events,193,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9203,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9203,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4329847)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4329847)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (314666)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (314666)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,7,start_date) > start_date then DATEADD(day,7,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 180, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,180,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 3,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ANY"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 2,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Inpatient or ER visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9203,
							""CONCEPT_NAME"" : ""Emergency Room Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ER"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Acute myocardial Infarction"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 4329847,
							""CONCEPT_NAME"" : ""Myocardial infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""22298006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 314666,
							""CONCEPT_NAME"" : ""Old myocardial infarction"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1755008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 7
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 180
	},
	""CensorWindow"" : {}
}"
194,[COVID ID194 V1] Bleeding during hospitalization,194,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (437312)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (437312)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Visit Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.START_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,1,start_date) > start_date then DATEADD(day,1,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 2,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""VisitOccurrence"" : {
						""CodesetId"" : 3,
						""VisitTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : true
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 2,
			""name"" : ""Bleeding"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 437312,
							""CONCEPT_NAME"" : ""Bleeding"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""131148009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 3,
			""name"" : ""Inpatient Visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 1
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
195,[COVID ID195 V1] Incident depression with no prior treatment and no mania/psychoses,195,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (21604490)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (21604490)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (797617,715939,755695,751412,722031,739138)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (797617,715939,755695,751412,722031,739138)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (717607,715259,19080226,743670)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (717607,715259,19080226,743670)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (19032424,710062,713109,19039883,798834,716968,19023846,19037989,738156,778268,19122204,19091830,19110751,721724,19129635,754270,19098514,705755)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (19032424,710062,713109,19039883,798834,716968,19023846,19037989,738156,778268,19122204,19091830,19110751,721724,19129635,754270,19098514,705755)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (781705,19127550,733896,766209,703470)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (781705,19127550,733896,766209,703470)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 12 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (36878783,750982,794147,19007737,725131,714684,36427294,19084693,1398039,19041910,703547,19006186,40234834,19008261,44507700)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (36878783,750982,794147,19007737,725131,714684,36427294,19084693,1398039,19041910,703547,19006186,40234834,19008261,44507700)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 13 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (372608,375239,4182210,4043378,436092,373179,435088)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4182210)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (378726,376095,377788,372610)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (376095,377788,372610)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 14 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (436665,4333677,437249)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (436665,4333677,437249)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 15 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (432590,436073,435783)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (432590,436073,435783)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (434900,375229,4333667,441540,380986)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (434900)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 17 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (440383)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (440383)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (438727,436665,40481798,435520,4224940)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (438727,436665,40481798,435520,4224940)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* , row_number() over (PARTITION BY co.person_id ORDER BY co.condition_start_date, co.condition_occurrence_id) as ordinal
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 17))
) C

WHERE C.ordinal = 1
-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,365,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Drug Exposure Criteria
select C.person_id, C.drug_exposure_id as event_id, C.drug_exposure_start_date as start_date,
       COALESCE(C.drug_exposure_end_date, DATEADD(day, 1, C.drug_exposure_start_date)) as end_date, C.drug_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.drug_exposure_start_date as sort_date
from 
(
  select de.* 
  FROM @cdm_database_schema.DRUG_EXPOSURE de
JOIN #Codesets codesets on ((de.drug_concept_id = codesets.concept_id and codesets.codeset_id = 12))
) C


-- End Drug Exposure Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,-30,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 6
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 13))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 14))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 15))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 3
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),2)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;





TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 17,
					""First"" : true,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 365,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 3,
			""name"" : ""Antipsychotics"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 2.160449e+07,
							""CONCEPT_NAME"" : ""ANTIPSYCHOTICS"",
							""STANDARD_CONCEPT"" : ""C"",
							""STANDARD_CONCEPT_CAPTION"" : ""Classification"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""N05A"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""ATC"",
							""CONCEPT_CLASS_ID"" : ""ATC 3rd""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 4,
			""name"" : ""SSRI"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 797617,
							""CONCEPT_NAME"" : ""Citalopram"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2556"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 715939,
							""CONCEPT_NAME"" : ""Escitalopram"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""321988"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 755695,
							""CONCEPT_NAME"" : ""Fluoxetine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""4493"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 751412,
							""CONCEPT_NAME"" : ""Fluvoxamine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""42355"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 722031,
							""CONCEPT_NAME"" : ""Paroxetine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""32937"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 739138,
							""CONCEPT_NAME"" : ""Sertraline"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""36437"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 5,
			""name"" : ""SNRI"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 717607,
							""CONCEPT_NAME"" : ""Desvenlafaxine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""734064"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 715259,
							""CONCEPT_NAME"" : ""duloxetine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""72625"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.908023e+07,
							""CONCEPT_NAME"" : ""milnacipran"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""588250"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 743670,
							""CONCEPT_NAME"" : ""venlafaxine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""39786"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 6,
			""name"" : ""Tricyclic Anti-depressants"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.903242e+07,
							""CONCEPT_NAME"" : ""amineptin"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""17698"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 710062,
							""CONCEPT_NAME"" : ""Amitriptyline"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""704"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 713109,
							""CONCEPT_NAME"" : ""Amoxapine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""722"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.903988e+07,
							""CONCEPT_NAME"" : ""butriptyline"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""19895"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 798834,
							""CONCEPT_NAME"" : ""Clomipramine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""2597"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 716968,
							""CONCEPT_NAME"" : ""Desipramine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""3247"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.902385e+07,
							""CONCEPT_NAME"" : ""dibenzepin"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""3332"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.903799e+07,
							""CONCEPT_NAME"" : ""Dothiepin"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""3634"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 738156,
							""CONCEPT_NAME"" : ""Doxepin"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""3638"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 778268,
							""CONCEPT_NAME"" : ""Imipramine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5691"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.91222e+07,
							""CONCEPT_NAME"" : ""Iprindole"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5979"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.909183e+07,
							""CONCEPT_NAME"" : ""Lofepramine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""6465"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.911075e+07,
							""CONCEPT_NAME"" : ""MELITRACEN"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""446248"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 721724,
							""CONCEPT_NAME"" : ""Nortriptyline"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""7531"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.912964e+07,
							""CONCEPT_NAME"" : ""Opipramol"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""7674"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 754270,
							""CONCEPT_NAME"" : ""Protriptyline"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8886"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.909851e+07,
							""CONCEPT_NAME"" : ""quinupramine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""35242"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 705755,
							""CONCEPT_NAME"" : ""Trimipramine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10834"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 7,
			""name"" : ""Monoamine oxidase inhibitors (MAOI), non-selective"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 781705,
							""CONCEPT_NAME"" : ""Isocarboxazid"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""6011"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.912755e+07,
							""CONCEPT_NAME"" : ""Nialamide"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""7394"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 733896,
							""CONCEPT_NAME"" : ""Phenelzine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""8123"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 766209,
							""CONCEPT_NAME"" : ""Selegiline"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""9639"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 703470,
							""CONCEPT_NAME"" : ""Tranylcypromine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10734"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 12,
			""name"" : ""Other antidepressants"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.687878e+07,
							""CONCEPT_NAME"" : ""Agomelatine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""OMOP997499"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm Extension"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 750982,
							""CONCEPT_NAME"" : ""Bupropion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""42347"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 794147,
							""CONCEPT_NAME"" : ""Maprotiline"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""6646"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.900774e+07,
							""CONCEPT_NAME"" : ""Mianserin"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""6929"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 725131,
							""CONCEPT_NAME"" : ""Mirtazapine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""15996"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 714684,
							""CONCEPT_NAME"" : ""nefazodone"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""31565"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 3.642729e+07,
							""CONCEPT_NAME"" : ""Oxitriptan"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""D"",
							""INVALID_REASON_CAPTION"" : ""Invalid"",
							""CONCEPT_CODE"" : ""OMOP4757832"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""GRR"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.908469e+07,
							""CONCEPT_NAME"" : ""reboxetine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""60842"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1398039,
							""CONCEPT_NAME"" : ""ST. JOHN'S WORT EXTRACT"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""258326"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.904191e+07,
							""CONCEPT_NAME"" : ""tianeptine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""38252"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 703547,
							""CONCEPT_NAME"" : ""Trazodone"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10737"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.900619e+07,
							""CONCEPT_NAME"" : ""Tryptophan"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""10898"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.023483e+07,
							""CONCEPT_NAME"" : ""vilazodone"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1086769"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 1.900826e+07,
							""CONCEPT_NAME"" : ""Viloxazine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""11196"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.45077e+07,
							""CONCEPT_NAME"" : ""vortioxetine"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""1455099"",
							""DOMAIN_ID"" : ""Drug"",
							""VOCABULARY_ID"" : ""RxNorm"",
							""CONCEPT_CLASS_ID"" : ""Ingredient""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 13,
			""name"" : ""Dementia"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 372608,
							""CONCEPT_NAME"" : ""Amnestic disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""3298001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 375239,
							""CONCEPT_NAME"" : ""Degenerative brain disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""52522001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4182210,
							""CONCEPT_NAME"" : ""Dementia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""52448006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 378726,
							""CONCEPT_NAME"" : ""Dementia associated with alcoholism"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""281004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 376095,
							""CONCEPT_NAME"" : ""Drug-induced dementia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191493005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4043378,
							""CONCEPT_NAME"" : ""Frontotemporal dementia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""230270009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 377788,
							""CONCEPT_NAME"" : ""General paresis - neurosyphilis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""51928006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 436092,
							""CONCEPT_NAME"" : ""Pick's disease"",
							""STANDARD_CONCEPT"" : ""N"",
							""STANDARD_CONCEPT_CAPTION"" : ""Non-Standard"",
							""INVALID_REASON"" : ""U"",
							""INVALID_REASON_CAPTION"" : ""Invalid"",
							""CONCEPT_CODE"" : ""13092008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 372610,
							""CONCEPT_NAME"" : ""Postconcussion syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""40425004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 373179,
							""CONCEPT_NAME"" : ""Senile degeneration of brain"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""45864009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435088,
							""CONCEPT_NAME"" : ""Senility"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""271873000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 14,
			""name"" : ""Mania"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 436665,
							""CONCEPT_NAME"" : ""Bipolar disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""13746004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4333677,
							""CONCEPT_NAME"" : ""Mania"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""231494001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 437249,
							""CONCEPT_NAME"" : ""Recurrent manic episodes"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191590005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 15,
			""name"" : ""Psychosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 432590,
							""CONCEPT_NAME"" : ""Delusional disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""48500005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 434900,
							""CONCEPT_NAME"" : ""Drug-induced psychosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191483003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 375229,
							""CONCEPT_NAME"" : ""Organic delusional disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5510009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4333667,
							""CONCEPT_NAME"" : ""Presbyophrenic psychosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""231438001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 436073,
							""CONCEPT_NAME"" : ""Psychotic disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""69322001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 441540,
							""CONCEPT_NAME"" : ""Reactive confusion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191678001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435783,
							""CONCEPT_NAME"" : ""Schizophrenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""58214004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 380986,
							""CONCEPT_NAME"" : ""Senile dementia with delusion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""371024007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 17,
			""name"" : ""Depressive disorder"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 438727,
							""CONCEPT_NAME"" : ""Atypical depressive disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191659001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 436665,
							""CONCEPT_NAME"" : ""Bipolar disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""13746004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4.04818e+07,
							""CONCEPT_NAME"" : ""Chronic depressive personality disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""442057004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440383,
							""CONCEPT_NAME"" : ""Depressive disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""35489007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435520,
							""CONCEPT_NAME"" : ""Reactive depressive psychosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191676002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4224940,
							""CONCEPT_NAME"" : ""Schizoaffective disorder, depressive type"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""84760002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [
		{
			""name"" : ""No treatment more than 30 days prior"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""DrugExposure"" : {
								""CodesetId"" : 3,
								""DrugTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""DrugExposure"" : {
								""CodesetId"" : 4,
								""DrugTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""DrugExposure"" : {
								""CodesetId"" : 5,
								""DrugTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""DrugExposure"" : {
								""CodesetId"" : 6,
								""DrugTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""DrugExposure"" : {
								""CodesetId"" : 7,
								""DrugTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""DrugExposure"" : {
								""CodesetId"" : 12,
								""DrugTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 30,
								""Coeff"" : -1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		},
		{
			""name"" : ""No prior psychoses/mania"",
			""expression"" : {
				""Type"" : ""ALL"",
				""CriteriaList"" : [
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 13,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 14,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					},
					{
						""Criteria"" : {
							""ConditionOccurrence"" : {
								""CodesetId"" : 15,
								""ConditionTypeExclude"" : false
							}
						},
						""StartWindow"" : {
							""Start"" : {
								""Coeff"" : -1
							},
							""End"" : {
								""Days"" : 0,
								""Coeff"" : 1
							},
							""UseIndexEnd"" : false,
							""UseEventEnd"" : false
						},
						""RestrictVisit"" : false,
						""IgnoreObservationPeriod"" : false,
						""Occurrence"" : {
							""Type"" : 0,
							""Count"" : 0,
							""IsDistinct"" : false
						}
					}
				],
				""DemographicCriteriaList"" : [],
				""Groups"" : []
			}
		}
	],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
196,[COVID ID196 V1] Hospitalization for psychosis,196,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (432590,436073,435783,433031,434911,439256,439246,439262,437532,439259)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (432590,436073,435783,433031,434911,439256,439262,437532,439259)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (434900,375229,4333667,441540,380986)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (434900)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date,
       C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.visit_start_date as sort_date
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Visit Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C

WHERE C.condition_type_concept_id  in (38000183,38000199,44786627,38000184,38000200,38000215,38000230,45756835,45756843)
-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id  AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.START_DATE) AND A.START_DATE >= DATEADD(day,0,P.END_DATE) AND A.START_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,0,end_date) > start_date then DATEADD(day,0,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""VisitOccurrence"" : {
					""CodesetId"" : 0,
					""VisitTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""AdditionalCriteria"" : {
		""Type"" : ""ALL"",
		""CriteriaList"" : [
			{
				""Criteria"" : {
					""ConditionOccurrence"" : {
						""CodesetId"" : 1,
						""ConditionType"" : [
							{
								""CONCEPT_ID"" : 3.800018e+07,
								""CONCEPT_NAME"" : ""Inpatient detail - primary"",
								""STANDARD_CONCEPT"" : null,
								""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
								""INVALID_REASON"" : null,
								""INVALID_REASON_CAPTION"" : ""Unknown"",
								""CONCEPT_CODE"" : ""OMOP4822059"",
								""DOMAIN_ID"" : ""Type Concept"",
								""VOCABULARY_ID"" : ""Condition Type"",
								""CONCEPT_CLASS_ID"" : null
							},
							{
								""CONCEPT_ID"" : 3.80002e+07,
								""CONCEPT_NAME"" : ""Inpatient header - primary"",
								""STANDARD_CONCEPT"" : null,
								""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
								""INVALID_REASON"" : null,
								""INVALID_REASON_CAPTION"" : ""Unknown"",
								""CONCEPT_CODE"" : ""OMOP4822075"",
								""DOMAIN_ID"" : ""Type Concept"",
								""VOCABULARY_ID"" : ""Condition Type"",
								""CONCEPT_CLASS_ID"" : null
							},
							{
								""CONCEPT_ID"" : 4.478663e+07,
								""CONCEPT_NAME"" : ""Primary Condition"",
								""STANDARD_CONCEPT"" : null,
								""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
								""INVALID_REASON"" : null,
								""INVALID_REASON_CAPTION"" : ""Unknown"",
								""CONCEPT_CODE"" : ""OMOP4822127"",
								""DOMAIN_ID"" : ""Type Concept"",
								""VOCABULARY_ID"" : ""Condition Type"",
								""CONCEPT_CLASS_ID"" : null
							},
							{
								""CONCEPT_ID"" : 3.800018e+07,
								""CONCEPT_NAME"" : ""Inpatient detail - 1st position"",
								""STANDARD_CONCEPT"" : null,
								""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
								""INVALID_REASON"" : null,
								""INVALID_REASON_CAPTION"" : ""Unknown"",
								""CONCEPT_CODE"" : ""OMOP4822060"",
								""DOMAIN_ID"" : ""Type Concept"",
								""VOCABULARY_ID"" : ""Condition Type"",
								""CONCEPT_CLASS_ID"" : null
							},
							{
								""CONCEPT_ID"" : 3.80002e+07,
								""CONCEPT_NAME"" : ""Inpatient header - 1st position"",
								""STANDARD_CONCEPT"" : null,
								""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
								""INVALID_REASON"" : null,
								""INVALID_REASON_CAPTION"" : ""Unknown"",
								""CONCEPT_CODE"" : ""OMOP4822076"",
								""DOMAIN_ID"" : ""Type Concept"",
								""VOCABULARY_ID"" : ""Condition Type"",
								""CONCEPT_CLASS_ID"" : null
							},
							{
								""CONCEPT_ID"" : 3.800022e+07,
								""CONCEPT_NAME"" : ""Outpatient detail - 1st position"",
								""STANDARD_CONCEPT"" : null,
								""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
								""INVALID_REASON"" : null,
								""INVALID_REASON_CAPTION"" : ""Unknown"",
								""CONCEPT_CODE"" : ""OMOP4822091"",
								""DOMAIN_ID"" : ""Type Concept"",
								""VOCABULARY_ID"" : ""Condition Type"",
								""CONCEPT_CLASS_ID"" : null
							},
							{
								""CONCEPT_ID"" : 3.800023e+07,
								""CONCEPT_NAME"" : ""Outpatient header - 1st position"",
								""STANDARD_CONCEPT"" : null,
								""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
								""INVALID_REASON"" : null,
								""INVALID_REASON_CAPTION"" : ""Unknown"",
								""CONCEPT_CODE"" : ""OMOP4822106"",
								""DOMAIN_ID"" : ""Type Concept"",
								""VOCABULARY_ID"" : ""Condition Type"",
								""CONCEPT_CLASS_ID"" : null
							},
							{
								""CONCEPT_ID"" : 4.575684e+07,
								""CONCEPT_NAME"" : ""Carrier claim header - 1st position"",
								""STANDARD_CONCEPT"" : null,
								""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
								""INVALID_REASON"" : null,
								""INVALID_REASON_CAPTION"" : ""Unknown"",
								""CONCEPT_CODE"" : ""OMOP4822136"",
								""DOMAIN_ID"" : ""Type Concept"",
								""VOCABULARY_ID"" : ""Condition Type"",
								""CONCEPT_CLASS_ID"" : null
							},
							{
								""CONCEPT_ID"" : 4.575684e+07,
								""CONCEPT_NAME"" : ""Carrier claim detail - 1st position"",
								""STANDARD_CONCEPT"" : null,
								""STANDARD_CONCEPT_CAPTION"" : ""Unknown"",
								""INVALID_REASON"" : null,
								""INVALID_REASON_CAPTION"" : ""Unknown"",
								""CONCEPT_CODE"" : ""OMOP4822144"",
								""DOMAIN_ID"" : ""Type Concept"",
								""VOCABULARY_ID"" : ""Condition Type"",
								""CONCEPT_CLASS_ID"" : null
							}
						],
						""ConditionTypeExclude"" : false
					}
				},
				""StartWindow"" : {
					""Start"" : {
						""Coeff"" : -1
					},
					""End"" : {
						""Days"" : 0,
						""Coeff"" : 1
					},
					""UseIndexEnd"" : false,
					""UseEventEnd"" : false
				},
				""EndWindow"" : {
					""Start"" : {
						""Days"" : 0,
						""Coeff"" : -1
					},
					""End"" : {
						""Coeff"" : 1
					},
					""UseIndexEnd"" : true,
					""UseEventEnd"" : false
				},
				""RestrictVisit"" : false,
				""IgnoreObservationPeriod"" : false,
				""Occurrence"" : {
					""Type"" : 2,
					""Count"" : 1,
					""IsDistinct"" : false
				}
			}
		],
		""DemographicCriteriaList"" : [],
		""Groups"" : []
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Inpatient visit"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 262,
							""CONCEPT_NAME"" : ""Emergency Room and Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""ERIP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 9201,
							""CONCEPT_NAME"" : ""Inpatient Visit"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""IP"",
							""DOMAIN_ID"" : ""Visit"",
							""VOCABULARY_ID"" : ""Visit"",
							""CONCEPT_CLASS_ID"" : ""Visit""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		},
		{
			""id"" : 1,
			""name"" : ""Psychosis"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 432590,
							""CONCEPT_NAME"" : ""Delusional disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""48500005"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 434900,
							""CONCEPT_NAME"" : ""Drug-induced psychosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191483003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 375229,
							""CONCEPT_NAME"" : ""Organic delusional disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""5510009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4333667,
							""CONCEPT_NAME"" : ""Presbyophrenic psychosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""231438001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 436073,
							""CONCEPT_NAME"" : ""Psychotic disorder"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""69322001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 441540,
							""CONCEPT_NAME"" : ""Reactive confusion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191678001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 435783,
							""CONCEPT_NAME"" : ""Schizophrenia"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""58214004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 380986,
							""CONCEPT_NAME"" : ""Senile dementia with delusion"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""371024007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : true,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 433031,
							""CONCEPT_NAME"" : ""Hallucinations"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""7011001"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 434911,
							""CONCEPT_NAME"" : ""Recurrent major depressive episodes, severe, with psychosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191613003"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439256,
							""CONCEPT_NAME"" : ""Bipolar affective disorder, currently manic, severe, with psychosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191623007"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439246,
							""CONCEPT_NAME"" : ""Mixed bipolar affective disorder, severe, with psychosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191641004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : false,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439262,
							""CONCEPT_NAME"" : ""Single manic episode, severe, with psychosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191586008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 437532,
							""CONCEPT_NAME"" : ""Recurrent manic episodes, severe, with psychosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191595000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 439259,
							""CONCEPT_NAME"" : ""Single major depressive episode, severe, with psychosis"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""191604000"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""All""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""EndDate"",
			""Offset"" : 0
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
197,[COVID ID197 V1] Suicide and suicidal ideation,197,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (439235,4181216,444362,4273391,440925,4303690)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (439235,4181216,444362,4273391,440925,4303690)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

UNION ALL
-- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE,
       C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.observation_date as sort_date
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Observation Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P
WHERE P.ordinal = 1
-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;



-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- By default, cohort exit at the event's op end date
select event_id, person_id, op_end_date as end_date from #included_events
),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;





TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			},
			{
				""Observation"" : {
					""CodesetId"" : 0,
					""ObservationTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""First""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Suicide and suicidal ideation"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 439235,
							""CONCEPT_NAME"" : ""Self inflicted injury"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""276853009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4181216,
							""CONCEPT_NAME"" : ""Self-administered poisoning"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""363293009"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 444362,
							""CONCEPT_NAME"" : ""Suicidal deliberate poisoning"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""86849004"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4273391,
							""CONCEPT_NAME"" : ""Suicidal thoughts"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""6471006"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 440925,
							""CONCEPT_NAME"" : ""Suicide"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""44301001"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 4303690,
							""CONCEPT_NAME"" : ""Intentionally harming self"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""418420002"",
							""DOMAIN_ID"" : ""Observation"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Event""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""First""
	},
	""InclusionRules"" : [],
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 0
	},
	""CensorWindow"" : {}
}"
198,[COVID ID198 V1] Multi-system inflammatory syndrome (Kawasaki disease or toxic shock syndrome),198,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (314381,201214)
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (314381,201214)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date,
         row_number() OVER (PARTITION BY E.person_id ORDER BY E.sort_date ASC) ordinal,
         OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date,
       C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id,
       C.condition_start_date as sort_date
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
) QE

;

--- Inclusion Rule Inserts

create table #inclusion_events (inclusion_rule_id bigint,
	person_id bigint,
	event_id bigint
);

with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results

;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,3,start_date) > start_date then DATEADD(day,3,start_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 30, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,30,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
	""cdmVersionRange"" : "">=5.0.0"",
	""PrimaryCriteria"" : {
		""CriteriaList"" : [
			{
				""ConditionOccurrence"" : {
					""CodesetId"" : 0,
					""ConditionTypeExclude"" : false
				}
			}
		],
		""ObservationWindow"" : {
			""PriorDays"" : 0,
			""PostDays"" : 0
		},
		""PrimaryCriteriaLimit"" : {
			""Type"" : ""All""
		}
	},
	""ConceptSets"" : [
		{
			""id"" : 0,
			""name"" : ""Toxic shock syndrome or kawasaki disease"",
			""expression"" : {
				""items"" : [
					{
						""concept"" : {
							""CONCEPT_ID"" : 314381,
							""CONCEPT_NAME"" : ""Acute febrile mucocutaneous lymph node syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""75053002"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					},
					{
						""concept"" : {
							""CONCEPT_ID"" : 201214,
							""CONCEPT_NAME"" : ""Toxic shock syndrome"",
							""STANDARD_CONCEPT"" : ""S"",
							""STANDARD_CONCEPT_CAPTION"" : ""Standard"",
							""INVALID_REASON"" : ""V"",
							""INVALID_REASON_CAPTION"" : ""Valid"",
							""CONCEPT_CODE"" : ""18504008"",
							""DOMAIN_ID"" : ""Condition"",
							""VOCABULARY_ID"" : ""SNOMED"",
							""CONCEPT_CLASS_ID"" : ""Clinical Finding""
						},
						""isExcluded"" : false,
						""includeDescendants"" : true,
						""includeMapped"" : false
					}
				]
			}
		}
	],
	""QualifiedLimit"" : {
		""Type"" : ""First""
	},
	""ExpressionLimit"" : {
		""Type"" : ""All""
	},
	""InclusionRules"" : [],
	""EndStrategy"" : {
		""DateOffset"" : {
			""DateField"" : ""StartDate"",
			""Offset"" : 3
		}
	},
	""CensoringCriteria"" : [],
	""CollapseSettings"" : {
		""CollapseType"" : ""ERA"",
		""EraPad"" : 30
	},
	""CensorWindow"" : {}
}"
