cohort_full_name,cohort_id,cohort_name,sql,json
COVID ID1 v1,1,COVID-19 narrow - with prior observation,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37311061)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37311061)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37310282)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37310282)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (756055)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (756055)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37310282,37310281)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37310282,37310281)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (710158,710155,710156,710159,710160,45756093,42501115,586414,45600471,586415)and invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45542411,710157)and invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date, row_number() OVER (PARTITION BY E.person_id ORDER BY E.start_date ASC) ordinal, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C

WHERE C.visit_start_date > DATEFROMPARTS(2019, 12, 01)
-- End Visit Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,4181412,45879438,45884084)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,45884084,4181412,45879438)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Demographic Criteria
SELECT 0 as index_id, e.person_id, e.event_id
FROM #qualified_events E
JOIN @cdm_database_schema.PERSON P ON P.PERSON_ID = E.PERSON_ID
WHERE YEAR(E.start_date) - P.year_of_birth >= 18
GROUP BY e.person_id, e.event_id
-- End Demographic Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
INNER JOIN
(
  -- Begin Observation Period Criteria
select C.person_id, C.observation_period_id as event_id, C.observation_period_start_date as start_date, C.observation_period_end_date as end_date, C.period_type_concept_id as TARGET_CONCEPT_ID, CAST(NULL as bigint) as visit_occurrence_id
from 
(
        select op.*, row_number() over (PARTITION BY op.person_id ORDER BY op.observation_period_start_date) as ordinal
        FROM @cdm_database_schema.OBSERVATION_PERIOD op
) C


-- End Observation Period Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE and A.START_DATE <= DATEADD(day,-365,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.END_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.target_concept_id, PE.visit_occurrence_id FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,45884084,4181412,45879438)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,45884084,4181412,45879438)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-180,P.START_DATE) and A.START_DATE <= DATEADD(day,-1,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),3)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,0,end_date) > start_date then DATEADD(day,0,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS era_end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defiend as the event that satisfies the most inclulsion rules.
-- ties are solved by choosign the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule' 
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule' 
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
  ""ConceptSets"": [
    {
      ""id"": 0,
      ""name"": ""COVID-19 (including asymptomatic)"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""840539006"",
              ""CONCEPT_ID"": 37311061,
              ""CONCEPT_NAME"": ""Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 1,
      ""name"": ""COVID-19 specific testing (pre-coordinated Measurements) - Positive"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""1240581000000104"",
              ""CONCEPT_ID"": 37310282,
              ""CONCEPT_NAME"": ""2019 novel coronavirus detected"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 2,
      ""name"": ""COVID-19 specific testing (pre-coordinated Measurements excluded)"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""1240581000000104"",
              ""CONCEPT_ID"": 37310282,
              ""CONCEPT_NAME"": ""2019 novel coronavirus detected"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""1240591000000102"",
              ""CONCEPT_ID"": 37310281,
              ""CONCEPT_NAME"": ""2019 novel coronavirus not detected"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Procedure"",
              ""CONCEPT_CODE"": ""OMOP4873969"",
              ""CONCEPT_ID"": 756055,
              ""CONCEPT_NAME"": ""Measurement of severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""OMOP Extension"",
              ""INVALID_REASON"": ""V""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 3,
      ""name"": ""COVID-19 source codes"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100"",
              ""CONCEPT_ID"": 710158,
              ""CONCEPT_NAME"": ""COVID-19 (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100x003"",
              ""CONCEPT_ID"": 710155,
              ""CONCEPT_NAME"": ""COVID-19 pneumonia (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100x001"",
              ""CONCEPT_ID"": 710156,
              ""CONCEPT_NAME"": ""COVID-19 pneumonia (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100x002"",
              ""CONCEPT_ID"": 710159,
              ""CONCEPT_NAME"": ""Confirmed COVID-19, excluding pneumonia (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""6-char billing code"",
              ""CONCEPT_CODE"": ""Z20.828"",
              ""CONCEPT_ID"": 45542411,
              ""CONCEPT_NAME"": ""Contact with and (suspected) exposure to other viral communicable diseases"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
              ""VOCABULARY_ID"": ""ICD10CM""
            },
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.1"",
              ""CONCEPT_ID"": 710160,
              ""CONCEPT_NAME"": ""Emergency use of U07.1 | Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.1"",
              ""CONCEPT_ID"": 45756093,
              ""CONCEPT_NAME"": ""Emergency use of U07.1"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
              ""VOCABULARY_ID"": ""ICD10""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""KCD7 code"",
              ""CONCEPT_CODE"": ""U07.1"",
              ""CONCEPT_ID"": 42501115,
              ""CONCEPT_NAME"": ""Emergency use of U07.1 | Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""KCD7""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""KCD7 code"",
              ""CONCEPT_CODE"": ""U18.1"",
              ""CONCEPT_ID"": 586414,
              ""CONCEPT_NAME"": ""Novel coronavirus infection"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""KCD7""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""5-char billing code"",
              ""CONCEPT_CODE"": ""B97.29"",
              ""CONCEPT_ID"": 45600471,
              ""CONCEPT_NAME"": ""Other coronavirus as the cause of diseases classified elsewhere"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
              ""VOCABULARY_ID"": ""ICD10CM""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""KCD7 code"",
              ""CONCEPT_CODE"": ""U18"",
              ""CONCEPT_ID"": 586415,
              ""CONCEPT_NAME"": ""Provisional assignment of new diseases or emergency use"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""KCD7""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""Z03.800x001"",
              ""CONCEPT_ID"": 710157,
              ""CONCEPT_NAME"": ""Suspected case of COVID-19 (machine translation)"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            },
            ""isExcluded"": true
          }
        ]
      }
    },
    {
      ""id"": 4,
      ""name"": ""[OHDSI Covid19 v1] Inpatient Visit"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Visit"",
              ""CONCEPT_CODE"": ""ERIP"",
              ""CONCEPT_ID"": 262,
              ""CONCEPT_NAME"": ""Emergency Room and Inpatient Visit"",
              ""DOMAIN_ID"": ""Visit"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""Visit""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Visit"",
              ""CONCEPT_CODE"": ""IP"",
              ""CONCEPT_ID"": 9201,
              ""CONCEPT_NAME"": ""Inpatient Visit"",
              ""DOMAIN_ID"": ""Visit"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""Visit""
            },
            ""includeDescendants"": true
          }
        ]
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""VisitOccurrence"": {
          ""CodesetId"": 4,
          ""OccurrenceStartDate"": {
            ""Value"": ""2019-12-01"",
            ""Op"": ""gt""
          }
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": [0],
      ""PostDays"": [0]
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": [""All""]
    }
  },
  ""AdditionalCriteria"": {
    ""Type"": [""ANY""],
    ""CriteriaList"": [
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {
            ""CodesetId"": 0
          },
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {
            ""ConditionSourceConcept"": 3
          },
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""CodesetId"": 1,
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""CodesetId"": 2,
            ""ValueAsConcept"": [
              {
                ""CONCEPT_CODE"": ""260373001"",
                ""CONCEPT_ID"": 4126681,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA11882-0"",
                ""CONCEPT_ID"": 45877985,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""10828004"",
                ""CONCEPT_ID"": 9191,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""52101004"",
                ""CONCEPT_ID"": 4181412,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA9633-4"",
                ""CONCEPT_ID"": 45879438,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""LA6576-8"",
                ""CONCEPT_ID"": 45884084,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              }
            ]
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""CodesetId"": 2,
            ""ValueAsConcept"": [
              {
                ""CONCEPT_CODE"": ""260373001"",
                ""CONCEPT_ID"": 4126681,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA11882-0"",
                ""CONCEPT_ID"": 45877985,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""10828004"",
                ""CONCEPT_ID"": 9191,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA6576-8"",
                ""CONCEPT_ID"": 45884084,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""52101004"",
                ""CONCEPT_ID"": 4181412,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA9633-4"",
                ""CONCEPT_ID"": 45879438,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              }
            ]
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {},
            ""ObservationSourceConcept"": 3
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      }
    ],
    ""DemographicCriteriaList"": [],
    ""Groups"": []
  },
  ""QualifiedLimit"": {
    ""Type"": [""All""]
  },
  ""ExpressionLimit"": {
    ""Type"": [""First""]
  },
  ""InclusionRules"": [
    {
      ""name"": ""age >=18"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [],
        ""DemographicCriteriaList"": [
          {
            ""Age"": {
              ""Value"": 18,
              ""Op"": ""gte""
            }
          }
        ],
        ""Groups"": []
      }
    },
    {
      ""name"": ""has >=365d of prior observation"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ObservationPeriod"": {}
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 365,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""EndWindow"": {
              ""Start"": {
                ""Days"": 0,
                ""Coeff"": -1
              },
              ""End"": {
                ""Coeff"": 1
              },
              ""UseIndexEnd"": true,
              ""UseEventEnd"": true
            },
            ""Occurrence"": {
              ""Type"": 2,
              ""Count"": 1
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""does not have hospitalization for COVID19 in the 6 months preceding admission"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""VisitOccurrence"": {
                ""CorrelatedCriteria"": {
                  ""Type"": ""ANY"",
                  ""CriteriaList"": [
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {
                          ""CodesetId"": 0
                        },
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {
                          ""ConditionSourceConcept"": 3
                        },
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""ObservationSourceConcept"": 3,
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""CodesetId"": 1,
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""CodesetId"": 2,
                          ""ValueAsConcept"": [
                            {
                              ""CONCEPT_CODE"": ""260373001"",
                              ""CONCEPT_ID"": 4126681,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA11882-0"",
                              ""CONCEPT_ID"": 45877985,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""10828004"",
                              ""CONCEPT_ID"": 9191,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA6576-8"",
                              ""CONCEPT_ID"": 45884084,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""52101004"",
                              ""CONCEPT_ID"": 4181412,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA9633-4"",
                              ""CONCEPT_ID"": 45879438,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            }
                          ]
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""CodesetId"": 2,
                          ""ValueAsConcept"": [
                            {
                              ""CONCEPT_CODE"": ""260373001"",
                              ""CONCEPT_ID"": 4126681,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA11882-0"",
                              ""CONCEPT_ID"": 45877985,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""10828004"",
                              ""CONCEPT_ID"": 9191,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA6576-8"",
                              ""CONCEPT_ID"": 45884084,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""52101004"",
                              ""CONCEPT_ID"": 4181412,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA9633-4"",
                              ""CONCEPT_ID"": 45879438,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            }
                          ]
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    }
                  ],
                  ""DemographicCriteriaList"": [],
                  ""Groups"": []
                },
                ""CodesetId"": 4
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Days"": 180,
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    }
  ],
  ""EndStrategy"": {
    ""DateOffset"": {
      ""DateField"": [""EndDate""],
      ""Offset"": [0]
    }
  },
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": [""ERA""],
    ""EraPad"": [0]
  },
  ""CensorWindow"": {}
}
"
COVID ID2 v1,2,COVID-19 narrow - no prior observation required,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37311061)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37311061)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37310282)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37310282)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (756055)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (756055)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37310282,37310281)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37310282,37310281)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (710158,710155,710156,710159,710160,45756093,42501115,586414,45600471,586415)and invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45542411,710157)and invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date, row_number() OVER (PARTITION BY E.person_id ORDER BY E.start_date ASC) ordinal, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C

WHERE C.visit_start_date > DATEFROMPARTS(2019, 12, 01)
-- End Visit Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,4181412,45879438,45884084)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,45884084,4181412,45879438)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Demographic Criteria
SELECT 0 as index_id, e.person_id, e.event_id
FROM #qualified_events E
JOIN @cdm_database_schema.PERSON P ON P.PERSON_ID = E.PERSON_ID
WHERE YEAR(E.start_date) - P.year_of_birth >= 18
GROUP BY e.person_id, e.event_id
-- End Demographic Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.target_concept_id, PE.visit_occurrence_id FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,45884084,4181412,45879438)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,45884084,4181412,45879438)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-180,P.START_DATE) and A.START_DATE <= DATEADD(day,-1,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),2)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,0,end_date) > start_date then DATEADD(day,0,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS era_end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defiend as the event that satisfies the most inclulsion rules.
-- ties are solved by choosign the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule' 
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule' 
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
  ""ConceptSets"": [
    {
      ""id"": 0,
      ""name"": ""COVID-19 (including asymptomatic)"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_ID"": 37311061,
              ""CONCEPT_NAME"": ""Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""CONCEPT_CODE"": ""840539006"",
              ""DOMAIN_ID"": ""Condition"",
              ""VOCABULARY_ID"": ""SNOMED"",
              ""CONCEPT_CLASS_ID"": ""Clinical Finding""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 1,
      ""name"": ""COVID-19 specific testing (pre-coordinated Measurements) - Positive"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_ID"": 37310282,
              ""CONCEPT_NAME"": ""2019 novel coronavirus detected"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""CONCEPT_CODE"": ""1240581000000104"",
              ""DOMAIN_ID"": ""Condition"",
              ""VOCABULARY_ID"": ""SNOMED"",
              ""CONCEPT_CLASS_ID"": ""Clinical Finding""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 2,
      ""name"": ""COVID-19 specific testing (pre-coordinated Measurements excluded)"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_ID"": 37310282,
              ""CONCEPT_NAME"": ""2019 novel coronavirus detected"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""CONCEPT_CODE"": ""1240581000000104"",
              ""DOMAIN_ID"": ""Condition"",
              ""VOCABULARY_ID"": ""SNOMED"",
              ""CONCEPT_CLASS_ID"": ""Clinical Finding""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_ID"": 37310281,
              ""CONCEPT_NAME"": ""2019 novel coronavirus not detected"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""CONCEPT_CODE"": ""1240591000000102"",
              ""DOMAIN_ID"": ""Condition"",
              ""VOCABULARY_ID"": ""SNOMED"",
              ""CONCEPT_CLASS_ID"": ""Clinical Finding""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_ID"": 756055,
              ""CONCEPT_NAME"": ""Measurement of severe acute respiratory syndrome coronavirus 2"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""CONCEPT_CODE"": ""OMOP4873969"",
              ""DOMAIN_ID"": ""Measurement"",
              ""VOCABULARY_ID"": ""OMOP Extension"",
              ""CONCEPT_CLASS_ID"": ""Procedure"",
              ""INVALID_REASON"": ""V""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 3,
      ""name"": ""COVID-19 source codes"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100"",
              ""CONCEPT_ID"": 710158,
              ""CONCEPT_NAME"": ""COVID-19 (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100x003"",
              ""CONCEPT_ID"": 710155,
              ""CONCEPT_NAME"": ""COVID-19 pneumonia (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100x001"",
              ""CONCEPT_ID"": 710156,
              ""CONCEPT_NAME"": ""COVID-19 pneumonia (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100x002"",
              ""CONCEPT_ID"": 710159,
              ""CONCEPT_NAME"": ""Confirmed COVID-19, excluding pneumonia (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""6-char billing code"",
              ""CONCEPT_CODE"": ""Z20.828"",
              ""CONCEPT_ID"": 45542411,
              ""CONCEPT_NAME"": ""Contact with and (suspected) exposure to other viral communicable diseases"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
              ""VOCABULARY_ID"": ""ICD10CM""
            },
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.1"",
              ""CONCEPT_ID"": 710160,
              ""CONCEPT_NAME"": ""Emergency use of U07.1 | Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.1"",
              ""CONCEPT_ID"": 45756093,
              ""CONCEPT_NAME"": ""Emergency use of U07.1"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
              ""VOCABULARY_ID"": ""ICD10""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""KCD7 code"",
              ""CONCEPT_CODE"": ""U07.1"",
              ""CONCEPT_ID"": 42501115,
              ""CONCEPT_NAME"": ""Emergency use of U07.1 | Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""KCD7""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""KCD7 code"",
              ""CONCEPT_CODE"": ""U18.1"",
              ""CONCEPT_ID"": 586414,
              ""CONCEPT_NAME"": ""Novel coronavirus infection"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""KCD7""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""5-char billing code"",
              ""CONCEPT_CODE"": ""B97.29"",
              ""CONCEPT_ID"": 45600471,
              ""CONCEPT_NAME"": ""Other coronavirus as the cause of diseases classified elsewhere"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
              ""VOCABULARY_ID"": ""ICD10CM""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""KCD7 code"",
              ""CONCEPT_CODE"": ""U18"",
              ""CONCEPT_ID"": 586415,
              ""CONCEPT_NAME"": ""Provisional assignment of new diseases or emergency use"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""KCD7""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""Z03.800x001"",
              ""CONCEPT_ID"": 710157,
              ""CONCEPT_NAME"": ""Suspected case of COVID-19 (machine translation)"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            },
            ""isExcluded"": true
          }
        ]
      }
    },
    {
      ""id"": 4,
      ""name"": ""[OHDSI Covid19 v1] Inpatient Visit"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_ID"": 262,
              ""CONCEPT_NAME"": ""Emergency Room and Inpatient Visit"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""CONCEPT_CODE"": ""ERIP"",
              ""DOMAIN_ID"": ""Visit"",
              ""VOCABULARY_ID"": ""Visit"",
              ""CONCEPT_CLASS_ID"": ""Visit""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_ID"": 9201,
              ""CONCEPT_NAME"": ""Inpatient Visit"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""INVALID_REASON_CAPTION"": ""Unknown"",
              ""CONCEPT_CODE"": ""IP"",
              ""DOMAIN_ID"": ""Visit"",
              ""VOCABULARY_ID"": ""Visit"",
              ""CONCEPT_CLASS_ID"": ""Visit""
            },
            ""includeDescendants"": true
          }
        ]
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""VisitOccurrence"": {
          ""CodesetId"": 4,
          ""OccurrenceStartDate"": {
            ""Value"": ""2019-12-01"",
            ""Op"": ""gt""
          }
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": [0],
      ""PostDays"": [0]
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": [""All""]
    }
  },
  ""AdditionalCriteria"": {
    ""Type"": [""ANY""],
    ""CriteriaList"": [
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {
            ""CodesetId"": 0
          },
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {
            ""ConditionSourceConcept"": 3
          },
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""CodesetId"": 1,
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""CodesetId"": 2,
            ""ValueAsConcept"": [
              {
                ""CONCEPT_CODE"": ""260373001"",
                ""CONCEPT_ID"": 4126681,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA11882-0"",
                ""CONCEPT_ID"": 45877985,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""10828004"",
                ""CONCEPT_ID"": 9191,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""52101004"",
                ""CONCEPT_ID"": 4181412,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA9633-4"",
                ""CONCEPT_ID"": 45879438,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""LA6576-8"",
                ""CONCEPT_ID"": 45884084,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              }
            ]
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""CodesetId"": 2,
            ""ValueAsConcept"": [
              {
                ""CONCEPT_CODE"": ""260373001"",
                ""CONCEPT_ID"": 4126681,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA11882-0"",
                ""CONCEPT_ID"": 45877985,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""10828004"",
                ""CONCEPT_ID"": 9191,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA6576-8"",
                ""CONCEPT_ID"": 45884084,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""52101004"",
                ""CONCEPT_ID"": 4181412,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA9633-4"",
                ""CONCEPT_ID"": 45879438,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              }
            ]
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {},
            ""ObservationSourceConcept"": 3
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      }
    ],
    ""DemographicCriteriaList"": [],
    ""Groups"": []
  },
  ""QualifiedLimit"": {
    ""Type"": [""All""]
  },
  ""ExpressionLimit"": {
    ""Type"": [""First""]
  },
  ""InclusionRules"": [
    {
      ""name"": ""age >=18"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [],
        ""DemographicCriteriaList"": [
          {
            ""Age"": {
              ""Value"": 18,
              ""Op"": ""gte""
            }
          }
        ],
        ""Groups"": []
      }
    },
    {
      ""name"": ""does not have hospitalization for COVID19 in the 6 months preceding admission"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""VisitOccurrence"": {
                ""CorrelatedCriteria"": {
                  ""Type"": ""ANY"",
                  ""CriteriaList"": [
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {
                          ""CodesetId"": 0
                        },
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {
                          ""ConditionSourceConcept"": 3
                        },
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""ObservationSourceConcept"": 3,
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""CodesetId"": 1,
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""CodesetId"": 2,
                          ""ValueAsConcept"": [
                            {
                              ""CONCEPT_CODE"": ""260373001"",
                              ""CONCEPT_ID"": 4126681,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA11882-0"",
                              ""CONCEPT_ID"": 45877985,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""10828004"",
                              ""CONCEPT_ID"": 9191,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA6576-8"",
                              ""CONCEPT_ID"": 45884084,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""52101004"",
                              ""CONCEPT_ID"": 4181412,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA9633-4"",
                              ""CONCEPT_ID"": 45879438,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            }
                          ]
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""CodesetId"": 2,
                          ""ValueAsConcept"": [
                            {
                              ""CONCEPT_CODE"": ""260373001"",
                              ""CONCEPT_ID"": 4126681,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA11882-0"",
                              ""CONCEPT_ID"": 45877985,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""10828004"",
                              ""CONCEPT_ID"": 9191,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA6576-8"",
                              ""CONCEPT_ID"": 45884084,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""52101004"",
                              ""CONCEPT_ID"": 4181412,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA9633-4"",
                              ""CONCEPT_ID"": 45879438,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            }
                          ]
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    }
                  ],
                  ""DemographicCriteriaList"": [],
                  ""Groups"": []
                },
                ""CodesetId"": 4
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Days"": 180,
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    }
  ],
  ""EndStrategy"": {
    ""DateOffset"": {
      ""DateField"": [""EndDate""],
      ""Offset"": [0]
    }
  },
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": [""ERA""],
    ""EraPad"": [0]
  },
  ""CensorWindow"": {}
}
"
COVID ID3 v1,3,COVID-19 broad - with prior observation,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37311061)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37311061)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37310282)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37310282)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (756055)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (756055)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37310282,37310281)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37310282,37310281)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (710158,710155,710156,710159,710160,45756093,42501115,586414,45600471,586415)and invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45542411,710157)and invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (444413,437663,4141062,4152360)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (444413,437663,4141062,4152360)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4346179,4170869,4226022,37205085,4318555,37016869,443908,4093997,4347651,440285,4087628,4143214,4039793,37397178,40493465,4199309,44784428,44784427,44784429,44782483,43530646,4086668,3197956,4094003,43530637,37017455,4087629,4150518,4184347,4326408,4200980,4229442,4239624,4300533,4308214,4099900,4094000,4087017,438963,4243806)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4346179,4170869,4226022,37205085,4318555,37016869,443908,4093997,4347651,440285,4087628,4143214,4039793,37397178,40493465,4199309,44784428,44784427,44784429,44782483,43530646,4086668,3197956,4094003,43530637,37017455,4087629,4150518,4184347,4326408,4200980,4229442,4239624,4300533,4308214,4099900,4094000,4087017,438963,4243806)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (3025085,21490870,21490688,3020891,3025926,3025704,3017614,3011783,3004750,3008557,3007846,3016117,3006749,3016715,3018145,3015039,3009553,4329518,4174894,21490907,21490588,4212763,44809208,21490906,21490590,4039793,4077057,4039791,4151775,3006322,3022060,4265708,3025163)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (3025085,21490870,21490688,3020891,3025926,3025704,3017614,3011783,3004750,3008557,3007846,3016117,3006749,3016715,3018145,3015039,3009553,4329518,4174894,21490907,21490588,4212763,44809208,21490906,21490590,4039793,4077057,4039791,4151775,3006322,3022060,4265708,3025163)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4189949,4040476,4039792,4040104,4164378,4039796,4039795,4040106,4039794,4038778,45769775,4267945)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4189949,4040476,4039792,4040104,4164378,4039796,4039795,4040106,4039794,4038778,45769775,4267945)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (254761,4089228)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (254761,4089228)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4191650,312437)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4191650,312437)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4222908)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4222908)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (442752)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (442752)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (258828,4298555,195464,442315,4347181,442774,36713056,37118025,4316217,37312366,46284893)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (258828,4298555,195464,442315,4347181,442774,36713056,37118025,4316217,37312366,46284893)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4223659,4272240,1572255,439926,44829293,44823445,1572256)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4223659,4272240,1572255,439926,44829293,44823445,1572256)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4158491,37396808,4219363,4221911,37205051,37205052,45772721,4225027,40484614,4092860,4090207,44782753)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4158491,37396808,4219363,4221911,37205051,37205052,45772721,4225027,40484614,4092860,4090207,44782753)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 11 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4050869,255848)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4050869,255848)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45770911,4001167,4049965,36712839,252552)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45770911,4001167,4049965,36712839,252552)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 12 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (710157,45763724)and invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date, row_number() OVER (PARTITION BY E.person_id ORDER BY E.start_date ASC) ordinal, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C

WHERE C.visit_start_date > DATEFROMPARTS(2019, 12, 01)
-- End Visit Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,4181412,45879438,45884084)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,45884084,4181412,45879438)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 6 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 12))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 7 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 12))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Criteria Group
select 8 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

UNION ALL
-- Begin Criteria Group
select 1 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 9))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 10))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 10))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 11))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Demographic Criteria
SELECT 0 as index_id, e.person_id, e.event_id
FROM #qualified_events E
JOIN @cdm_database_schema.PERSON P ON P.PERSON_ID = E.PERSON_ID
WHERE YEAR(E.start_date) - P.year_of_birth >= 18
GROUP BY e.person_id, e.event_id
-- End Demographic Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
INNER JOIN
(
  -- Begin Observation Period Criteria
select C.person_id, C.observation_period_id as event_id, C.observation_period_start_date as start_date, C.observation_period_end_date as end_date, C.period_type_concept_id as TARGET_CONCEPT_ID, CAST(NULL as bigint) as visit_occurrence_id
from 
(
        select op.*, row_number() over (PARTITION BY op.person_id ORDER BY op.observation_period_start_date) as ordinal
        FROM @cdm_database_schema.OBSERVATION_PERIOD op
) C


-- End Observation Period Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE and A.START_DATE <= DATEADD(day,-365,P.START_DATE) AND A.END_DATE >= DATEADD(day,0,P.END_DATE) AND A.END_DATE <= P.OP_END_DATE
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 2 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_2
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.target_concept_id, PE.visit_occurrence_id FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,45884084,4181412,45879438)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,45884084,4181412,45879438)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 6 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 12))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 7 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 12))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Criteria Group
select 8 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

UNION ALL
-- Begin Criteria Group
select 1 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.END_DATE >= P.OP_START_DATE AND A.END_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 9))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 10))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 10))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 11))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 6
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-180,P.START_DATE) and A.START_DATE <= DATEADD(day,-1,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_2) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;

TRUNCATE TABLE #Inclusion_2;
DROP TABLE #Inclusion_2;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),3)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,0,end_date) > start_date then DATEADD(day,0,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS era_end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defiend as the event that satisfies the most inclulsion rules.
-- ties are solved by choosign the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule' 
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule' 
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
  ""ConceptSets"": [
    {
      ""id"": 0,
      ""name"": ""COVID-19 (including asymptomatic)"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""840539006"",
              ""CONCEPT_ID"": 37311061,
              ""CONCEPT_NAME"": ""Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 1,
      ""name"": ""COVID-19 specific testing (pre-coordinated Measurements) - Positive"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""1240581000000104"",
              ""CONCEPT_ID"": 37310282,
              ""CONCEPT_NAME"": ""2019 novel coronavirus detected"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 2,
      ""name"": ""COVID-19 specific testing (pre-coordinated Measurements excluded)"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""1240581000000104"",
              ""CONCEPT_ID"": 37310282,
              ""CONCEPT_NAME"": ""2019 novel coronavirus detected"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""1240591000000102"",
              ""CONCEPT_ID"": 37310281,
              ""CONCEPT_NAME"": ""2019 novel coronavirus not detected"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Procedure"",
              ""CONCEPT_CODE"": ""OMOP4873969"",
              ""CONCEPT_ID"": 756055,
              ""CONCEPT_NAME"": ""Measurement of severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""OMOP Extension""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 3,
      ""name"": ""COVID-19 source codes"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100"",
              ""CONCEPT_ID"": 710158,
              ""CONCEPT_NAME"": ""COVID-19 (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100x003"",
              ""CONCEPT_ID"": 710155,
              ""CONCEPT_NAME"": ""COVID-19 pneumonia (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100x001"",
              ""CONCEPT_ID"": 710156,
              ""CONCEPT_NAME"": ""COVID-19 pneumonia (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100x002"",
              ""CONCEPT_ID"": 710159,
              ""CONCEPT_NAME"": ""Confirmed COVID-19, excluding pneumonia (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""6-char billing code"",
              ""CONCEPT_CODE"": ""Z20.828"",
              ""CONCEPT_ID"": 45542411,
              ""CONCEPT_NAME"": ""Contact with and (suspected) exposure to other viral communicable diseases"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CM""
            },
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.1"",
              ""CONCEPT_ID"": 710160,
              ""CONCEPT_NAME"": ""Emergency use of U07.1 | Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.1"",
              ""CONCEPT_ID"": 45756093,
              ""CONCEPT_NAME"": ""Emergency use of U07.1 | Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""KCD7 code"",
              ""CONCEPT_CODE"": ""U07.1"",
              ""CONCEPT_ID"": 42501115,
              ""CONCEPT_NAME"": ""Emergency use of U07.1 | Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""KCD7""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""KCD7 code"",
              ""CONCEPT_CODE"": ""U18.1"",
              ""CONCEPT_ID"": 586414,
              ""CONCEPT_NAME"": ""Novel coronavirus infection"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""KCD7""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""5-char billing code"",
              ""CONCEPT_CODE"": ""B97.29"",
              ""CONCEPT_ID"": 45600471,
              ""CONCEPT_NAME"": ""Other coronavirus as the cause of diseases classified elsewhere"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CM""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""KCD7 code"",
              ""CONCEPT_CODE"": ""U18"",
              ""CONCEPT_ID"": 586415,
              ""CONCEPT_NAME"": ""Provisional assignment of new diseases or emergency use"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""KCD7""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""Z03.800x001"",
              ""CONCEPT_ID"": 710157,
              ""CONCEPT_NAME"": ""Suspected case of COVID-19 (machine translation)"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            },
            ""isExcluded"": true
          }
        ]
      }
    },
    {
      ""id"": 4,
      ""name"": ""[OHDSI Covid19 v1] Inpatient Visit"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Visit"",
              ""CONCEPT_CODE"": ""ERIP"",
              ""CONCEPT_ID"": 262,
              ""CONCEPT_NAME"": ""Emergency Room and Inpatient Visit"",
              ""DOMAIN_ID"": ""Visit"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""Visit""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Visit"",
              ""CONCEPT_CODE"": ""IP"",
              ""CONCEPT_ID"": 9201,
              ""CONCEPT_NAME"": ""Inpatient Visit"",
              ""DOMAIN_ID"": ""Visit"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""Visit""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 5,
      ""name"": ""[COVID19 v1] Fever (38.0<c2><b0>C or higher) pre-coordinated measurement and conditions"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""240822009"",
              ""CONCEPT_ID"": 4346179,
              ""CONCEPT_NAME"": ""Bancroftian filarial fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""49513005"",
              ""CONCEPT_ID"": 4170869,
              ""CONCEPT_NAME"": ""Dehydration fever in newborn"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""405543000"",
              ""CONCEPT_ID"": 4226022,
              ""CONCEPT_NAME"": ""Drug-induced hyperpyrexia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""784372002"",
              ""CONCEPT_ID"": 37205085,
              ""CONCEPT_NAME"": ""Familial mesial temporal lobe epilepsy with febrile seizures"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""41497008"",
              ""CONCEPT_ID"": 444413,
              ""CONCEPT_NAME"": ""Febrile convulsion"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""386661006"",
              ""CONCEPT_ID"": 437663,
              ""CONCEPT_NAME"": ""Fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""426000000"",
              ""CONCEPT_ID"": 4141062,
              ""CONCEPT_NAME"": ""Fever greater than 100.4 Fahrenheit"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""95627000"",
              ""CONCEPT_ID"": 4318555,
              ""CONCEPT_NAME"": ""Fever of the newborn"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""713014002"",
              ""CONCEPT_ID"": 37016869,
              ""CONCEPT_NAME"": ""Infection caused by Borrelia miyamotoi"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""14683004"",
              ""CONCEPT_ID"": 443908,
              ""CONCEPT_NAME"": ""Louse-borne relapsing fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248437004"",
              ""CONCEPT_ID"": 4093997,
              ""CONCEPT_NAME"": ""Malarial fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""240827003"",
              ""CONCEPT_ID"": 4347651,
              ""CONCEPT_NAME"": ""Malayan filarial fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""405501007"",
              ""CONCEPT_ID"": 440285,
              ""CONCEPT_NAME"": ""Malignant hyperthermia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248441000"",
              ""CONCEPT_ID"": 4087628,
              ""CONCEPT_NAME"": ""Malignant tertian fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""267340006"",
              ""CONCEPT_ID"": 4143214,
              ""CONCEPT_NAME"": ""Maternal pyrexia in labor"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""271897009"",
              ""CONCEPT_ID"": 4152360,
              ""CONCEPT_NAME"": ""O/E - fever"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164299002"",
              ""CONCEPT_ID"": 4039793,
              ""CONCEPT_NAME"": ""O/E - level of fever"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""717231003"",
              ""CONCEPT_ID"": 37397178,
              ""CONCEPT_NAME"": ""PFAPA syndrome"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""449129007"",
              ""CONCEPT_ID"": 40493465,
              ""CONCEPT_NAME"": ""Paraneoplastic fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""52715007"",
              ""CONCEPT_ID"": 4199309,
              ""CONCEPT_NAME"": ""Pel Ebstein fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""698579002"",
              ""CONCEPT_ID"": 44784428,
              ""CONCEPT_NAME"": ""Post diphtheria vaccination fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""698578005"",
              ""CONCEPT_ID"": 44784427,
              ""CONCEPT_NAME"": ""Post diphtheria, tetanus and pertussis vaccination fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""698581000"",
              ""CONCEPT_ID"": 44784429,
              ""CONCEPT_NAME"": ""Post pertussis vaccination fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""698580004"",
              ""CONCEPT_ID"": 44782483,
              ""CONCEPT_NAME"": ""Post tetanus vaccination fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""123471000119103"",
              ""CONCEPT_ID"": 43530646,
              ""CONCEPT_NAME"": ""Post vaccination fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248450003"",
              ""CONCEPT_ID"": 4086668,
              ""CONCEPT_NAME"": ""Postoperative fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""17670001000004108"",
              ""CONCEPT_ID"": 3197956,
              ""CONCEPT_NAME"": ""Postoperative fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""Nebraska Lexicon""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248451004"",
              ""CONCEPT_ID"": 4094003,
              ""CONCEPT_NAME"": ""Postpartum fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""130091000119103"",
              ""CONCEPT_ID"": 43530637,
              ""CONCEPT_NAME"": ""Postprocedural fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""713731001"",
              ""CONCEPT_ID"": 37017455,
              ""CONCEPT_NAME"": ""Pyrexia of unknown origin co-occurrent with human immunodeficiency virus infection"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248442007"",
              ""CONCEPT_ID"": 4087629,
              ""CONCEPT_NAME"": ""Quartan fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""31120005"",
              ""CONCEPT_ID"": 4150518,
              ""CONCEPT_NAME"": ""Relapsing fever of Asia AND/OR Africa"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""43626008"",
              ""CONCEPT_ID"": 4184347,
              ""CONCEPT_NAME"": ""Relapsing fever of Central AND/OR South Africa"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""74873003"",
              ""CONCEPT_ID"": 4326408,
              ""CONCEPT_NAME"": ""Relapsing fever of Central AND/OR South America"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""52635002"",
              ""CONCEPT_ID"": 4200980,
              ""CONCEPT_NAME"": ""Relapsing fever of Iberian Peninsula AND/OR Northwest Africa"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""88808006"",
              ""CONCEPT_ID"": 4229442,
              ""CONCEPT_NAME"": ""Relapsing fever of Iran AND/OR Central Asia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""58827009"",
              ""CONCEPT_ID"": 4239624,
              ""CONCEPT_NAME"": ""Relapsing fever of Southern U.S., Mexico, Central AND/OR South America"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""78168002"",
              ""CONCEPT_ID"": 4300533,
              ""CONCEPT_NAME"": ""Relapsing fever of Western North America"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""39002001"",
              ""CONCEPT_ID"": 4308214,
              ""CONCEPT_NAME"": ""Relapsing fever of Western United States"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""27578005"",
              ""CONCEPT_ID"": 4099900,
              ""CONCEPT_NAME"": ""Relapsing fever of the Caucasus"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248446005"",
              ""CONCEPT_ID"": 4094000,
              ""CONCEPT_NAME"": ""Reversed diurnal fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248440004"",
              ""CONCEPT_ID"": 4087017,
              ""CONCEPT_NAME"": ""Tertian fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""10301003"",
              ""CONCEPT_ID"": 438963,
              ""CONCEPT_NAME"": ""Tick-borne relapsing fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""60025004"",
              ""CONCEPT_ID"": 4243806,
              ""CONCEPT_NAME"": ""Transitory fever of newborn"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 6,
      ""name"": ""[COVID19 V1] Fever (38.0<c2><b0>C or higher) measurement and observation"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8328-7"",
              ""CONCEPT_ID"": 3025085,
              ""CONCEPT_NAME"": ""Axillary temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""76278-1"",
              ""CONCEPT_ID"": 21490870,
              ""CONCEPT_NAME"": ""Bladder temperature via Foley"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""61008-9"",
              ""CONCEPT_ID"": 21490688,
              ""CONCEPT_NAME"": ""Body surface temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8310-5"",
              ""CONCEPT_ID"": 3020891,
              ""CONCEPT_NAME"": ""Body temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8329-5"",
              ""CONCEPT_ID"": 3025926,
              ""CONCEPT_NAME"": ""Body temperature - Core"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8334-5"",
              ""CONCEPT_ID"": 3025704,
              ""CONCEPT_NAME"": ""Body temperature - Urinary bladder"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8321-2"",
              ""CONCEPT_ID"": 3017614,
              ""CONCEPT_NAME"": ""Body temperature 1 hour"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8311-3"",
              ""CONCEPT_ID"": 3011783,
              ""CONCEPT_NAME"": ""Body temperature 1 hour maximum"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8323-8"",
              ""CONCEPT_ID"": 3004750,
              ""CONCEPT_NAME"": ""Body temperature 10 hour"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8313-9"",
              ""CONCEPT_ID"": 3008557,
              ""CONCEPT_NAME"": ""Body temperature 10 hour maximum"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8324-6"",
              ""CONCEPT_ID"": 3007846,
              ""CONCEPT_NAME"": ""Body temperature 12 hour"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8314-7"",
              ""CONCEPT_ID"": 3016117,
              ""CONCEPT_NAME"": ""Body temperature 12 hour maximum"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8325-3"",
              ""CONCEPT_ID"": 3006749,
              ""CONCEPT_NAME"": ""Body temperature 24 hour"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8315-4"",
              ""CONCEPT_ID"": 3016715,
              ""CONCEPT_NAME"": ""Body temperature 24 hour maximum"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8322-0"",
              ""CONCEPT_ID"": 3018145,
              ""CONCEPT_NAME"": ""Body temperature 8 hour"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8312-1"",
              ""CONCEPT_ID"": 3015039,
              ""CONCEPT_NAME"": ""Body temperature 8 hour maximum"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""11289-6"",
              ""CONCEPT_ID"": 3009553,
              ""CONCEPT_NAME"": ""Body temperature at First encounter"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""431807005"",
              ""CONCEPT_ID"": 4329518,
              ""CONCEPT_NAME"": ""Body temperature taken with digital thermometer"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""276885007"",
              ""CONCEPT_ID"": 4174894,
              ""CONCEPT_NAME"": ""Core body temperature"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""76011-6"",
              ""CONCEPT_ID"": 21490907,
              ""CONCEPT_NAME"": ""Ear temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""60836-4"",
              ""CONCEPT_ID"": 21490588,
              ""CONCEPT_NAME"": ""Esophageal temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""415922000"",
              ""CONCEPT_ID"": 4212763,
              ""CONCEPT_NAME"": ""Forehead temperature"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""415929009"",
              ""CONCEPT_ID"": 4189949,
              ""CONCEPT_NAME"": ""Groin temperature"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""852591000000107"",
              ""CONCEPT_ID"": 44809208,
              ""CONCEPT_NAME"": ""Maximum body temperature"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""76010-8"",
              ""CONCEPT_ID"": 21490906,
              ""CONCEPT_NAME"": ""Nasal temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""60838-0"",
              ""CONCEPT_ID"": 21490590,
              ""CONCEPT_NAME"": ""Nasopharyngeal temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164292006"",
              ""CONCEPT_ID"": 4040476,
              ""CONCEPT_NAME"": ""O/E - axillary temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164295008"",
              ""CONCEPT_ID"": 4039792,
              ""CONCEPT_NAME"": ""O/E - core temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164293001"",
              ""CONCEPT_ID"": 4040104,
              ""CONCEPT_NAME"": ""O/E - groin temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""274308003"",
              ""CONCEPT_ID"": 4164378,
              ""CONCEPT_NAME"": ""O/E - hyperpyrexia"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164304001"",
              ""CONCEPT_ID"": 4039796,
              ""CONCEPT_NAME"": ""O/E - hyperpyrexia - greater than 40.5 degrees Celsius"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164299002"",
              ""CONCEPT_ID"": 4039793,
              ""CONCEPT_NAME"": ""O/E - level of fever"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""275874003"",
              ""CONCEPT_ID"": 4077057,
              ""CONCEPT_NAME"": ""O/E - oral temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164294007"",
              ""CONCEPT_ID"": 4039791,
              ""CONCEPT_NAME"": ""O/E - rectal temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164303007"",
              ""CONCEPT_ID"": 4039795,
              ""CONCEPT_NAME"": ""O/E - temperature elevated"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164301009"",
              ""CONCEPT_ID"": 4040106,
              ""CONCEPT_NAME"": ""O/E - temperature low"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164300005"",
              ""CONCEPT_ID"": 4039794,
              ""CONCEPT_NAME"": ""O/E - temperature normal"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""315632006"",
              ""CONCEPT_ID"": 4151775,
              ""CONCEPT_NAME"": ""O/E - tympanic temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""163633002"",
              ""CONCEPT_ID"": 4038778,
              ""CONCEPT_NAME"": ""O/E -skin temperature abnormal"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8331-1"",
              ""CONCEPT_ID"": 3006322,
              ""CONCEPT_NAME"": ""Oral temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8332-9"",
              ""CONCEPT_ID"": 3022060,
              ""CONCEPT_NAME"": ""Rectal temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""708499008"",
              ""CONCEPT_ID"": 45769775,
              ""CONCEPT_NAME"": ""Temperature of neonate at birth"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""364537001"",
              ""CONCEPT_ID"": 4265708,
              ""CONCEPT_NAME"": ""Temperature of skin"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""364246006"",
              ""CONCEPT_ID"": 4267945,
              ""CONCEPT_NAME"": ""Temperature of vagina"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8333-7"",
              ""CONCEPT_ID"": 3025163,
              ""CONCEPT_NAME"": ""Tympanic membrane temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 7,
      ""name"": ""[OHDSI Cov19] Cough"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""49727002"",
              ""CONCEPT_ID"": 254761,
              ""CONCEPT_NAME"": ""Cough"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248595008"",
              ""CONCEPT_ID"": 4089228,
              ""CONCEPT_NAME"": ""Sputum finding"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 8,
      ""name"": ""[COVID V1] Shortness of breath (dyspnea)"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""373895009"",
              ""CONCEPT_ID"": 4191650,
              ""CONCEPT_NAME"": ""Acute respiratory distress"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""401275008"",
              ""CONCEPT_ID"": 4222908,
              ""CONCEPT_NAME"": ""Borg Breathlessness Score: 0 none at all"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""267036007"",
              ""CONCEPT_ID"": 312437,
              ""CONCEPT_NAME"": ""Dyspnea"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 9,
      ""name"": ""[COVID19 v1] Myalgia"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""95416007"",
              ""CONCEPT_ID"": 258828,
              ""CONCEPT_NAME"": ""Eosinophilia myalgia syndrome"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""76821002"",
              ""CONCEPT_ID"": 4298555,
              ""CONCEPT_NAME"": ""Epidemic cervical myalgia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""83264000"",
              ""CONCEPT_ID"": 195464,
              ""CONCEPT_NAME"": ""Epidemic pleurodynia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""56557000"",
              ""CONCEPT_ID"": 442315,
              ""CONCEPT_NAME"": ""Fibrositis"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""240044003"",
              ""CONCEPT_ID"": 4347181,
              ""CONCEPT_NAME"": ""Fibrositis and nodular fasciitis"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""63491006"",
              ""CONCEPT_ID"": 442774,
              ""CONCEPT_NAME"": ""Intermittent claudication"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""68962001"",
              ""CONCEPT_ID"": 442752,
              ""CONCEPT_NAME"": ""Muscle pain"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""16462851000119106"",
              ""CONCEPT_ID"": 36713056,
              ""CONCEPT_NAME"": ""Myalgia caused by statin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""726531007"",
              ""CONCEPT_ID"": 37118025,
              ""CONCEPT_NAME"": ""Myofascial pain syndrome"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""95417003"",
              ""CONCEPT_ID"": 4316217,
              ""CONCEPT_NAME"": ""Primary fibromyalgia syndrome"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""788465007"",
              ""CONCEPT_ID"": 37312366,
              ""CONCEPT_NAME"": ""RSIS - Repetitive strain injury syndrome"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""957311000000101"",
              ""CONCEPT_ID"": 46284893,
              ""CONCEPT_NAME"": ""Secondary fibromyalgia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 10,
      ""name"": ""[Covid19 V1] Malaise or Fatigue or (Malaise and Fatigue)"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""272036004"",
              ""CONCEPT_ID"": 4158491,
              ""CONCEPT_NAME"": ""C/O - debility - malaise"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""716749005"",
              ""CONCEPT_ID"": 37396808,
              ""CONCEPT_NAME"": ""Cancer-related fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""82022002"",
              ""CONCEPT_ID"": 4219363,
              ""CONCEPT_NAME"": ""Congenital debility of fetus"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""84229001"",
              ""CONCEPT_ID"": 4223659,
              ""CONCEPT_NAME"": ""Fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""420900006"",
              ""CONCEPT_ID"": 4221911,
              ""CONCEPT_NAME"": ""Fatigue associated with AIDS"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""784317004"",
              ""CONCEPT_ID"": 37205051,
              ""CONCEPT_NAME"": ""Fatigue due to chemotherapy"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""784318009"",
              ""CONCEPT_ID"": 37205052,
              ""CONCEPT_NAME"": ""Fatigue due to radiation therapy"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""704369007"",
              ""CONCEPT_ID"": 45772721,
              ""CONCEPT_NAME"": ""Fatigue due to treatment"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""367391008"",
              ""CONCEPT_ID"": 4272240,
              ""CONCEPT_NAME"": ""Malaise"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""3-char nonbill code"",
              ""CONCEPT_CODE"": ""R53"",
              ""CONCEPT_ID"": 1572255,
              ""CONCEPT_NAME"": ""Malaise and fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CM""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""271795006"",
              ""CONCEPT_ID"": 439926,
              ""CONCEPT_NAME"": ""Malaise and fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""4-dig nonbill code"",
              ""CONCEPT_CODE"": ""780.7"",
              ""CONCEPT_ID"": 44829293,
              ""CONCEPT_NAME"": ""Malaise and fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD9CM""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""420801006"",
              ""CONCEPT_ID"": 4225027,
              ""CONCEPT_NAME"": ""Malaise associated with AIDS"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""5-dig billing code"",
              ""CONCEPT_CODE"": ""780.79"",
              ""CONCEPT_ID"": 44823445,
              ""CONCEPT_NAME"": ""Other malaise and fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD9CM""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""4-char nonbill code"",
              ""CONCEPT_CODE"": ""R53.8"",
              ""CONCEPT_ID"": 1572256,
              ""CONCEPT_NAME"": ""Other malaise and fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CM""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""444042007"",
              ""CONCEPT_ID"": 40484614,
              ""CONCEPT_NAME"": ""Postexertional fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""250002000"",
              ""CONCEPT_ID"": 4092860,
              ""CONCEPT_NAME"": ""Rapid fatigue of gait"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""18726006"",
              ""CONCEPT_ID"": 4090207,
              ""CONCEPT_NAME"": ""Senile asthenia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""148871000119109"",
              ""CONCEPT_ID"": 44782753,
              ""CONCEPT_NAME"": ""Weakness as a late effect of stroke"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 11,
      ""name"": ""[COVID19 v1] Pneumonia"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""184431000119108"",
              ""CONCEPT_ID"": 45770911,
              ""CONCEPT_NAME"": ""Acute pneumonia due to coccidioidomycosis"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""109814008"",
              ""CONCEPT_ID"": 4001167,
              ""CONCEPT_NAME"": ""Acute ulcerative gastroenteritis complicating pneumonia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""233606009"",
              ""CONCEPT_ID"": 4050869,
              ""CONCEPT_NAME"": ""Atypical pneumonia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""233613009"",
              ""CONCEPT_ID"": 4049965,
              ""CONCEPT_NAME"": ""Fungal pneumonia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""12381000132107"",
              ""CONCEPT_ID"": 36712839,
              ""CONCEPT_NAME"": ""Idiopathic pneumonia syndrome"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""81164001"",
              ""CONCEPT_ID"": 252552,
              ""CONCEPT_NAME"": ""Ornithosis with pneumonia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""233604007"",
              ""CONCEPT_ID"": 255848,
              ""CONCEPT_NAME"": ""Pneumonia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 12,
      ""name"": ""COVID-19 Suspected OR Suspected unspecific coronavirus infection - Source and Standard terminology"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""Z03.800x001"",
              ""CONCEPT_ID"": 710157,
              ""CONCEPT_NAME"": ""Suspected case of COVID-19 (machine translation)"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Context-dependent"",
              ""CONCEPT_CODE"": ""700217006"",
              ""CONCEPT_ID"": 45763724,
              ""CONCEPT_NAME"": ""Suspected coronavirus infection"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            }
          }
        ]
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""VisitOccurrence"": {
          ""CodesetId"": 4,
          ""OccurrenceStartDate"": {
            ""Value"": ""2019-12-01"",
            ""Op"": ""gt""
          }
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": [0],
      ""PostDays"": [0]
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": [""All""]
    }
  },
  ""AdditionalCriteria"": {
    ""Type"": [""ANY""],
    ""CriteriaList"": [
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {
            ""CodesetId"": 0
          },
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {
            ""ConditionSourceConcept"": 3
          },
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""CodesetId"": 1,
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""CodesetId"": 2,
            ""ValueAsConcept"": [
              {
                ""CONCEPT_CODE"": ""260373001"",
                ""CONCEPT_ID"": 4126681,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA11882-0"",
                ""CONCEPT_ID"": 45877985,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""10828004"",
                ""CONCEPT_ID"": 9191,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""52101004"",
                ""CONCEPT_ID"": 4181412,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA9633-4"",
                ""CONCEPT_ID"": 45879438,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""LA6576-8"",
                ""CONCEPT_ID"": 45884084,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              }
            ]
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""CodesetId"": 2,
            ""ValueAsConcept"": [
              {
                ""CONCEPT_CODE"": ""260373001"",
                ""CONCEPT_ID"": 4126681,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA11882-0"",
                ""CONCEPT_ID"": 45877985,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""10828004"",
                ""CONCEPT_ID"": 9191,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA6576-8"",
                ""CONCEPT_ID"": 45884084,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""52101004"",
                ""CONCEPT_ID"": 4181412,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA9633-4"",
                ""CONCEPT_ID"": 45879438,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              }
            ]
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {},
            ""ObservationSourceConcept"": 3
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {
            ""CodesetId"": 12
          },
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {
            ""ConditionSourceConcept"": 12
          },
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      }
    ],
    ""DemographicCriteriaList"": [],
    ""Groups"": [
      {
        ""Type"": ""ALL"",
        ""CriteriaList"": [],
        ""DemographicCriteriaList"": [],
        ""Groups"": [
          {
            ""Type"": ""ANY"",
            ""CriteriaList"": [
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""CodesetId"": 5
                  },
                  ""Measurement"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  },
                  ""Observation"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {},
                  ""Measurement"": {
                    ""CodesetId"": 5,
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  },
                  ""Observation"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {},
                  ""Measurement"": {
                    ""CodesetId"": 6,
                    ""ValueAsNumber"": {
                      ""Value"": 38,
                      ""Extent"": 42,
                      ""Op"": ""bt""
                    },
                    ""Unit"": [
                      {
                        ""CONCEPT_CODE"": ""Cel"",
                        ""CONCEPT_ID"": 586323,
                        ""CONCEPT_NAME"": ""degree Celsius"",
                        ""DOMAIN_ID"": ""Unit"",
                        ""INVALID_REASON_CAPTION"": ""Unknown"",
                        ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                        ""VOCABULARY_ID"": ""UCUM""
                      }
                    ]
                  },
                  ""Observation"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {},
                  ""Measurement"": {
                    ""CodesetId"": 6,
                    ""ValueAsNumber"": {
                      ""Value"": 100.4,
                      ""Extent"": 120,
                      ""Op"": ""bt""
                    },
                    ""Unit"": [
                      {
                        ""CONCEPT_CODE"": ""[degF]"",
                        ""CONCEPT_ID"": 9289,
                        ""CONCEPT_NAME"": ""degree Fahrenheit"",
                        ""DOMAIN_ID"": ""Unit"",
                        ""INVALID_REASON_CAPTION"": ""Unknown"",
                        ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                        ""VOCABULARY_ID"": ""UCUM""
                      }
                    ]
                  },
                  ""Observation"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {},
                  ""Measurement"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  },
                  ""Observation"": {
                    ""CodesetId"": 6,
                    ""ValueAsNumber"": {
                      ""Value"": 38,
                      ""Extent"": 42,
                      ""Op"": ""bt""
                    },
                    ""Unit"": [
                      {
                        ""CONCEPT_CODE"": ""Cel"",
                        ""CONCEPT_ID"": 586323,
                        ""CONCEPT_NAME"": ""degree Celsius"",
                        ""DOMAIN_ID"": ""Unit"",
                        ""INVALID_REASON_CAPTION"": ""Unknown"",
                        ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                        ""VOCABULARY_ID"": ""UCUM""
                      }
                    ]
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {},
                  ""Measurement"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  },
                  ""Observation"": {
                    ""CodesetId"": 6,
                    ""ValueAsNumber"": {
                      ""Value"": 100.4,
                      ""Extent"": 120,
                      ""Op"": ""bt""
                    },
                    ""Unit"": [
                      {
                        ""CONCEPT_CODE"": ""[degF]"",
                        ""CONCEPT_ID"": 9289,
                        ""CONCEPT_NAME"": ""degree Fahrenheit"",
                        ""DOMAIN_ID"": ""Unit"",
                        ""INVALID_REASON_CAPTION"": ""Unknown"",
                        ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                        ""VOCABULARY_ID"": ""UCUM""
                      }
                    ]
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              }
            ],
            ""DemographicCriteriaList"": [],
            ""Groups"": []
          },
          {
            ""Type"": ""ANY"",
            ""CriteriaList"": [
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""CodesetId"": 7
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""CodesetId"": 8
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""CodesetId"": 9
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""CodesetId"": 10
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""ConditionSourceConcept"": 10
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""CodesetId"": 11
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              }
            ],
            ""DemographicCriteriaList"": [],
            ""Groups"": []
          }
        ]
      }
    ]
  },
  ""QualifiedLimit"": {
    ""Type"": [""All""]
  },
  ""ExpressionLimit"": {
    ""Type"": [""First""]
  },
  ""InclusionRules"": [
    {
      ""name"": ""age >=18"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [],
        ""DemographicCriteriaList"": [
          {
            ""Age"": {
              ""Value"": 18,
              ""Op"": ""gte""
            }
          }
        ],
        ""Groups"": []
      }
    },
    {
      ""name"": ""has >=365d of prior observation"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""ObservationPeriod"": {}
            },
            ""StartWindow"": {
              ""Start"": {
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 365,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""EndWindow"": {
              ""Start"": {
                ""Days"": 0,
                ""Coeff"": -1
              },
              ""End"": {
                ""Coeff"": 1
              },
              ""UseIndexEnd"": true,
              ""UseEventEnd"": true
            },
            ""Occurrence"": {
              ""Type"": 2,
              ""Count"": 1
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    },
    {
      ""name"": ""does not have hospitalization for COVID19 in the 6 months preceding admission"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""VisitOccurrence"": {
                ""CorrelatedCriteria"": {
                  ""Type"": ""ANY"",
                  ""CriteriaList"": [
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {
                          ""CodesetId"": 0
                        },
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {
                          ""ConditionSourceConcept"": 3
                        },
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""ObservationSourceConcept"": 3,
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""CodesetId"": 1,
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""CodesetId"": 2,
                          ""ValueAsConcept"": [
                            {
                              ""CONCEPT_CODE"": ""260373001"",
                              ""CONCEPT_ID"": 4126681,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA11882-0"",
                              ""CONCEPT_ID"": 45877985,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""10828004"",
                              ""CONCEPT_ID"": 9191,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA6576-8"",
                              ""CONCEPT_ID"": 45884084,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""52101004"",
                              ""CONCEPT_ID"": 4181412,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA9633-4"",
                              ""CONCEPT_ID"": 45879438,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            }
                          ]
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""CodesetId"": 2,
                          ""ValueAsConcept"": [
                            {
                              ""CONCEPT_CODE"": ""260373001"",
                              ""CONCEPT_ID"": 4126681,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA11882-0"",
                              ""CONCEPT_ID"": 45877985,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""10828004"",
                              ""CONCEPT_ID"": 9191,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA6576-8"",
                              ""CONCEPT_ID"": 45884084,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""52101004"",
                              ""CONCEPT_ID"": 4181412,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA9633-4"",
                              ""CONCEPT_ID"": 45879438,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            }
                          ]
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {
                          ""CodesetId"": 12
                        },
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {
                          ""ConditionSourceConcept"": 12
                        },
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    }
                  ],
                  ""DemographicCriteriaList"": [],
                  ""Groups"": [
                    {
                      ""Type"": ""ALL"",
                      ""CriteriaList"": [],
                      ""DemographicCriteriaList"": [],
                      ""Groups"": [
                        {
                          ""Type"": ""ANY"",
                          ""CriteriaList"": [
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""CodesetId"": 5
                                },
                                ""Measurement"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                },
                                ""Observation"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseIndexEnd"": true,
                                ""UseEventEnd"": false
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {},
                                ""Measurement"": {
                                  ""CodesetId"": 5,
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                },
                                ""Observation"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseIndexEnd"": true,
                                ""UseEventEnd"": false
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {},
                                ""Measurement"": {
                                  ""CodesetId"": 6,
                                  ""ValueAsNumber"": {
                                    ""Value"": 38,
                                    ""Extent"": 42,
                                    ""Op"": ""bt""
                                  },
                                  ""Unit"": [
                                    {
                                      ""CONCEPT_CODE"": ""Cel"",
                                      ""CONCEPT_ID"": 586323,
                                      ""CONCEPT_NAME"": ""degree Celsius"",
                                      ""DOMAIN_ID"": ""Unit"",
                                      ""INVALID_REASON_CAPTION"": ""Unknown"",
                                      ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                                      ""VOCABULARY_ID"": ""UCUM""
                                    }
                                  ]
                                },
                                ""Observation"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseIndexEnd"": true,
                                ""UseEventEnd"": false
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {},
                                ""Measurement"": {
                                  ""CodesetId"": 6,
                                  ""ValueAsNumber"": {
                                    ""Value"": 100.4,
                                    ""Extent"": 120,
                                    ""Op"": ""bt""
                                  },
                                  ""Unit"": [
                                    {
                                      ""CONCEPT_CODE"": ""[degF]"",
                                      ""CONCEPT_ID"": 9289,
                                      ""CONCEPT_NAME"": ""degree Fahrenheit"",
                                      ""DOMAIN_ID"": ""Unit"",
                                      ""INVALID_REASON_CAPTION"": ""Unknown"",
                                      ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                                      ""VOCABULARY_ID"": ""UCUM""
                                    }
                                  ]
                                },
                                ""Observation"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseIndexEnd"": true,
                                ""UseEventEnd"": false
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {},
                                ""Measurement"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                },
                                ""Observation"": {
                                  ""CodesetId"": 6,
                                  ""ValueAsNumber"": {
                                    ""Value"": 38,
                                    ""Extent"": 42,
                                    ""Op"": ""bt""
                                  },
                                  ""Unit"": [
                                    {
                                      ""CONCEPT_CODE"": ""Cel"",
                                      ""CONCEPT_ID"": 586323,
                                      ""CONCEPT_NAME"": ""degree Celsius"",
                                      ""DOMAIN_ID"": ""Unit"",
                                      ""INVALID_REASON_CAPTION"": ""Unknown"",
                                      ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                                      ""VOCABULARY_ID"": ""UCUM""
                                    }
                                  ]
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseIndexEnd"": true,
                                ""UseEventEnd"": false
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {},
                                ""Measurement"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                },
                                ""Observation"": {
                                  ""CodesetId"": 6,
                                  ""ValueAsNumber"": {
                                    ""Value"": 100.4,
                                    ""Extent"": 120,
                                    ""Op"": ""bt""
                                  },
                                  ""Unit"": [
                                    {
                                      ""CONCEPT_CODE"": ""[degF]"",
                                      ""CONCEPT_ID"": 9289,
                                      ""CONCEPT_NAME"": ""degree Fahrenheit"",
                                      ""DOMAIN_ID"": ""Unit"",
                                      ""INVALID_REASON_CAPTION"": ""Unknown"",
                                      ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                                      ""VOCABULARY_ID"": ""UCUM""
                                    }
                                  ]
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseIndexEnd"": true,
                                ""UseEventEnd"": false
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            }
                          ],
                          ""DemographicCriteriaList"": [],
                          ""Groups"": []
                        },
                        {
                          ""Type"": ""ALL"",
                          ""CriteriaList"": [
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""CodesetId"": 7
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": true
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""CodesetId"": 8
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false,
                                ""UseIndexEnd"": true
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""CodesetId"": 9
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false,
                                ""UseIndexEnd"": true
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""CodesetId"": 10
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false,
                                ""UseIndexEnd"": true
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""ConditionSourceConcept"": 10
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false,
                                ""UseIndexEnd"": true
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""CodesetId"": 11
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false,
                                ""UseIndexEnd"": true
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            }
                          ],
                          ""DemographicCriteriaList"": [],
                          ""Groups"": []
                        }
                      ]
                    }
                  ]
                },
                ""CodesetId"": 4
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Days"": 180,
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    }
  ],
  ""EndStrategy"": {
    ""DateOffset"": {
      ""DateField"": [""EndDate""],
      ""Offset"": [0]
    }
  },
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": [""ERA""],
    ""EraPad"": [0]
  },
  ""CensorWindow"": {}
}
"
COVID ID4 v1,4,COVID-19 broad - no prior observation required,"CREATE TABLE #Codesets (
  codeset_id int NOT NULL,
  concept_id bigint NOT NULL
)
;

INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 0 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37311061)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37311061)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 1 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37310282)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37310282)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 2 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (756055)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (756055)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (37310282,37310281)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (37310282,37310281)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 3 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (710158,710155,710156,710159,710160,45756093,42501115,586414,45600471,586415)and invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45542411,710157)and invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 4 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (262,9201)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (262,9201)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 5 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (444413,437663,4141062,4152360)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (444413,437663,4141062,4152360)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4346179,4170869,4226022,37205085,4318555,37016869,443908,4093997,4347651,440285,4087628,4143214,4039793,37397178,40493465,4199309,44784428,44784427,44784429,44782483,43530646,4086668,3197956,4094003,43530637,37017455,4087629,4150518,4184347,4326408,4200980,4229442,4239624,4300533,4308214,4099900,4094000,4087017,438963,4243806)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4346179,4170869,4226022,37205085,4318555,37016869,443908,4093997,4347651,440285,4087628,4143214,4039793,37397178,40493465,4199309,44784428,44784427,44784429,44782483,43530646,4086668,3197956,4094003,43530637,37017455,4087629,4150518,4184347,4326408,4200980,4229442,4239624,4300533,4308214,4099900,4094000,4087017,438963,4243806)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 6 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (3025085,21490870,21490688,3020891,3025926,3025704,3017614,3011783,3004750,3008557,3007846,3016117,3006749,3016715,3018145,3015039,3009553,4329518,4174894,21490907,21490588,4212763,44809208,21490906,21490590,4039793,4077057,4039791,4151775,3006322,3022060,4265708,3025163)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (3025085,21490870,21490688,3020891,3025926,3025704,3017614,3011783,3004750,3008557,3007846,3016117,3006749,3016715,3018145,3015039,3009553,4329518,4174894,21490907,21490588,4212763,44809208,21490906,21490590,4039793,4077057,4039791,4151775,3006322,3022060,4265708,3025163)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4189949,4040476,4039792,4040104,4164378,4039796,4039795,4040106,4039794,4038778,45769775,4267945)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4189949,4040476,4039792,4040104,4164378,4039796,4039795,4040106,4039794,4038778,45769775,4267945)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 7 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (254761,4089228)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (254761,4089228)
  and c.invalid_reason is null

) I
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 8 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4191650,312437)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4191650,312437)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4222908)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4222908)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 9 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (442752)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (442752)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (258828,4298555,195464,442315,4347181,442774,36713056,37118025,4316217,37312366,46284893)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (258828,4298555,195464,442315,4347181,442774,36713056,37118025,4316217,37312366,46284893)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 10 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4223659,4272240,1572255,439926,44829293,44823445,1572256)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4223659,4272240,1572255,439926,44829293,44823445,1572256)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4158491,37396808,4219363,4221911,37205051,37205052,45772721,4225027,40484614,4092860,4090207,44782753)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4158491,37396808,4219363,4221911,37205051,37205052,45772721,4225027,40484614,4092860,4090207,44782753)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 11 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (4050869,255848)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (4050869,255848)
  and c.invalid_reason is null

) I
LEFT JOIN
(
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (45770911,4001167,4049965,36712839,252552)and invalid_reason is null
UNION  select c.concept_id
  from @vocabulary_database_schema.CONCEPT c
  join @vocabulary_database_schema.CONCEPT_ANCESTOR ca on c.concept_id = ca.descendant_concept_id
  and ca.ancestor_concept_id in (45770911,4001167,4049965,36712839,252552)
  and c.invalid_reason is null

) E ON I.concept_id = E.concept_id
WHERE E.concept_id is null
) C;
INSERT INTO #Codesets (codeset_id, concept_id)
SELECT 12 as codeset_id, c.concept_id FROM (select distinct I.concept_id FROM
( 
  select concept_id from @vocabulary_database_schema.CONCEPT where concept_id in (710157,45763724)and invalid_reason is null

) I
) C;


with primary_events (event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id) as
(
-- Begin Primary Events
select P.ordinal as event_id, P.person_id, P.start_date, P.end_date, op_start_date, op_end_date, cast(P.visit_occurrence_id as bigint) as visit_occurrence_id
FROM
(
  select E.person_id, E.start_date, E.end_date, row_number() OVER (PARTITION BY E.person_id ORDER BY E.start_date ASC) ordinal, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date, cast(E.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM 
  (
  -- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C

WHERE C.visit_start_date > DATEFROMPARTS(2019, 12, 01)
-- End Visit Occurrence Criteria

  ) E
	JOIN @cdm_database_schema.observation_period OP on E.person_id = OP.person_id and E.start_date >=  OP.observation_period_start_date and E.start_date <= op.observation_period_end_date
  WHERE DATEADD(day,0,OP.OBSERVATION_PERIOD_START_DATE) <= E.START_DATE AND DATEADD(day,0,E.START_DATE) <= OP.OBSERVATION_PERIOD_END_DATE
) P

-- End Primary Events

)
SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, visit_occurrence_id
INTO #qualified_events
FROM 
(
  select pe.event_id, pe.person_id, pe.start_date, pe.end_date, pe.op_start_date, pe.op_end_date, row_number() over (partition by pe.person_id order by pe.start_date ASC) as ordinal, cast(pe.visit_occurrence_id as bigint) as visit_occurrence_id
  FROM primary_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,4181412,45879438,45884084)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,45884084,4181412,45879438)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 6 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 12))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 7 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 12))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Criteria Group
select 8 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

UNION ALL
-- Begin Criteria Group
select 1 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM primary_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 9))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 10))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 10))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM primary_events P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 11))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) QE

;

--- Inclusion Rule Inserts

select 0 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_0
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Demographic Criteria
SELECT 0 as index_id, e.person_id, e.event_id
FROM #qualified_events E
JOIN @cdm_database_schema.PERSON P ON P.PERSON_ID = E.PERSON_ID
WHERE YEAR(E.start_date) - P.year_of_birth >= 18
GROUP BY e.person_id, e.event_id
-- End Demographic Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

select 1 as inclusion_rule_id, person_id, event_id
INTO #Inclusion_1
FROM 
(
  select pe.person_id, pe.event_id
  FROM #qualified_events pe
  
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM #qualified_events E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM #qualified_events P
LEFT JOIN
(
  select PE.person_id, PE.event_id, PE.start_date, PE.end_date, PE.target_concept_id, PE.visit_occurrence_id FROM (
-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria

) PE
JOIN (
-- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 0))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_source_concept_id = codesets.concept_id and codesets.codeset_id = 3))
) C


-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 1))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,45884084,4181412,45879438)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 2))
) C

WHERE C.value_as_concept_id in (4126681,45877985,9191,45884084,4181412,45879438)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 6 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 12))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 7 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 12))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Criteria Group
select 8 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Criteria Group
select 0 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 5))
) C


-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Measurement Criteria
select C.person_id, C.measurement_id as event_id, C.measurement_date as start_date, DATEADD(d,1,C.measurement_date) as END_DATE, C.measurement_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select m.* 
  FROM @cdm_database_schema.MEASUREMENT m
JOIN #Codesets codesets on ((m.measurement_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Measurement Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 38.0000 and C.value_as_number <= 42.0000)
AND C.unit_concept_id in (586323)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Observation Criteria
select C.person_id, C.observation_id as event_id, C.observation_date as start_date, DATEADD(d,1,C.observation_date) as END_DATE, C.observation_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select o.* 
  FROM @cdm_database_schema.OBSERVATION o
JOIN #Codesets codesets on ((o.observation_concept_id = codesets.concept_id and codesets.codeset_id = 6))
) C

WHERE (C.value_as_number >= 100.4000 and C.value_as_number <= 120.0000)
AND C.unit_concept_id in (9289)
-- End Observation Criteria
) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group

UNION ALL
-- Begin Criteria Group
select 1 as index_id, person_id, event_id
FROM
(
  select E.person_id, E.event_id 
  FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) E
  INNER JOIN
  (
    -- Begin Correlated Criteria
SELECT 0 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 7))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.END_DATE >= P.OP_START_DATE AND A.END_DATE <= DATEADD(day,0,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 1 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 8))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 2 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 9))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 3 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 10))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 4 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_source_concept_id = codesets.concept_id and codesets.codeset_id = 10))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

UNION ALL
-- Begin Correlated Criteria
SELECT 5 as index_id, p.person_id, p.event_id
FROM (SELECT Q.person_id, Q.event_id, Q.start_date, Q.end_date, Q.visit_occurrence_id, OP.observation_period_start_date as op_start_date, OP.observation_period_end_date as op_end_date
FROM (-- Begin Visit Occurrence Criteria
select C.person_id, C.visit_occurrence_id as event_id, C.visit_start_date as start_date, C.visit_end_date as end_date, C.visit_concept_id as TARGET_CONCEPT_ID, C.visit_occurrence_id
from 
(
  select vo.* 
  FROM @cdm_database_schema.VISIT_OCCURRENCE vo
JOIN #Codesets codesets on ((vo.visit_concept_id = codesets.concept_id and codesets.codeset_id = 4))
) C


-- End Visit Occurrence Criteria
) Q
JOIN @cdm_database_schema.OBSERVATION_PERIOD OP on Q.person_id = OP.person_id 
  and OP.observation_period_start_date <= Q.start_date and OP.observation_period_end_date >= Q.start_date
) P
INNER JOIN
(
  -- Begin Condition Occurrence Criteria
SELECT C.person_id, C.condition_occurrence_id as event_id, C.condition_start_date as start_date, COALESCE(C.condition_end_date, DATEADD(day,1,C.condition_start_date)) as end_date, C.CONDITION_CONCEPT_ID as TARGET_CONCEPT_ID, C.visit_occurrence_id
FROM 
(
  SELECT co.* 
  FROM @cdm_database_schema.CONDITION_OCCURRENCE co
  JOIN #Codesets codesets on ((co.condition_concept_id = codesets.concept_id and codesets.codeset_id = 11))
) C


-- End Condition Occurrence Criteria

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-21,P.START_DATE) and A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= DATEADD(day,0,P.END_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) >= 1
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 6
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 2
) G
-- End Criteria Group

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) > 0
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id and AC.event_id = pe.event_id

) A on A.person_id = P.person_id and A.START_DATE >= P.OP_START_DATE AND A.START_DATE <= P.OP_END_DATE AND A.START_DATE >= DATEADD(day,-180,P.START_DATE) and A.START_DATE <= DATEADD(day,-1,P.START_DATE)
GROUP BY p.person_id, p.event_id
HAVING COUNT(A.TARGET_CONCEPT_ID) = 0
-- End Correlated Criteria

  ) CQ on E.person_id = CQ.person_id and E.event_id = CQ.event_id
  GROUP BY E.person_id, E.event_id
  HAVING COUNT(index_id) = 1
) G
-- End Criteria Group
) AC on AC.person_id = pe.person_id AND AC.event_id = pe.event_id
) Results
;

SELECT inclusion_rule_id, person_id, event_id
INTO #inclusion_events
FROM (select inclusion_rule_id, person_id, event_id from #Inclusion_0
UNION ALL
select inclusion_rule_id, person_id, event_id from #Inclusion_1) I;
TRUNCATE TABLE #Inclusion_0;
DROP TABLE #Inclusion_0;

TRUNCATE TABLE #Inclusion_1;
DROP TABLE #Inclusion_1;


with cteIncludedEvents(event_id, person_id, start_date, end_date, op_start_date, op_end_date, ordinal) as
(
  SELECT event_id, person_id, start_date, end_date, op_start_date, op_end_date, row_number() over (partition by person_id order by start_date ASC) as ordinal
  from
  (
    select Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date, SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) as inclusion_rule_mask
    from #qualified_events Q
    LEFT JOIN #inclusion_events I on I.person_id = Q.person_id and I.event_id = Q.event_id
    GROUP BY Q.event_id, Q.person_id, Q.start_date, Q.end_date, Q.op_start_date, Q.op_end_date
  ) MG -- matching groups

  -- the matching group with all bits set ( POWER(2,# of inclusion rules) - 1 = inclusion_rule_mask
  WHERE (MG.inclusion_rule_mask = POWER(cast(2 as bigint),2)-1)

)
select event_id, person_id, start_date, end_date, op_start_date, op_end_date
into #included_events
FROM cteIncludedEvents Results
WHERE Results.ordinal = 1
;

-- date offset strategy

select event_id, person_id, 
  case when DATEADD(day,0,end_date) > start_date then DATEADD(day,0,end_date) else start_date end as end_date
INTO #strategy_ends
from #included_events;


-- generate cohort periods into #final_cohort
with cohort_ends (event_id, person_id, end_date) as
(
	-- cohort exit dates
  -- End Date Strategy
SELECT event_id, person_id, end_date from #strategy_ends

),
first_ends (person_id, start_date, end_date) as
(
	select F.person_id, F.start_date, F.end_date
	FROM (
	  select I.event_id, I.person_id, I.start_date, E.end_date, row_number() over (partition by I.person_id, I.event_id order by E.end_date) as ordinal 
	  from #included_events I
	  join cohort_ends E on I.event_id = E.event_id and I.person_id = E.person_id and E.end_date >= I.start_date
	) F
	WHERE F.ordinal = 1
)
select person_id, start_date, end_date
INTO #cohort_rows
from first_ends;

with cteEndDates (person_id, end_date) AS -- the magic
(	
	SELECT
		person_id
		, DATEADD(day,-1 * 0, event_date)  as end_date
	FROM
	(
		SELECT
			person_id
			, event_date
			, event_type
			, MAX(start_ordinal) OVER (PARTITION BY person_id ORDER BY event_date, event_type ROWS UNBOUNDED PRECEDING) AS start_ordinal 
			, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY event_date, event_type) AS overall_ord
		FROM
		(
			SELECT
				person_id
				, start_date AS event_date
				, -1 AS event_type
				, ROW_NUMBER() OVER (PARTITION BY person_id ORDER BY start_date) AS start_ordinal
			FROM #cohort_rows
		
			UNION ALL
		

			SELECT
				person_id
				, DATEADD(day,0,end_date) as end_date
				, 1 AS event_type
				, NULL
			FROM #cohort_rows
		) RAWDATA
	) e
	WHERE (2 * e.start_ordinal) - e.overall_ord = 0
),
cteEnds (person_id, start_date, end_date) AS
(
	SELECT
		 c.person_id
		, c.start_date
		, MIN(e.end_date) AS era_end_date
	FROM #cohort_rows c
	JOIN cteEndDates e ON c.person_id = e.person_id AND e.end_date >= c.start_date
	GROUP BY c.person_id, c.start_date
)
select person_id, min(start_date) as start_date, end_date
into #final_cohort
from cteEnds
group by person_id, end_date
;

DELETE FROM @target_database_schema.@target_cohort_table where cohort_definition_id = @target_cohort_id;
INSERT INTO @target_database_schema.@target_cohort_table (cohort_definition_id, subject_id, cohort_start_date, cohort_end_date)
select @target_cohort_id as cohort_definition_id, person_id, start_date, end_date 
FROM #final_cohort CO
;


-- Find the event that is the 'best match' per person.  
-- the 'best match' is defiend as the event that satisfies the most inclulsion rules.
-- ties are solved by choosign the event that matches the earliest inclusion rule, and then earliest.

select q.person_id, q.event_id
into #best_events
from #qualified_events Q
join (
	SELECT R.person_id, R.event_id, ROW_NUMBER() OVER (PARTITION BY R.person_id ORDER BY R.rule_count DESC,R.min_rule_id ASC, R.start_date ASC) AS rank_value
	FROM (
		SELECT Q.person_id, Q.event_id, COALESCE(COUNT(DISTINCT I.inclusion_rule_id), 0) AS rule_count, COALESCE(MIN(I.inclusion_rule_id), 0) AS min_rule_id, Q.start_date
		FROM #qualified_events Q
		LEFT JOIN #inclusion_events I ON q.person_id = i.person_id AND q.event_id = i.event_id
		GROUP BY Q.person_id, Q.event_id, Q.start_date
	) R
) ranked on Q.person_id = ranked.person_id and Q.event_id = ranked.event_id
WHERE ranked.rank_value = 1
;

-- modes of generation: (the same tables store the results for the different modes, identified by the mode_id column)
-- 0: all events
-- 1: best event


-- BEGIN: Inclusion Impact Analysis - event
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count(*) as person_count, 0 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #qualified_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 0 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count(i.event_id) as person_count
  from #qualified_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count(event_id) as total from #qualified_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 0 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule' 
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 0;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 0 as mode_id
FROM
(select count(event_id) as total from #qualified_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 0 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - event

-- BEGIN: Inclusion Impact Analysis - person
-- calculte matching group counts
delete from @results_database_schema.cohort_inclusion_result where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_result (cohort_definition_id, inclusion_rule_mask, person_count, mode_id)
select @target_cohort_id as cohort_definition_id, inclusion_rule_mask, count(*) as person_count, 1 as mode_id
from
(
  select Q.person_id, Q.event_id, CAST(SUM(coalesce(POWER(cast(2 as bigint), I.inclusion_rule_id), 0)) AS bigint) as inclusion_rule_mask
  from #best_events Q
  LEFT JOIN #inclusion_events I on q.person_id = i.person_id and q.event_id = i.event_id
  GROUP BY Q.person_id, Q.event_id
) MG -- matching groups
group by inclusion_rule_mask
;

-- calculate gain counts 
delete from @results_database_schema.cohort_inclusion_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_inclusion_stats (cohort_definition_id, rule_sequence, person_count, gain_count, person_total, mode_id)
select ir.cohort_definition_id, ir.rule_sequence, coalesce(T.person_count, 0) as person_count, coalesce(SR.person_count, 0) gain_count, EventTotal.total, 1 as mode_id
from @results_database_schema.cohort_inclusion ir
left join
(
  select i.inclusion_rule_id, count(i.event_id) as person_count
  from #best_events Q
  JOIN #inclusion_events i on Q.person_id = I.person_id and Q.event_id = i.event_id
  group by i.inclusion_rule_id
) T on ir.rule_sequence = T.inclusion_rule_id
CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
CROSS JOIN (select count(event_id) as total from #best_events) EventTotal
LEFT JOIN @results_database_schema.cohort_inclusion_result SR on SR.mode_id = 1 AND SR.cohort_definition_id = @target_cohort_id AND (POWER(cast(2 as bigint),RuleTotal.total_rules) - POWER(cast(2 as bigint),ir.rule_sequence) - 1) = SR.inclusion_rule_mask -- POWER(2,rule count) - POWER(2,rule sequence) - 1 is the mask for 'all except this rule' 
WHERE ir.cohort_definition_id = @target_cohort_id
;

-- calculate totals
delete from @results_database_schema.cohort_summary_stats where cohort_definition_id = @target_cohort_id and mode_id = 1;
insert into @results_database_schema.cohort_summary_stats (cohort_definition_id, base_count, final_count, mode_id)
select @target_cohort_id as cohort_definition_id, PC.total as person_count, coalesce(FC.total, 0) as final_count, 1 as mode_id
FROM
(select count(event_id) as total from #best_events) PC,
(select sum(sr.person_count) as total
  from @results_database_schema.cohort_inclusion_result sr
  CROSS JOIN (select count(*) as total_rules from @results_database_schema.cohort_inclusion where cohort_definition_id = @target_cohort_id) RuleTotal
  where sr.mode_id = 1 and sr.cohort_definition_id = @target_cohort_id and sr.inclusion_rule_mask = POWER(cast(2 as bigint),RuleTotal.total_rules)-1
) FC
;

-- END: Inclusion Impact Analysis - person

TRUNCATE TABLE #best_events;
DROP TABLE #best_events;



TRUNCATE TABLE #strategy_ends;
DROP TABLE #strategy_ends;


TRUNCATE TABLE #cohort_rows;
DROP TABLE #cohort_rows;

TRUNCATE TABLE #final_cohort;
DROP TABLE #final_cohort;

TRUNCATE TABLE #inclusion_events;
DROP TABLE #inclusion_events;

TRUNCATE TABLE #qualified_events;
DROP TABLE #qualified_events;

TRUNCATE TABLE #included_events;
DROP TABLE #included_events;

TRUNCATE TABLE #Codesets;
DROP TABLE #Codesets;
","{
  ""ConceptSets"": [
    {
      ""id"": 0,
      ""name"": ""COVID-19 (including asymptomatic)"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""840539006"",
              ""CONCEPT_ID"": 37311061,
              ""CONCEPT_NAME"": ""Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 1,
      ""name"": ""COVID-19 specific testing (pre-coordinated Measurements) - Positive"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""1240581000000104"",
              ""CONCEPT_ID"": 37310282,
              ""CONCEPT_NAME"": ""2019 novel coronavirus detected"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 2,
      ""name"": ""COVID-19 specific testing (pre-coordinated Measurements excluded)"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""1240581000000104"",
              ""CONCEPT_ID"": 37310282,
              ""CONCEPT_NAME"": ""2019 novel coronavirus detected"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""1240591000000102"",
              ""CONCEPT_ID"": 37310281,
              ""CONCEPT_NAME"": ""2019 novel coronavirus not detected"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Procedure"",
              ""CONCEPT_CODE"": ""OMOP4873969"",
              ""CONCEPT_ID"": 756055,
              ""CONCEPT_NAME"": ""Measurement of severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""OMOP Extension""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 3,
      ""name"": ""COVID-19 source codes"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100"",
              ""CONCEPT_ID"": 710158,
              ""CONCEPT_NAME"": ""COVID-19 (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100x003"",
              ""CONCEPT_ID"": 710155,
              ""CONCEPT_NAME"": ""COVID-19 pneumonia (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100x001"",
              ""CONCEPT_ID"": 710156,
              ""CONCEPT_NAME"": ""COVID-19 pneumonia (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.100x002"",
              ""CONCEPT_ID"": 710159,
              ""CONCEPT_NAME"": ""Confirmed COVID-19, excluding pneumonia (machine translation)"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""6-char billing code"",
              ""CONCEPT_CODE"": ""Z20.828"",
              ""CONCEPT_ID"": 45542411,
              ""CONCEPT_NAME"": ""Contact with and (suspected) exposure to other viral communicable diseases"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CM""
            },
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.1"",
              ""CONCEPT_ID"": 710160,
              ""CONCEPT_NAME"": ""Emergency use of U07.1 | Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""U07.1"",
              ""CONCEPT_ID"": 45756093,
              ""CONCEPT_NAME"": ""Emergency use of U07.1 | Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""KCD7 code"",
              ""CONCEPT_CODE"": ""U07.1"",
              ""CONCEPT_ID"": 42501115,
              ""CONCEPT_NAME"": ""Emergency use of U07.1 | Disease caused by severe acute respiratory syndrome coronavirus 2"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""KCD7""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""KCD7 code"",
              ""CONCEPT_CODE"": ""U18.1"",
              ""CONCEPT_ID"": 586414,
              ""CONCEPT_NAME"": ""Novel coronavirus infection"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""KCD7""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""5-char billing code"",
              ""CONCEPT_CODE"": ""B97.29"",
              ""CONCEPT_ID"": 45600471,
              ""CONCEPT_NAME"": ""Other coronavirus as the cause of diseases classified elsewhere"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CM""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""KCD7 code"",
              ""CONCEPT_CODE"": ""U18"",
              ""CONCEPT_ID"": 586415,
              ""CONCEPT_NAME"": ""Provisional assignment of new diseases or emergency use"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""KCD7""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""Z03.800x001"",
              ""CONCEPT_ID"": 710157,
              ""CONCEPT_NAME"": ""Suspected case of COVID-19 (machine translation)"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            },
            ""isExcluded"": true
          }
        ]
      }
    },
    {
      ""id"": 4,
      ""name"": ""[OHDSI Covid19 v1] Inpatient Visit"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Visit"",
              ""CONCEPT_CODE"": ""ERIP"",
              ""CONCEPT_ID"": 262,
              ""CONCEPT_NAME"": ""Emergency Room and Inpatient Visit"",
              ""DOMAIN_ID"": ""Visit"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""Visit""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Visit"",
              ""CONCEPT_CODE"": ""IP"",
              ""CONCEPT_ID"": 9201,
              ""CONCEPT_NAME"": ""Inpatient Visit"",
              ""DOMAIN_ID"": ""Visit"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""Visit""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 5,
      ""name"": ""[COVID19 v1] Fever (38.0<c2><b0>C or higher) pre-coordinated measurement and conditions"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""240822009"",
              ""CONCEPT_ID"": 4346179,
              ""CONCEPT_NAME"": ""Bancroftian filarial fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""49513005"",
              ""CONCEPT_ID"": 4170869,
              ""CONCEPT_NAME"": ""Dehydration fever in newborn"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""405543000"",
              ""CONCEPT_ID"": 4226022,
              ""CONCEPT_NAME"": ""Drug-induced hyperpyrexia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""784372002"",
              ""CONCEPT_ID"": 37205085,
              ""CONCEPT_NAME"": ""Familial mesial temporal lobe epilepsy with febrile seizures"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""41497008"",
              ""CONCEPT_ID"": 444413,
              ""CONCEPT_NAME"": ""Febrile convulsion"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""386661006"",
              ""CONCEPT_ID"": 437663,
              ""CONCEPT_NAME"": ""Fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""426000000"",
              ""CONCEPT_ID"": 4141062,
              ""CONCEPT_NAME"": ""Fever greater than 100.4 Fahrenheit"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""95627000"",
              ""CONCEPT_ID"": 4318555,
              ""CONCEPT_NAME"": ""Fever of the newborn"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""713014002"",
              ""CONCEPT_ID"": 37016869,
              ""CONCEPT_NAME"": ""Infection caused by Borrelia miyamotoi"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""14683004"",
              ""CONCEPT_ID"": 443908,
              ""CONCEPT_NAME"": ""Louse-borne relapsing fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248437004"",
              ""CONCEPT_ID"": 4093997,
              ""CONCEPT_NAME"": ""Malarial fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""240827003"",
              ""CONCEPT_ID"": 4347651,
              ""CONCEPT_NAME"": ""Malayan filarial fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""405501007"",
              ""CONCEPT_ID"": 440285,
              ""CONCEPT_NAME"": ""Malignant hyperthermia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248441000"",
              ""CONCEPT_ID"": 4087628,
              ""CONCEPT_NAME"": ""Malignant tertian fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""267340006"",
              ""CONCEPT_ID"": 4143214,
              ""CONCEPT_NAME"": ""Maternal pyrexia in labor"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""271897009"",
              ""CONCEPT_ID"": 4152360,
              ""CONCEPT_NAME"": ""O/E - fever"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164299002"",
              ""CONCEPT_ID"": 4039793,
              ""CONCEPT_NAME"": ""O/E - level of fever"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""717231003"",
              ""CONCEPT_ID"": 37397178,
              ""CONCEPT_NAME"": ""PFAPA syndrome"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""449129007"",
              ""CONCEPT_ID"": 40493465,
              ""CONCEPT_NAME"": ""Paraneoplastic fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""52715007"",
              ""CONCEPT_ID"": 4199309,
              ""CONCEPT_NAME"": ""Pel Ebstein fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""698579002"",
              ""CONCEPT_ID"": 44784428,
              ""CONCEPT_NAME"": ""Post diphtheria vaccination fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""698578005"",
              ""CONCEPT_ID"": 44784427,
              ""CONCEPT_NAME"": ""Post diphtheria, tetanus and pertussis vaccination fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""698581000"",
              ""CONCEPT_ID"": 44784429,
              ""CONCEPT_NAME"": ""Post pertussis vaccination fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""698580004"",
              ""CONCEPT_ID"": 44782483,
              ""CONCEPT_NAME"": ""Post tetanus vaccination fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""123471000119103"",
              ""CONCEPT_ID"": 43530646,
              ""CONCEPT_NAME"": ""Post vaccination fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248450003"",
              ""CONCEPT_ID"": 4086668,
              ""CONCEPT_NAME"": ""Postoperative fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""17670001000004108"",
              ""CONCEPT_ID"": 3197956,
              ""CONCEPT_NAME"": ""Postoperative fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""Nebraska Lexicon""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248451004"",
              ""CONCEPT_ID"": 4094003,
              ""CONCEPT_NAME"": ""Postpartum fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""130091000119103"",
              ""CONCEPT_ID"": 43530637,
              ""CONCEPT_NAME"": ""Postprocedural fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""713731001"",
              ""CONCEPT_ID"": 37017455,
              ""CONCEPT_NAME"": ""Pyrexia of unknown origin co-occurrent with human immunodeficiency virus infection"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248442007"",
              ""CONCEPT_ID"": 4087629,
              ""CONCEPT_NAME"": ""Quartan fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""31120005"",
              ""CONCEPT_ID"": 4150518,
              ""CONCEPT_NAME"": ""Relapsing fever of Asia AND/OR Africa"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""43626008"",
              ""CONCEPT_ID"": 4184347,
              ""CONCEPT_NAME"": ""Relapsing fever of Central AND/OR South Africa"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""74873003"",
              ""CONCEPT_ID"": 4326408,
              ""CONCEPT_NAME"": ""Relapsing fever of Central AND/OR South America"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""52635002"",
              ""CONCEPT_ID"": 4200980,
              ""CONCEPT_NAME"": ""Relapsing fever of Iberian Peninsula AND/OR Northwest Africa"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""88808006"",
              ""CONCEPT_ID"": 4229442,
              ""CONCEPT_NAME"": ""Relapsing fever of Iran AND/OR Central Asia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""58827009"",
              ""CONCEPT_ID"": 4239624,
              ""CONCEPT_NAME"": ""Relapsing fever of Southern U.S., Mexico, Central AND/OR South America"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""78168002"",
              ""CONCEPT_ID"": 4300533,
              ""CONCEPT_NAME"": ""Relapsing fever of Western North America"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""39002001"",
              ""CONCEPT_ID"": 4308214,
              ""CONCEPT_NAME"": ""Relapsing fever of Western United States"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""27578005"",
              ""CONCEPT_ID"": 4099900,
              ""CONCEPT_NAME"": ""Relapsing fever of the Caucasus"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248446005"",
              ""CONCEPT_ID"": 4094000,
              ""CONCEPT_NAME"": ""Reversed diurnal fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248440004"",
              ""CONCEPT_ID"": 4087017,
              ""CONCEPT_NAME"": ""Tertian fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""10301003"",
              ""CONCEPT_ID"": 438963,
              ""CONCEPT_NAME"": ""Tick-borne relapsing fever"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""60025004"",
              ""CONCEPT_ID"": 4243806,
              ""CONCEPT_NAME"": ""Transitory fever of newborn"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 6,
      ""name"": ""[COVID19 V1] Fever (38.0<c2><b0>C or higher) measurement and observation"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8328-7"",
              ""CONCEPT_ID"": 3025085,
              ""CONCEPT_NAME"": ""Axillary temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""76278-1"",
              ""CONCEPT_ID"": 21490870,
              ""CONCEPT_NAME"": ""Bladder temperature via Foley"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""61008-9"",
              ""CONCEPT_ID"": 21490688,
              ""CONCEPT_NAME"": ""Body surface temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8310-5"",
              ""CONCEPT_ID"": 3020891,
              ""CONCEPT_NAME"": ""Body temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8329-5"",
              ""CONCEPT_ID"": 3025926,
              ""CONCEPT_NAME"": ""Body temperature - Core"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8334-5"",
              ""CONCEPT_ID"": 3025704,
              ""CONCEPT_NAME"": ""Body temperature - Urinary bladder"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8321-2"",
              ""CONCEPT_ID"": 3017614,
              ""CONCEPT_NAME"": ""Body temperature 1 hour"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8311-3"",
              ""CONCEPT_ID"": 3011783,
              ""CONCEPT_NAME"": ""Body temperature 1 hour maximum"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8323-8"",
              ""CONCEPT_ID"": 3004750,
              ""CONCEPT_NAME"": ""Body temperature 10 hour"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8313-9"",
              ""CONCEPT_ID"": 3008557,
              ""CONCEPT_NAME"": ""Body temperature 10 hour maximum"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8324-6"",
              ""CONCEPT_ID"": 3007846,
              ""CONCEPT_NAME"": ""Body temperature 12 hour"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8314-7"",
              ""CONCEPT_ID"": 3016117,
              ""CONCEPT_NAME"": ""Body temperature 12 hour maximum"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8325-3"",
              ""CONCEPT_ID"": 3006749,
              ""CONCEPT_NAME"": ""Body temperature 24 hour"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8315-4"",
              ""CONCEPT_ID"": 3016715,
              ""CONCEPT_NAME"": ""Body temperature 24 hour maximum"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8322-0"",
              ""CONCEPT_ID"": 3018145,
              ""CONCEPT_NAME"": ""Body temperature 8 hour"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8312-1"",
              ""CONCEPT_ID"": 3015039,
              ""CONCEPT_NAME"": ""Body temperature 8 hour maximum"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""11289-6"",
              ""CONCEPT_ID"": 3009553,
              ""CONCEPT_NAME"": ""Body temperature at First encounter"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""431807005"",
              ""CONCEPT_ID"": 4329518,
              ""CONCEPT_NAME"": ""Body temperature taken with digital thermometer"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""276885007"",
              ""CONCEPT_ID"": 4174894,
              ""CONCEPT_NAME"": ""Core body temperature"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""76011-6"",
              ""CONCEPT_ID"": 21490907,
              ""CONCEPT_NAME"": ""Ear temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""60836-4"",
              ""CONCEPT_ID"": 21490588,
              ""CONCEPT_NAME"": ""Esophageal temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""415922000"",
              ""CONCEPT_ID"": 4212763,
              ""CONCEPT_NAME"": ""Forehead temperature"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""415929009"",
              ""CONCEPT_ID"": 4189949,
              ""CONCEPT_NAME"": ""Groin temperature"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""852591000000107"",
              ""CONCEPT_ID"": 44809208,
              ""CONCEPT_NAME"": ""Maximum body temperature"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""76010-8"",
              ""CONCEPT_ID"": 21490906,
              ""CONCEPT_NAME"": ""Nasal temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""60838-0"",
              ""CONCEPT_ID"": 21490590,
              ""CONCEPT_NAME"": ""Nasopharyngeal temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164292006"",
              ""CONCEPT_ID"": 4040476,
              ""CONCEPT_NAME"": ""O/E - axillary temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164295008"",
              ""CONCEPT_ID"": 4039792,
              ""CONCEPT_NAME"": ""O/E - core temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164293001"",
              ""CONCEPT_ID"": 4040104,
              ""CONCEPT_NAME"": ""O/E - groin temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""274308003"",
              ""CONCEPT_ID"": 4164378,
              ""CONCEPT_NAME"": ""O/E - hyperpyrexia"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164304001"",
              ""CONCEPT_ID"": 4039796,
              ""CONCEPT_NAME"": ""O/E - hyperpyrexia - greater than 40.5 degrees Celsius"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164299002"",
              ""CONCEPT_ID"": 4039793,
              ""CONCEPT_NAME"": ""O/E - level of fever"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""275874003"",
              ""CONCEPT_ID"": 4077057,
              ""CONCEPT_NAME"": ""O/E - oral temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164294007"",
              ""CONCEPT_ID"": 4039791,
              ""CONCEPT_NAME"": ""O/E - rectal temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164303007"",
              ""CONCEPT_ID"": 4039795,
              ""CONCEPT_NAME"": ""O/E - temperature elevated"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164301009"",
              ""CONCEPT_ID"": 4040106,
              ""CONCEPT_NAME"": ""O/E - temperature low"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""164300005"",
              ""CONCEPT_ID"": 4039794,
              ""CONCEPT_NAME"": ""O/E - temperature normal"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""315632006"",
              ""CONCEPT_ID"": 4151775,
              ""CONCEPT_NAME"": ""O/E - tympanic temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""163633002"",
              ""CONCEPT_ID"": 4038778,
              ""CONCEPT_NAME"": ""O/E -skin temperature abnormal"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8331-1"",
              ""CONCEPT_ID"": 3006322,
              ""CONCEPT_NAME"": ""Oral temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8332-9"",
              ""CONCEPT_ID"": 3022060,
              ""CONCEPT_NAME"": ""Rectal temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""708499008"",
              ""CONCEPT_ID"": 45769775,
              ""CONCEPT_NAME"": ""Temperature of neonate at birth"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""364537001"",
              ""CONCEPT_ID"": 4265708,
              ""CONCEPT_NAME"": ""Temperature of skin"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Observable Entity"",
              ""CONCEPT_CODE"": ""364246006"",
              ""CONCEPT_ID"": 4267945,
              ""CONCEPT_NAME"": ""Temperature of vagina"",
              ""DOMAIN_ID"": ""Observation"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Observation"",
              ""CONCEPT_CODE"": ""8333-7"",
              ""CONCEPT_ID"": 3025163,
              ""CONCEPT_NAME"": ""Tympanic membrane temperature"",
              ""DOMAIN_ID"": ""Measurement"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""LOINC""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 7,
      ""name"": ""[OHDSI Cov19] Cough"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""49727002"",
              ""CONCEPT_ID"": 254761,
              ""CONCEPT_NAME"": ""Cough"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""248595008"",
              ""CONCEPT_ID"": 4089228,
              ""CONCEPT_NAME"": ""Sputum finding"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 8,
      ""name"": ""[COVID V1] Shortness of breath (dyspnea)"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""373895009"",
              ""CONCEPT_ID"": 4191650,
              ""CONCEPT_NAME"": ""Acute respiratory distress"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""401275008"",
              ""CONCEPT_ID"": 4222908,
              ""CONCEPT_NAME"": ""Borg Breathlessness Score: 0 none at all"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true,
            ""isExcluded"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""267036007"",
              ""CONCEPT_ID"": 312437,
              ""CONCEPT_NAME"": ""Dyspnea"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 9,
      ""name"": ""[COVID19 v1] Myalgia"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""95416007"",
              ""CONCEPT_ID"": 258828,
              ""CONCEPT_NAME"": ""Eosinophilia myalgia syndrome"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""76821002"",
              ""CONCEPT_ID"": 4298555,
              ""CONCEPT_NAME"": ""Epidemic cervical myalgia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""83264000"",
              ""CONCEPT_ID"": 195464,
              ""CONCEPT_NAME"": ""Epidemic pleurodynia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""56557000"",
              ""CONCEPT_ID"": 442315,
              ""CONCEPT_NAME"": ""Fibrositis"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""240044003"",
              ""CONCEPT_ID"": 4347181,
              ""CONCEPT_NAME"": ""Fibrositis and nodular fasciitis"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""63491006"",
              ""CONCEPT_ID"": 442774,
              ""CONCEPT_NAME"": ""Intermittent claudication"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""68962001"",
              ""CONCEPT_ID"": 442752,
              ""CONCEPT_NAME"": ""Muscle pain"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""16462851000119106"",
              ""CONCEPT_ID"": 36713056,
              ""CONCEPT_NAME"": ""Myalgia caused by statin"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""726531007"",
              ""CONCEPT_ID"": 37118025,
              ""CONCEPT_NAME"": ""Myofascial pain syndrome"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""95417003"",
              ""CONCEPT_ID"": 4316217,
              ""CONCEPT_NAME"": ""Primary fibromyalgia syndrome"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""788465007"",
              ""CONCEPT_ID"": 37312366,
              ""CONCEPT_NAME"": ""RSIS - Repetitive strain injury syndrome"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""957311000000101"",
              ""CONCEPT_ID"": 46284893,
              ""CONCEPT_NAME"": ""Secondary fibromyalgia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 10,
      ""name"": ""[Covid19 V1] Malaise or Fatigue or (Malaise and Fatigue)"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""272036004"",
              ""CONCEPT_ID"": 4158491,
              ""CONCEPT_NAME"": ""C/O - debility - malaise"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""716749005"",
              ""CONCEPT_ID"": 37396808,
              ""CONCEPT_NAME"": ""Cancer-related fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""82022002"",
              ""CONCEPT_ID"": 4219363,
              ""CONCEPT_NAME"": ""Congenital debility of fetus"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""84229001"",
              ""CONCEPT_ID"": 4223659,
              ""CONCEPT_NAME"": ""Fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""420900006"",
              ""CONCEPT_ID"": 4221911,
              ""CONCEPT_NAME"": ""Fatigue associated with AIDS"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""784317004"",
              ""CONCEPT_ID"": 37205051,
              ""CONCEPT_NAME"": ""Fatigue due to chemotherapy"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""784318009"",
              ""CONCEPT_ID"": 37205052,
              ""CONCEPT_NAME"": ""Fatigue due to radiation therapy"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""704369007"",
              ""CONCEPT_ID"": 45772721,
              ""CONCEPT_NAME"": ""Fatigue due to treatment"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""367391008"",
              ""CONCEPT_ID"": 4272240,
              ""CONCEPT_NAME"": ""Malaise"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""3-char nonbill code"",
              ""CONCEPT_CODE"": ""R53"",
              ""CONCEPT_ID"": 1572255,
              ""CONCEPT_NAME"": ""Malaise and fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CM""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""271795006"",
              ""CONCEPT_ID"": 439926,
              ""CONCEPT_NAME"": ""Malaise and fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""4-dig nonbill code"",
              ""CONCEPT_CODE"": ""780.7"",
              ""CONCEPT_ID"": 44829293,
              ""CONCEPT_NAME"": ""Malaise and fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD9CM""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""420801006"",
              ""CONCEPT_ID"": 4225027,
              ""CONCEPT_NAME"": ""Malaise associated with AIDS"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""5-dig billing code"",
              ""CONCEPT_CODE"": ""780.79"",
              ""CONCEPT_ID"": 44823445,
              ""CONCEPT_NAME"": ""Other malaise and fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD9CM""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""4-char nonbill code"",
              ""CONCEPT_CODE"": ""R53.8"",
              ""CONCEPT_ID"": 1572256,
              ""CONCEPT_NAME"": ""Other malaise and fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CM""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""444042007"",
              ""CONCEPT_ID"": 40484614,
              ""CONCEPT_NAME"": ""Postexertional fatigue"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""250002000"",
              ""CONCEPT_ID"": 4092860,
              ""CONCEPT_NAME"": ""Rapid fatigue of gait"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""18726006"",
              ""CONCEPT_ID"": 4090207,
              ""CONCEPT_NAME"": ""Senile asthenia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""148871000119109"",
              ""CONCEPT_ID"": 44782753,
              ""CONCEPT_NAME"": ""Weakness as a late effect of stroke"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 11,
      ""name"": ""[COVID19 v1] Pneumonia"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""184431000119108"",
              ""CONCEPT_ID"": 45770911,
              ""CONCEPT_NAME"": ""Acute pneumonia due to coccidioidomycosis"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""109814008"",
              ""CONCEPT_ID"": 4001167,
              ""CONCEPT_NAME"": ""Acute ulcerative gastroenteritis complicating pneumonia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""233606009"",
              ""CONCEPT_ID"": 4050869,
              ""CONCEPT_NAME"": ""Atypical pneumonia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""233613009"",
              ""CONCEPT_ID"": 4049965,
              ""CONCEPT_NAME"": ""Fungal pneumonia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""12381000132107"",
              ""CONCEPT_ID"": 36712839,
              ""CONCEPT_NAME"": ""Idiopathic pneumonia syndrome"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""81164001"",
              ""CONCEPT_ID"": 252552,
              ""CONCEPT_NAME"": ""Ornithosis with pneumonia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""isExcluded"": true,
            ""includeDescendants"": true
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Clinical Finding"",
              ""CONCEPT_CODE"": ""233604007"",
              ""CONCEPT_ID"": 255848,
              ""CONCEPT_NAME"": ""Pneumonia"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            },
            ""includeDescendants"": true
          }
        ]
      }
    },
    {
      ""id"": 12,
      ""name"": ""COVID-19 Suspected OR Suspected unspecific coronavirus infection - Source and Standard terminology"",
      ""expression"": {
        ""items"": [
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""ICD10 code"",
              ""CONCEPT_CODE"": ""Z03.800x001"",
              ""CONCEPT_ID"": 710157,
              ""CONCEPT_NAME"": ""Suspected case of COVID-19 (machine translation)"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""N"",
              ""STANDARD_CONCEPT_CAPTION"": ""Non-Standard"",
              ""VOCABULARY_ID"": ""ICD10CN""
            }
          },
          {
            ""concept"": {
              ""CONCEPT_CLASS_ID"": ""Context-dependent"",
              ""CONCEPT_CODE"": ""700217006"",
              ""CONCEPT_ID"": 45763724,
              ""CONCEPT_NAME"": ""Suspected coronavirus infection"",
              ""DOMAIN_ID"": ""Condition"",
              ""INVALID_REASON"": ""V"",
              ""INVALID_REASON_CAPTION"": ""Valid"",
              ""STANDARD_CONCEPT"": ""S"",
              ""STANDARD_CONCEPT_CAPTION"": ""Standard"",
              ""VOCABULARY_ID"": ""SNOMED""
            }
          }
        ]
      }
    }
  ],
  ""PrimaryCriteria"": {
    ""CriteriaList"": [
      {
        ""VisitOccurrence"": {
          ""CodesetId"": 4,
          ""OccurrenceStartDate"": {
            ""Value"": ""2019-12-01"",
            ""Op"": ""gt""
          }
        }
      }
    ],
    ""ObservationWindow"": {
      ""PriorDays"": [0],
      ""PostDays"": [0]
    },
    ""PrimaryCriteriaLimit"": {
      ""Type"": [""All""]
    }
  },
  ""AdditionalCriteria"": {
    ""Type"": [""ANY""],
    ""CriteriaList"": [
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {
            ""CodesetId"": 0
          },
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {
            ""ConditionSourceConcept"": 3
          },
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""CodesetId"": 1,
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""CodesetId"": 2,
            ""ValueAsConcept"": [
              {
                ""CONCEPT_CODE"": ""260373001"",
                ""CONCEPT_ID"": 4126681,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA11882-0"",
                ""CONCEPT_ID"": 45877985,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""10828004"",
                ""CONCEPT_ID"": 9191,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""52101004"",
                ""CONCEPT_ID"": 4181412,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA9633-4"",
                ""CONCEPT_ID"": 45879438,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""LA6576-8"",
                ""CONCEPT_ID"": 45884084,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              }
            ]
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""CodesetId"": 2,
            ""ValueAsConcept"": [
              {
                ""CONCEPT_CODE"": ""260373001"",
                ""CONCEPT_ID"": 4126681,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA11882-0"",
                ""CONCEPT_ID"": 45877985,
                ""CONCEPT_NAME"": ""Detected"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""10828004"",
                ""CONCEPT_ID"": 9191,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA6576-8"",
                ""CONCEPT_ID"": 45884084,
                ""CONCEPT_NAME"": ""Positive"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              },
              {
                ""CONCEPT_CODE"": ""52101004"",
                ""CONCEPT_ID"": 4181412,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""SNOMED""
              },
              {
                ""CONCEPT_CODE"": ""LA9633-4"",
                ""CONCEPT_ID"": 45879438,
                ""CONCEPT_NAME"": ""Present"",
                ""DOMAIN_ID"": ""Meas Value"",
                ""INVALID_REASON_CAPTION"": ""Unknown"",
                ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                ""VOCABULARY_ID"": ""LOINC""
              }
            ]
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {},
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {},
            ""ObservationSourceConcept"": 3
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {
            ""CodesetId"": 12
          },
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      },
      {
        ""Criteria"": {
          ""ConditionOccurrence"": {
            ""ConditionSourceConcept"": 12
          },
          ""Measurement"": {
            ""ValueAsConcept"": {}
          },
          ""Observation"": {
            ""ValueAsConcept"": {}
          }
        },
        ""StartWindow"": {
          ""Start"": {
            ""Days"": 21,
            ""Coeff"": -1
          },
          ""End"": {
            ""Coeff"": 1
          },
          ""UseEventEnd"": false
        },
        ""EndWindow"": {
          ""Start"": {
            ""Coeff"": -1
          },
          ""End"": {
            ""Days"": 0,
            ""Coeff"": 1
          },
          ""UseIndexEnd"": true,
          ""UseEventEnd"": false
        },
        ""Occurrence"": {
          ""Type"": 2,
          ""Count"": 1
        }
      }
    ],
    ""DemographicCriteriaList"": [],
    ""Groups"": [
      {
        ""Type"": ""ALL"",
        ""CriteriaList"": [],
        ""DemographicCriteriaList"": [],
        ""Groups"": [
          {
            ""Type"": ""ANY"",
            ""CriteriaList"": [
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""CodesetId"": 5
                  },
                  ""Measurement"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  },
                  ""Observation"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {},
                  ""Measurement"": {
                    ""CodesetId"": 5,
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  },
                  ""Observation"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {},
                  ""Measurement"": {
                    ""CodesetId"": 6,
                    ""ValueAsNumber"": {
                      ""Value"": 38,
                      ""Extent"": 42,
                      ""Op"": ""bt""
                    },
                    ""Unit"": [
                      {
                        ""CONCEPT_CODE"": ""Cel"",
                        ""CONCEPT_ID"": 586323,
                        ""CONCEPT_NAME"": ""degree Celsius"",
                        ""DOMAIN_ID"": ""Unit"",
                        ""INVALID_REASON_CAPTION"": ""Unknown"",
                        ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                        ""VOCABULARY_ID"": ""UCUM""
                      }
                    ]
                  },
                  ""Observation"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {},
                  ""Measurement"": {
                    ""CodesetId"": 6,
                    ""ValueAsNumber"": {
                      ""Value"": 100.4,
                      ""Extent"": 120,
                      ""Op"": ""bt""
                    },
                    ""Unit"": [
                      {
                        ""CONCEPT_CODE"": ""[degF]"",
                        ""CONCEPT_ID"": 9289,
                        ""CONCEPT_NAME"": ""degree Fahrenheit"",
                        ""DOMAIN_ID"": ""Unit"",
                        ""INVALID_REASON_CAPTION"": ""Unknown"",
                        ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                        ""VOCABULARY_ID"": ""UCUM""
                      }
                    ]
                  },
                  ""Observation"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {},
                  ""Measurement"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  },
                  ""Observation"": {
                    ""CodesetId"": 6,
                    ""ValueAsNumber"": {
                      ""Value"": 38,
                      ""Extent"": 42,
                      ""Op"": ""bt""
                    },
                    ""Unit"": [
                      {
                        ""CONCEPT_CODE"": ""Cel"",
                        ""CONCEPT_ID"": 586323,
                        ""CONCEPT_NAME"": ""degree Celsius"",
                        ""DOMAIN_ID"": ""Unit"",
                        ""INVALID_REASON_CAPTION"": ""Unknown"",
                        ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                        ""VOCABULARY_ID"": ""UCUM""
                      }
                    ]
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {},
                  ""Measurement"": {
                    ""ValueAsNumber"": {},
                    ""Unit"": {}
                  },
                  ""Observation"": {
                    ""CodesetId"": 6,
                    ""ValueAsNumber"": {
                      ""Value"": 100.4,
                      ""Extent"": 120,
                      ""Op"": ""bt""
                    },
                    ""Unit"": [
                      {
                        ""CONCEPT_CODE"": ""[degF]"",
                        ""CONCEPT_ID"": 9289,
                        ""CONCEPT_NAME"": ""degree Fahrenheit"",
                        ""DOMAIN_ID"": ""Unit"",
                        ""INVALID_REASON_CAPTION"": ""Unknown"",
                        ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                        ""VOCABULARY_ID"": ""UCUM""
                      }
                    ]
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              }
            ],
            ""DemographicCriteriaList"": [],
            ""Groups"": []
          },
          {
            ""Type"": ""ANY"",
            ""CriteriaList"": [
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""CodesetId"": 7
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""CodesetId"": 8
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""CodesetId"": 9
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""CodesetId"": 10
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""ConditionSourceConcept"": 10
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              },
              {
                ""Criteria"": {
                  ""ConditionOccurrence"": {
                    ""CodesetId"": 11
                  }
                },
                ""StartWindow"": {
                  ""Start"": {
                    ""Days"": 21,
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Coeff"": 1
                  },
                  ""UseEventEnd"": false
                },
                ""EndWindow"": {
                  ""Start"": {
                    ""Coeff"": -1
                  },
                  ""End"": {
                    ""Days"": 0,
                    ""Coeff"": 1
                  },
                  ""UseIndexEnd"": true,
                  ""UseEventEnd"": false
                },
                ""Occurrence"": {
                  ""Type"": 2,
                  ""Count"": 1
                }
              }
            ],
            ""DemographicCriteriaList"": [],
            ""Groups"": []
          }
        ]
      }
    ]
  },
  ""QualifiedLimit"": {
    ""Type"": [""All""]
  },
  ""ExpressionLimit"": {
    ""Type"": [""First""]
  },
  ""InclusionRules"": [
    {
      ""name"": ""age >=18"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [],
        ""DemographicCriteriaList"": [
          {
            ""Age"": {
              ""Value"": 18,
              ""Op"": ""gte""
            }
          }
        ],
        ""Groups"": []
      }
    },
    {
      ""name"": ""does not have hospitalization for COVID19 in the 6 months preceding admission"",
      ""expression"": {
        ""Type"": ""ALL"",
        ""CriteriaList"": [
          {
            ""Criteria"": {
              ""VisitOccurrence"": {
                ""CorrelatedCriteria"": {
                  ""Type"": ""ANY"",
                  ""CriteriaList"": [
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {
                          ""CodesetId"": 0
                        },
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {
                          ""ConditionSourceConcept"": 3
                        },
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""ObservationSourceConcept"": 3,
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""CodesetId"": 1,
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""CodesetId"": 2,
                          ""ValueAsConcept"": [
                            {
                              ""CONCEPT_CODE"": ""260373001"",
                              ""CONCEPT_ID"": 4126681,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA11882-0"",
                              ""CONCEPT_ID"": 45877985,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""10828004"",
                              ""CONCEPT_ID"": 9191,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA6576-8"",
                              ""CONCEPT_ID"": 45884084,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""52101004"",
                              ""CONCEPT_ID"": 4181412,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA9633-4"",
                              ""CONCEPT_ID"": 45879438,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            }
                          ]
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {},
                        ""Observation"": {
                          ""CodesetId"": 2,
                          ""ValueAsConcept"": [
                            {
                              ""CONCEPT_CODE"": ""260373001"",
                              ""CONCEPT_ID"": 4126681,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA11882-0"",
                              ""CONCEPT_ID"": 45877985,
                              ""CONCEPT_NAME"": ""Detected"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""10828004"",
                              ""CONCEPT_ID"": 9191,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA6576-8"",
                              ""CONCEPT_ID"": 45884084,
                              ""CONCEPT_NAME"": ""Positive"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            },
                            {
                              ""CONCEPT_CODE"": ""52101004"",
                              ""CONCEPT_ID"": 4181412,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""SNOMED""
                            },
                            {
                              ""CONCEPT_CODE"": ""LA9633-4"",
                              ""CONCEPT_ID"": 45879438,
                              ""CONCEPT_NAME"": ""Present"",
                              ""DOMAIN_ID"": ""Meas Value"",
                              ""INVALID_REASON_CAPTION"": ""Unknown"",
                              ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                              ""VOCABULARY_ID"": ""LOINC""
                            }
                          ]
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {
                          ""CodesetId"": 12
                        },
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    },
                    {
                      ""Criteria"": {
                        ""ConditionOccurrence"": {
                          ""ConditionSourceConcept"": 12
                        },
                        ""Observation"": {
                          ""ValueAsConcept"": {}
                        },
                        ""Measurement"": {
                          ""ValueAsConcept"": {}
                        }
                      },
                      ""StartWindow"": {
                        ""Start"": {
                          ""Days"": 21,
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Coeff"": 1
                        },
                        ""UseEventEnd"": false
                      },
                      ""EndWindow"": {
                        ""Start"": {
                          ""Coeff"": -1
                        },
                        ""End"": {
                          ""Days"": 0,
                          ""Coeff"": 1
                        },
                        ""UseIndexEnd"": true,
                        ""UseEventEnd"": false
                      },
                      ""Occurrence"": {
                        ""Type"": 2,
                        ""Count"": 1
                      }
                    }
                  ],
                  ""DemographicCriteriaList"": [],
                  ""Groups"": [
                    {
                      ""Type"": ""ALL"",
                      ""CriteriaList"": [],
                      ""DemographicCriteriaList"": [],
                      ""Groups"": [
                        {
                          ""Type"": ""ANY"",
                          ""CriteriaList"": [
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""CodesetId"": 5
                                },
                                ""Measurement"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                },
                                ""Observation"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseIndexEnd"": true,
                                ""UseEventEnd"": false
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {},
                                ""Measurement"": {
                                  ""CodesetId"": 5,
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                },
                                ""Observation"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseIndexEnd"": true,
                                ""UseEventEnd"": false
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {},
                                ""Measurement"": {
                                  ""CodesetId"": 6,
                                  ""ValueAsNumber"": {
                                    ""Value"": 38,
                                    ""Extent"": 42,
                                    ""Op"": ""bt""
                                  },
                                  ""Unit"": [
                                    {
                                      ""CONCEPT_CODE"": ""Cel"",
                                      ""CONCEPT_ID"": 586323,
                                      ""CONCEPT_NAME"": ""degree Celsius"",
                                      ""DOMAIN_ID"": ""Unit"",
                                      ""INVALID_REASON_CAPTION"": ""Unknown"",
                                      ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                                      ""VOCABULARY_ID"": ""UCUM""
                                    }
                                  ]
                                },
                                ""Observation"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseIndexEnd"": true,
                                ""UseEventEnd"": false
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {},
                                ""Measurement"": {
                                  ""CodesetId"": 6,
                                  ""ValueAsNumber"": {
                                    ""Value"": 100.4,
                                    ""Extent"": 120,
                                    ""Op"": ""bt""
                                  },
                                  ""Unit"": [
                                    {
                                      ""CONCEPT_CODE"": ""[degF]"",
                                      ""CONCEPT_ID"": 9289,
                                      ""CONCEPT_NAME"": ""degree Fahrenheit"",
                                      ""DOMAIN_ID"": ""Unit"",
                                      ""INVALID_REASON_CAPTION"": ""Unknown"",
                                      ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                                      ""VOCABULARY_ID"": ""UCUM""
                                    }
                                  ]
                                },
                                ""Observation"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseIndexEnd"": true,
                                ""UseEventEnd"": false
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {},
                                ""Measurement"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                },
                                ""Observation"": {
                                  ""CodesetId"": 6,
                                  ""ValueAsNumber"": {
                                    ""Value"": 38,
                                    ""Extent"": 42,
                                    ""Op"": ""bt""
                                  },
                                  ""Unit"": [
                                    {
                                      ""CONCEPT_CODE"": ""Cel"",
                                      ""CONCEPT_ID"": 586323,
                                      ""CONCEPT_NAME"": ""degree Celsius"",
                                      ""DOMAIN_ID"": ""Unit"",
                                      ""INVALID_REASON_CAPTION"": ""Unknown"",
                                      ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                                      ""VOCABULARY_ID"": ""UCUM""
                                    }
                                  ]
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseIndexEnd"": true,
                                ""UseEventEnd"": false
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {},
                                ""Measurement"": {
                                  ""ValueAsNumber"": {},
                                  ""Unit"": {}
                                },
                                ""Observation"": {
                                  ""CodesetId"": 6,
                                  ""ValueAsNumber"": {
                                    ""Value"": 100.4,
                                    ""Extent"": 120,
                                    ""Op"": ""bt""
                                  },
                                  ""Unit"": [
                                    {
                                      ""CONCEPT_CODE"": ""[degF]"",
                                      ""CONCEPT_ID"": 9289,
                                      ""CONCEPT_NAME"": ""degree Fahrenheit"",
                                      ""DOMAIN_ID"": ""Unit"",
                                      ""INVALID_REASON_CAPTION"": ""Unknown"",
                                      ""STANDARD_CONCEPT_CAPTION"": ""Unknown"",
                                      ""VOCABULARY_ID"": ""UCUM""
                                    }
                                  ]
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseIndexEnd"": true,
                                ""UseEventEnd"": false
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            }
                          ],
                          ""DemographicCriteriaList"": [],
                          ""Groups"": []
                        },
                        {
                          ""Type"": ""ALL"",
                          ""CriteriaList"": [
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""CodesetId"": 7
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": true
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""CodesetId"": 8
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false,
                                ""UseIndexEnd"": true
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""CodesetId"": 9
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false,
                                ""UseIndexEnd"": true
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""CodesetId"": 10
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false,
                                ""UseIndexEnd"": true
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""ConditionSourceConcept"": 10
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false,
                                ""UseIndexEnd"": true
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            },
                            {
                              ""Criteria"": {
                                ""ConditionOccurrence"": {
                                  ""CodesetId"": 11
                                }
                              },
                              ""StartWindow"": {
                                ""Start"": {
                                  ""Days"": 21,
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false
                              },
                              ""EndWindow"": {
                                ""Start"": {
                                  ""Coeff"": -1
                                },
                                ""End"": {
                                  ""Days"": 0,
                                  ""Coeff"": 1
                                },
                                ""UseEventEnd"": false,
                                ""UseIndexEnd"": true
                              },
                              ""Occurrence"": {
                                ""Type"": 2,
                                ""Count"": 1
                              }
                            }
                          ],
                          ""DemographicCriteriaList"": [],
                          ""Groups"": []
                        }
                      ]
                    }
                  ]
                },
                ""CodesetId"": 4
              }
            },
            ""StartWindow"": {
              ""Start"": {
                ""Days"": 180,
                ""Coeff"": -1
              },
              ""End"": {
                ""Days"": 1,
                ""Coeff"": -1
              },
              ""UseEventEnd"": false
            },
            ""Occurrence"": {
              ""Type"": 0,
              ""Count"": 0
            }
          }
        ],
        ""DemographicCriteriaList"": [],
        ""Groups"": []
      }
    }
  ],
  ""EndStrategy"": {
    ""DateOffset"": {
      ""DateField"": [""EndDate""],
      ""Offset"": [0]
    }
  },
  ""CensoringCriteria"": [],
  ""CollapseSettings"": {
    ""CollapseType"": [""ERA""],
    ""EraPad"": [0]
  },
  ""CensorWindow"": {}
}
"
